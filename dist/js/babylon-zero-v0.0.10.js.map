{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/typescript/de/mayflower/bz/css/global.less","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/moment/locale/af.js","webpack:///./node_modules/moment/locale/ar-dz.js","webpack:///./node_modules/moment/locale/ar-kw.js","webpack:///./node_modules/moment/locale/ar-ly.js","webpack:///./node_modules/moment/locale/ar-ma.js","webpack:///./node_modules/moment/locale/ar-sa.js","webpack:///./node_modules/moment/locale/ar-tn.js","webpack:///./node_modules/moment/locale/ar.js","webpack:///./node_modules/moment/locale/az.js","webpack:///./node_modules/moment/locale/be.js","webpack:///./node_modules/moment/locale/bg.js","webpack:///./node_modules/moment/locale/bm.js","webpack:///./node_modules/moment/locale/bn.js","webpack:///./node_modules/moment/locale/bo.js","webpack:///./node_modules/moment/locale/br.js","webpack:///./node_modules/moment/locale/bs.js","webpack:///./node_modules/moment/locale/ca.js","webpack:///./node_modules/moment/locale/cs.js","webpack:///./node_modules/moment/locale/cv.js","webpack:///./node_modules/moment/locale/cy.js","webpack:///./node_modules/moment/locale/da.js","webpack:///./node_modules/moment/locale/de-at.js","webpack:///./node_modules/moment/locale/de-ch.js","webpack:///./node_modules/moment/locale/de.js","webpack:///./node_modules/moment/locale/dv.js","webpack:///./node_modules/moment/locale/el.js","webpack:///./node_modules/moment/locale/en-SG.js","webpack:///./node_modules/moment/locale/en-au.js","webpack:///./node_modules/moment/locale/en-ca.js","webpack:///./node_modules/moment/locale/en-gb.js","webpack:///./node_modules/moment/locale/en-ie.js","webpack:///./node_modules/moment/locale/en-il.js","webpack:///./node_modules/moment/locale/en-nz.js","webpack:///./node_modules/moment/locale/eo.js","webpack:///./node_modules/moment/locale/es-do.js","webpack:///./node_modules/moment/locale/es-us.js","webpack:///./node_modules/moment/locale/es.js","webpack:///./node_modules/moment/locale/et.js","webpack:///./node_modules/moment/locale/eu.js","webpack:///./node_modules/moment/locale/fa.js","webpack:///./node_modules/moment/locale/fi.js","webpack:///./node_modules/moment/locale/fo.js","webpack:///./node_modules/moment/locale/fr-ca.js","webpack:///./node_modules/moment/locale/fr-ch.js","webpack:///./node_modules/moment/locale/fr.js","webpack:///./node_modules/moment/locale/fy.js","webpack:///./node_modules/moment/locale/ga.js","webpack:///./node_modules/moment/locale/gd.js","webpack:///./node_modules/moment/locale/gl.js","webpack:///./node_modules/moment/locale/gom-latn.js","webpack:///./node_modules/moment/locale/gu.js","webpack:///./node_modules/moment/locale/he.js","webpack:///./node_modules/moment/locale/hi.js","webpack:///./node_modules/moment/locale/hr.js","webpack:///./node_modules/moment/locale/hu.js","webpack:///./node_modules/moment/locale/hy-am.js","webpack:///./node_modules/moment/locale/id.js","webpack:///./node_modules/moment/locale/is.js","webpack:///./node_modules/moment/locale/it-ch.js","webpack:///./node_modules/moment/locale/it.js","webpack:///./node_modules/moment/locale/ja.js","webpack:///./node_modules/moment/locale/jv.js","webpack:///./node_modules/moment/locale/ka.js","webpack:///./node_modules/moment/locale/kk.js","webpack:///./node_modules/moment/locale/km.js","webpack:///./node_modules/moment/locale/kn.js","webpack:///./node_modules/moment/locale/ko.js","webpack:///./node_modules/moment/locale/ku.js","webpack:///./node_modules/moment/locale/ky.js","webpack:///./node_modules/moment/locale/lb.js","webpack:///./node_modules/moment/locale/lo.js","webpack:///./node_modules/moment/locale/lt.js","webpack:///./node_modules/moment/locale/lv.js","webpack:///./node_modules/moment/locale/me.js","webpack:///./node_modules/moment/locale/mi.js","webpack:///./node_modules/moment/locale/mk.js","webpack:///./node_modules/moment/locale/ml.js","webpack:///./node_modules/moment/locale/mn.js","webpack:///./node_modules/moment/locale/mr.js","webpack:///./node_modules/moment/locale/ms-my.js","webpack:///./node_modules/moment/locale/ms.js","webpack:///./node_modules/moment/locale/mt.js","webpack:///./node_modules/moment/locale/my.js","webpack:///./node_modules/moment/locale/nb.js","webpack:///./node_modules/moment/locale/ne.js","webpack:///./node_modules/moment/locale/nl-be.js","webpack:///./node_modules/moment/locale/nl.js","webpack:///./node_modules/moment/locale/nn.js","webpack:///./node_modules/moment/locale/pa-in.js","webpack:///./node_modules/moment/locale/pl.js","webpack:///./node_modules/moment/locale/pt-br.js","webpack:///./node_modules/moment/locale/pt.js","webpack:///./node_modules/moment/locale/ro.js","webpack:///./node_modules/moment/locale/ru.js","webpack:///./node_modules/moment/locale/sd.js","webpack:///./node_modules/moment/locale/se.js","webpack:///./node_modules/moment/locale/si.js","webpack:///./node_modules/moment/locale/sk.js","webpack:///./node_modules/moment/locale/sl.js","webpack:///./node_modules/moment/locale/sq.js","webpack:///./node_modules/moment/locale/sr-cyrl.js","webpack:///./node_modules/moment/locale/sr.js","webpack:///./node_modules/moment/locale/ss.js","webpack:///./node_modules/moment/locale/sv.js","webpack:///./node_modules/moment/locale/sw.js","webpack:///./node_modules/moment/locale/ta.js","webpack:///./node_modules/moment/locale/te.js","webpack:///./node_modules/moment/locale/tet.js","webpack:///./node_modules/moment/locale/tg.js","webpack:///./node_modules/moment/locale/th.js","webpack:///./node_modules/moment/locale/tl-ph.js","webpack:///./node_modules/moment/locale/tlh.js","webpack:///./node_modules/moment/locale/tr.js","webpack:///./node_modules/moment/locale/tzl.js","webpack:///./node_modules/moment/locale/tzm-latn.js","webpack:///./node_modules/moment/locale/tzm.js","webpack:///./node_modules/moment/locale/ug-cn.js","webpack:///./node_modules/moment/locale/uk.js","webpack:///./node_modules/moment/locale/ur.js","webpack:///./node_modules/moment/locale/uz-latn.js","webpack:///./node_modules/moment/locale/uz.js","webpack:///./node_modules/moment/locale/vi.js","webpack:///./node_modules/moment/locale/x-pseudo.js","webpack:///./node_modules/moment/locale/yo.js","webpack:///./node_modules/moment/locale/zh-cn.js","webpack:///./node_modules/moment/locale/zh-hk.js","webpack:///./node_modules/moment/locale/zh-tw.js","webpack:///./node_modules/moment/moment.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/typescript/de/mayflower/bz/base/Debug.ts","webpack:///./src/typescript/de/mayflower/bz/base/Main.ts","webpack:///./src/typescript/de/mayflower/bz/base/Version.ts","webpack:///./src/typescript/de/mayflower/bz/base/branding/Branding.ts","webpack:///./src/typescript/de/mayflower/bz/base/branding/BrandingComputy.ts","webpack:///./src/typescript/de/mayflower/bz/base/branding/BrandingMayflower.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingColor.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingDebug.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingEngine.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingGUI.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingPlayerHuman.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingPlayerSpaceship.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingResource.ts","webpack:///./src/typescript/de/mayflower/bz/base/setting/SettingStage.ts","webpack:///./src/typescript/de/mayflower/bz/css/global.less?596a","webpack:///./src/typescript/de/mayflower/bz/data/ModelFile.ts","webpack:///./src/typescript/de/mayflower/bz/data/SkyBoxFile.ts","webpack:///./src/typescript/de/mayflower/bz/data/SoundFile.ts","webpack:///./src/typescript/de/mayflower/bz/data/SpriteFile.ts","webpack:///./src/typescript/de/mayflower/bz/data/Texture.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/Engine.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/Game.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/camera/CameraFactory.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/camera/CameraSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/camera/CameraType.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/hid/KeyCodes.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/hid/KeySystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/hid/PointerSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/mesh/MeshFactory.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/mesh/MeshManipulation.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/mesh/MeshPivotAnchor.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/Physic.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/PhysicDensity.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/PhysicFriction.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/PhysicImpostorParams.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/PhysicRestitution.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/physic/PhysicState.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/Scene.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/material/MaterialSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/material/TextureHasAlpha.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/material/TextureType.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/material/TextureUV.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/model/Model.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/model/ModelCompoundType.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/model/ModelSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/sound/SoundSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/sprite/Sprite.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/sprite/SpriteCollidable.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/scene/sprite/SpriteSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/shot/BulletHole.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/shot/HitPoint.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/shot/Shot.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/CanvasSystem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/LightFactory.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/LoadingScreen.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUI.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIFactory.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIGame.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIHumanBodyPartitions.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIHumanPartitionDescription.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIPause.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/GUIProductConfigurator.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/fx/GUIFx.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/fx/GUIFxManager.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/fx/GUIFxType.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/menu/GUIAction.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/menu/GUIMenu.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/menu/GUIMenuItem.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/message/GUIMessage.ts","webpack:///./src/typescript/de/mayflower/bz/game/engine/ui/gui/message/GUIMessageManager.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/Bot.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/GameObject.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/Item.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/Wall.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/player/Player.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/player/PlayerHuman.ts","webpack:///./src/typescript/de/mayflower/bz/game/object/player/PlayerSpaceship.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/Stage.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/StageId.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/level/Office.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/level/SpaceshipScene.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/level/TestLevel.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/level/TestSite.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/presentation/IntroLogo.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/presentation/RoomViewer.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/presentation/hbp/HumanBodyPartitions.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/presentation/pc3d/HelmetState.ts","webpack:///./src/typescript/de/mayflower/bz/game/stage/presentation/pc3d/ProductConfigurator.ts","webpack:///./src/typescript/de/mayflower/bz/index.ts","webpack:///./src/typescript/de/mayflower/bz/util/HtmlUtil.ts","webpack:///./src/typescript/de/mayflower/bz/util/MathUtil.ts","webpack:///./src/typescript/de/mayflower/bz/util/StringUtil.ts","webpack:///./src/typescript/index.ts","webpack:///external \"BABYLON\"","webpack:///external \"BABYLON.GUI\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,2BAA2B,mBAAO,CAAC,4GAA2D;AAC9F;;;AAGA;AACA,cAAc,QAAS,SAAS,wBAAwB,cAAc,eAAe,uBAAuB,uBAAuB,uBAAuB,GAAG,eAAe,gBAAgB,iBAAiB,gDAAgD,uBAAuB,qDAAqD,kDAAkD,6CAA6C,qDAAqD,8CAA8C,OAAO,mBAAmB,UAAU,wCAAwC,gCAAgC,KAAK,GAAG,oBAAoB,QAAQ,iBAAiB,KAAK,SAAS,mBAAmB,KAAK,UAAU,iBAAiB,KAAK,GAAG;;AAErvB;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElnRA;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACvED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACtGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrID;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACvGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClID;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrJD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACtFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1KD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC9ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;AAE5B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gGAAgG;AAC7G;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC;AACjC,gCAAgC;AAChC,gCAAgC;AAChC,+BAA+B;AAC/B;AACA;AACA;AACA,yDAAyD;AACzD;AACA,0DAA0D;AAC1D;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC9ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;;AAI5B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxJD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI,IAAI,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClID;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACnED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACnED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8CAA8C,IAAI,IAAI,IAAI;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACvFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uCAAuC,IAAI;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACtID;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yCAAyC,IAAI;AAC7C;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACpED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACpHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC9GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA,uDAAuD,IAAI;AAC3D,6DAA6D,IAAI;AACjE,4DAA4D,IAAI;AAChE,kEAAkE,IAAI;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC9DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACtGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,+CAA+C;AAC/C,8CAA8C;AAC9C,gDAAgD;AAChD,4CAA4C;AAC5C,6CAA6C;AAC7C,6CAA6C;AAC7C,8CAA8C;AAC9C,8CAA8C;AAC9C,+CAA+C;AAC/C,6CAA6C;AAC7C,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,kDAAkD;AAClD,iDAAiD;AACjD,gDAAgD;AAChD,iDAAiD;AACjD,8CAA8C;AAC9C,+CAA+C;AAC/C,+CAA+C;AAC/C,gDAAgD;AAChD,iDAAiD;AACjD,kDAAkD;AAClD,+CAA+C;AAC/C,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC9JD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACpLD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1JD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC3KD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACtFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACnED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACzDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gCAAgC;AAChC,aAAa;AACb,+BAA+B;AAC/B,aAAa;AACb,kCAAkC;AAClC,aAAa;AACb,kCAAkC;AAClC,aAAa;AACb,+BAA+B;AAC/B,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC/HD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACvFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACjED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;;ACvHD,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5FD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACzFD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrHD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxJD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AChGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxDD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC7ED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AClED;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2CAA2C,IAAI;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC1DD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;AC5GD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrGD;;AAEA,CAAC;AACD,GAAG,KACoC,WAAW,mBAAO,CAAC,kDAAW;AACrE,GAAG,SACsB;AACzB,CAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACrGD;;AAEA,CAAC;AACD,IAAI,KAA4D;AAChE,IAAI,SACyB;AAC7B,CAAC,qBAAqB;;AAEtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C,IAAI;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4LAA4L,IAAI;;AAEhM,qEAAqE,IAAI;;AAEzE;;AAEA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,YAAY;AACtD;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;AAC9B,gCAAgC;AAChC,6BAA6B,EAAE,EAAE;AACjC,6BAA6B,EAAE,EAAE;AACjC,kCAAkC,EAAE,EAAE;AACtC,iCAAiC;AACjC,qCAAqC;AACrC,yCAAyC;AACzC,6BAA6B,IAAI,EAAE;AACnC,6BAA6B,IAAI,EAAE;AACnC,kCAAkC,IAAI,EAAE;;AAExC,+BAA+B;AAC/B,oCAAoC;;AAEpC,8CAA8C;AAC9C,qDAAqD;;AAErD,wCAAwC,IAAI,IAAI;;AAEhD;AACA;AACA,2BAA2B,MAAM,wEAAwE,MAAM,mBAAmB,MAAM,qBAAqB,MAAM,EAAE,IAAI;;AAEzK;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8EAAe,IAAW,OAAO,CAAC;AAClD;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjmBAAmB,+BAA+B;AAClD;AACA;;AAEA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,EAAE,IAAI,EAAE;AACnD,wCAAwC,EAAE,IAAI,EAAE;;AAEhD;;AAEA;AACA,iCAAiC,EAAE;AACnC,2BAA2B,EAAE;AAC7B,6BAA6B,EAAE;AAC/B,2BAA2B,EAAE;AAC7B,yBAAyB,EAAE,IAAI,EAAE;AACjC,wBAAwB,EAAE;AAC1B,+BAA+B,GAAG;AAClC,yBAAyB,EAAE;AAC3B;AACA,2BAA2B,EAAE,IAAI,EAAE;AACnC,0BAA0B,EAAE,IAAI,EAAE;AAClC,wBAAwB,EAAE;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,8DAA8D,IAAI,0DAA0D,IAAI,qEAAqE,EAAE;;AAEvM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC,gBAAgB;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,6DAA6D;AAC7D,yDAAyD;AACzD,+DAA+D;AAC/D,wDAAwD,OAAO;AAC/D,wDAAwD,OAAO;AAC/D,uDAAuD,OAAO;AAC9D,mEAAmE,OAAO;AAC1E,qEAAqE,OAAO;AAC5E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxmBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;ACz/ID;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACtXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBI,oFAAyB;AAEzB;;oHAEoH;AACpH;IAoCI;;;;oHAIgH;IAChH,eAAoB,YAAoB;QARxC,wDAAwD;QACpB,iBAAY,GAA8B,KAAK,CAAC;QAShF,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAED;;;;;oHAKgH;IACzG,mBAAG,GAAV,UAAY,GAAe;QAAf,8BAAe;QAEvB,IAAK,EAAE,CAAC,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EACpD;YACI,+BAA+B;YAC/B,OAAO,CAAC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAE,CAAC;SACvE;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,mBAAG,GAAV,UAAY,GAAe;QAAf,8BAAe;QAEvB,IAAK,EAAE,CAAC,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EACpD;YACI,+BAA+B;YAC/B,OAAO,CAAC,KAAK,CAAE,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAE,CAAC;SACzE;IACL,CAAC;IAxED,8BAA8B;IACM,aAAO,GAAmC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,qCAAqC;IACD,UAAI,GAAsC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,0BAA0B;IACU,UAAI,GAAsC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,wCAAwC;IACJ,YAAM,GAAoC,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;IACjG,2BAA2B;IACS,WAAK,GAAqC,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;IACjG,2BAA2B;IACS,WAAK,GAAqC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,0DAA0D;IACtB,UAAI,GAAsC,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;IACjG,yBAAyB;IACW,SAAG,GAAuC,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;IACjG,6BAA6B;IACO,aAAO,GAAmC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,6BAA6B;IACO,UAAI,GAAsC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,0BAA0B;IACU,UAAI,GAAsC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,2CAA2C;IACP,YAAM,GAAoC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,kCAAkC;IACE,YAAM,GAAoC,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;IACjG,6CAA6C;IACT,YAAM,GAAoC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IACjG,oCAAoC;IACA,SAAG,GAAuC,IAAI,KAAK,CAAE,IAAI,CAAG,CAAC;IA4CrG,YAAC;CAAA;AA3EY,sBAAK;;;;;;;;;;;;;;;ACLlB,mBAAO,CAAE,4EAAoB,CAAE,CAAC;AAEhC,oFAAyB;AAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oHA0HoH;AACpH;IAAA;IA4BA,CAAC;IAvBG;;oHAEgH;IAClG,SAAI,GAAlB;QAEI,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAI,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAI,CAAC;QACjE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAE,CAAC;QAEjE,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAED;;oHAEgH;IACjG,YAAO,GAAtB;QAEI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAG,CAAC;QAC9D,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,CAAE,CAAC;QAChD,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;IAzBD,0CAA0C;IACd,SAAI,GAAkD,IAAI,CAAC;IAyB3F,WAAC;CAAA;AA5BY,oBAAI;;;;;;;;;;;;;;AC/HjB,4BAA4B;;AAE5B;;oHAEoH;AACpH;IAiCI;;;;;;oHAMgH;IAChH,iBAAqB,OAAc,EAAE,QAAe,EAAE,IAAW;QAdjE,gCAAgC;QACA,YAAO,GAAuC,IAAI,CAAC;QACnF,wCAAwC;QACR,aAAQ,GAAsC,IAAI,CAAC;QACnF,sCAAsC;QACN,SAAI,GAA0C,IAAI,CAAC;QAW/E,IAAI,CAAC,OAAO,GAAI,OAAO,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC;IACzB,CAAC;IAED;;;;oHAIgH;IAClG,kBAAU,GAAxB;QAEI,OAAO,CAAE,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAE,CAAC;IAChG,CAAC;IArDD,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,cAAc,EAAc,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,qBAAqB,EAAO,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,sBAAsB,EAAM,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,yBAAyB,EAAG,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,sBAAsB,EAAM,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,gBAAgB,EAAY,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,eAAe,EAAa,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,uBAAuB,EAAK,4BAA4B,CAAE,CAAC;IAChK,qCAAqC;IACL,eAAO,GAAuC,IAAI,OAAO,CAAE,OAAO,EAAG,gBAAgB,EAAY,4BAA4B,CAAE,CAAC;IAChK,sCAAsC;IACN,gBAAQ,GAAsC,IAAI,OAAO,CAAE,QAAQ,EAAE,YAAY,EAAgB,4BAA4B,CAAE,CAAC;IAEhK,qCAAqC;IACL,uBAAe,GAA+B,OAAO,CAAC,QAAQ,CAAC;IAgCnG,cAAC;CAAA;AAxDY,0BAAO;;;;;;;;;;;;;;;ACLpB;;oHAEoH;AACpH;IAAA;IAkDA,CAAC;IAAD,eAAC;AAAD,CAAC;AAlDqB,4BAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH9B,uFAAiC;AAEjC;;oHAEoH;AACpH;IAAqC,mCAAW;IAAhD;;IAuEA,CAAC;IArEG;;;;oHAIgH;IACzG,kCAAQ,GAAf;QAEI,OAAO,8CAA8C,CAAC;IAC1D,CAAC;IAED;;;;oHAIgH;IACzG,wCAAc,GAArB;QAEI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,oCAAU,GAAjB;QAEI,OAAO,EAAE,CAAC,eAAe,CAAC,kBAAkB,GAAG,aAAa,CAAC;IACjE,CAAC;IAED;;;;oHAIgH;IACzG,2CAAiB,GAAxB;QAEI,OAAO,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;IAC1D,CAAC;IAED;;;;oHAIgH;IACzG,2CAAiB,GAAxB;QAEI,OAAO,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAAC;IACnD,CAAC;IAED;;;;oHAIgH;IACzG,uCAAa,GAApB;QAEI,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAED;;;;oHAIgH;IACzG,sCAAY,GAAnB;QAEI,OAAO,mBAAmB,CAAC;IAC/B,CAAC;IACL,sBAAC;AAAD,CAAC,CAvEoC,EAAE,CAAC,QAAQ,GAuE/C;AAvEY,0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL5B,uFAA4B;AAE5B;;oHAEoH;AACpH;IAAuC,qCAAW;IAAlD;;IAuEA,CAAC;IArEG;;;;oHAIgH;IACzG,oCAAQ,GAAf;QAEI,OAAO,uCAAuC,CAAC;IACnD,CAAC;IAED;;;;oHAIgH;IACzG,0CAAc,GAArB;QAEI,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED;;;;oHAIgH;IACzG,sCAAU,GAAjB;QAEI,OAAO,EAAE,CAAC,eAAe,CAAC,kBAAkB,GAAG,eAAe,CAAC;IACnE,CAAC;IAED;;;;oHAIgH;IACzG,6CAAiB,GAAxB;QAEI,OAAO,EAAE,CAAC,YAAY,CAAC,iCAAiC,CAAC;IAC7D,CAAC;IAED;;;;oHAIgH;IACzG,6CAAiB,GAAxB;QAEI,OAAO,EAAE,CAAC,YAAY,CAAC,0BAA0B,CAAC;IACtD,CAAC;IAED;;;;oHAIgH;IACzG,yCAAa,GAApB;QAEI,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAED;;;;oHAIgH;IACzG,wCAAY,GAAnB;QAEI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IACL,wBAAC;AAAD,CAAC,CAvEsC,EAAE,CAAC,QAAQ,GAuEjD;AAvEY,8CAAiB;;;;;;;;;;;;;;ACL9B,4BAA4B;;AAE5B,4DAAgC;AAEhC;;oHAEoH;AACpH;IAAA;IA4DA,CAAC;IA1DG,mCAAmC;IACP,kCAAqB,GAA6C,4BAA4B,CAAC;IAC3H,+CAA+C;IACnB,mCAAsB,GAA4C,4BAA4B,CAAC;IAC3H,6CAA6C;IACjB,iCAAoB,GAA8C,4BAA4B,CAAC;IAC3H,+CAA+C;IACnB,mCAAsB,GAA4C,4BAA4B,CAAC;IAC3H,0DAA0D;IAC9B,8CAAiC,GAAiC,4BAA4B,CAAC;IAC3H,uDAAuD;IAC3B,2CAA8B,GAAoC,4BAA4B,CAAC;IAC3H,sDAAsD;IAC1B,0CAA6B,GAAqC,4BAA4B,CAAC;IAE3H,uDAAuD;IAC3B,4BAAe,GAAmD,IAAI,GAAG,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAC9H,2DAA2D;IAC/B,0CAA6B,GAAqC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACrI,0DAA0D;IAC9B,gCAAmB,GAA+C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,2DAA2D;IAC/B,mCAAsB,GAA4C,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACrI,qDAAqD;IACzB,0BAAa,GAAqD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,uDAAuD;IAC3B,4BAAe,GAAmD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,sDAAsD;IAC1B,2BAAc,GAAoD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,wDAAwD;IAC5B,6BAAgB,GAAkD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,wDAAwD;IAC5B,6BAAgB,GAAkD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,uDAAuD;IAC3B,4BAAe,GAAmD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAClI,+DAA+D;IACnC,oCAAuB,GAA2C,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACrI,kEAAkE;IACtC,uCAA0B,GAAwC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IAErI,oCAAoC;IACR,mCAAsB,GAA4C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,oDAAoD;IACxB,wCAA2B,GAAuC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;IAC1I,2DAA2D;IAC/B,+CAAkC,GAAgC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;IAC1I,gDAAgD;IACpB,oCAAuB,GAA2C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,8CAA8C;IAClB,kCAAqB,GAA6C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,gDAAgD;IACpB,oCAAuB,GAA2C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,+CAA+C;IACnB,mCAAsB,GAA4C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,iDAAiD;IACrB,qCAAwB,GAA0C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IACvI,gDAAgD;IACpB,oCAAuB,GAA2C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAC3I,mBAAC;CAAA;AA5DY,oCAAY;;;;;;;;;;;;;;ACPzB,4BAA4B;;AAE5B;;oHAEoH;AACpH;IAAA;IAiCA,CAAC;IA/BG,4CAA4C;IAChB,uBAAU,GAAoD,IAAI,CAAC;IAE/F,wBAAwB;IACI,qBAAQ,GAAsD,CAAE,KAAI,IAAI,YAAY,CAAC,UAAU,CAAE,CAAC;IAE9H,2BAA2B;IACC,0BAAa,GAAiD,IAAI,CAAC;IAC/F,+DAA+D;IACnC,8BAAiB,GAA6C,CAAE,KAAI,IAAK,YAAY,CAAC,UAAU,CAAE,CAAC;IAE/H,iFAAiF;IACrD,mCAAsB,GAAwC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAC/H,oDAAoD;IACxB,2CAA8B,GAAgC,CAAE,MAAK,IAAI,KAAuB,CAAE,CAAC;IAE/H,8CAA8C;IAClB,qCAAwB,GAAsC,CAAE,MAAK,IAAI,KAAuB,CAAE,CAAC;IAC/H,6CAA6C;IACjB,mCAAsB,GAAwC,CAAE,MAAK,IAAI,KAAuB,CAAE,CAAC;IAC/H,iCAAiC;IACL,2CAA8B,GAAgC,CAAE,MAAK,IAAI,KAAuB,CAAE,CAAC;IAC/H,wCAAwC;IACZ,oCAAuB,GAAuC,CAAE,MAAK,IAAI,KAAuB,CAAE,CAAC;IAC/H,mDAAmD;IACvB,0CAA6B,GAAiC,CAAE,KAAI,IAAK,YAAY,CAAC,UAAU,CAAE,CAAC;IAE/H,sCAAsC;IACV,0CAA6B,GAAiC,CAAE,KAAI,IAAI,YAAY,CAAC,UAAU,CAAE,CAAC;IAC9H,+CAA+C;IACnB,yCAA4B,GAAkC,IAAI,CAAC;IACnG,mBAAC;CAAA;AAjCY,oCAAY;;;;;;;;;;;;;;ACLzB,4BAA4B;;AAE5B,uFAA4B;AAE5B;;oHAEoH;AACpH;IAAA;IAsDA,CAAC;IApDG,oBAAoB;IACQ,sBAAQ,GAAsD,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;IAErH,gCAAgC;IACJ,8BAAgB,GAA8C,GAAG,CAAC;IAC9F,iCAAiC;IACL,+BAAiB,GAA6C,GAAG,CAAC;IAE9F,mCAAmC;IACP,yCAA2B,GAAmC,GAAG,CAAC,CAAC,OAAO;IACtG,yCAAyC;IACb,kCAAoB,GAA0C,IAAI,CAAC;IAC/F,kDAAkD;IACtB,2CAA6B,GAAiC,KAAK,CAAC;IAChG,gEAAgE;IACpC,8CAAgC,GAA8B,IAAI,CAAC;IAC/F,+CAA+C;IACnB,qCAAuB,GAAuC,IAAI,CAAC;IAC/F,+CAA+C;IACnB,gDAAkC,GAA4B,EAAE,CAAC;IAE7F,sDAAsD;IAC1B,4BAAc,GAAgD,IAAI,CAAC;IAE/F,4DAA4D;IAChC,mCAAqB,GAAyC,IAAI,CAAC;IAE/F,gFAAgF;IACpD,uCAAyB,GAAqC,EAAE,CAAC;IAE7F,kEAAkE;IACtC,gCAAkB,GAA4C,GAAG,CAAC;IAE9F,yCAAyC;IAEzC,2DAA2D;IAC/B,uCAAyB,GAAqC,CAAC,CAAC,CAAO,oBAAoB;IACvH,8EAA8E;IAClD,4CAA8B,GAAgC,KAAK,CAAC,CAAI,aAAa;IACjH,4EAA4E;IAChD,uCAAyB,GAAqC,CAAE,CAAC,GAAG,EAAE,CAAE,CAAC;IACrG,qGAAqG;IACrG,sBAAsB;IACM,sCAAwB,GAAsC,wCAAwC,CAAC;IAEnI,+CAA+C;IACnB,kCAAoB,GAA0C,GAAG,CAAC;IAC9F,sDAAsD;IAC1B,8BAAgB,GAA8C,GAAG,CAAC;IAE9F,0DAA0D;IAC9B,mCAAqB,GAAyC,GAAG,CAAC;IAClG,oBAAC;CAAA;AAtDY,sCAAa;;;;;;;;;;;;;;;ACP1B;;oHAEoH;AACpH;IAAA;IA2BA,CAAC;IAzBG,6DAA6D;IACzB,+BAAoB,GAAkC,GAAG,CAAC;IAC9F,mEAAmE;IAC/B,qCAA0B,GAA4B,CAAC,CAAC;IAC5F,0CAA0C;IACN,uCAA4B,GAA0B,CAAC,CAAC;IAE5F,4DAA4D;IACxB,0BAAe,GAAuC,EAAE,CAAC;IAC7F,+CAA+C;IACX,+BAAoB,GAAkC,GAAG,CAAC;IAE9F,+DAA+D;IAC3B,uBAAY,GAA0C,IAAI,CAAC;IAC/F,gEAAgE;IAC5B,uBAAY,GAA0C,IAAI,CAAC;IAE/F,2CAA2C;IACP,gCAAqB,GAAiC,IAAI,CAAC;IAE/F,0CAA0C;IACN,+BAAoB,GAAkC,IAAI,CAAC;IAE/F,0FAA0F;IACtD,gCAAqB,GAAiC,IAAI,CAAC;IACnG,iBAAC;CAAA;AA3BY,gCAAU;;;;;;;;;;;;;;;ACHvB;;oHAEoH;AACpH;IAAA;IAmDA,CAAC;IAjDG,4CAA4C;IAChB,mCAAgB,GAA8C,GAAG,CAAC;IAC9F,8CAA8C;IAClB,gCAAa,GAAiD,GAAG,CAAC;IAE9F,yCAAyC;IACb,oCAAiB,GAA6C,GAAG,CAAC;IAC9F,sCAAsC;IACV,kCAAe,GAA+C,GAAG,CAAC;IAE9F,kCAAkC;IACN,uBAAI,GAA0D,IAAI,CAAC;IAE/F,iFAAiF;IACrD,2CAAwB,GAAsC,GAAG,CAAC;IAC9F,iEAAiE;IACrC,8CAA2B,GAAmC,IAAI,CAAC;IAC/F,8DAA8D;IAClC,wCAAqB,GAAyC,KAAK,CAAC;IAEhG,iEAAiE;IACrC,+BAAY,GAAkD,KAAK,CAAC;IAChG,kEAAkE;IACtC,8BAAW,GAAmD,KAAK,CAAC;IAChG,mEAAmE;IACvC,+BAAY,GAAkD,KAAK,CAAC;IAChG,gEAAgE;IACpC,qCAAkB,GAA4C,CAAC,GAAG,CAAC;IAE/F,sDAAsD;IAC1B,6BAAU,GAAoD,GAAG,CAAC;IAC9F,8DAA8D;IAClC,qCAAkB,GAA4C,GAAG,CAAC;IAC9F,yFAAyF;IAC7D,4CAAyB,GAAqC,GAAG,CAAC;IAC9F,oEAAoE;IACxC,gCAAa,GAAiD,GAAG,CAAC;IAC9F,wEAAwE;IAC5C,oCAAiB,GAA6C,IAAI,CAAC;IAE/F,kCAAkC;IACN,uCAAoB,GAA0C,IAAI,CAAC;IAC/F,qDAAqD;IACzB,mDAAgC,GAA8B,IAAI,CAAC;IAC/F,yCAAyC;IACb,uCAAoB,GAA0C,GAAG,CAAC;IAE9F,uDAAuD;IAC3B,mCAAgB,GAA8C,IAAI,CAAC;IACnG,yBAAC;CAAA;AAnDY,gDAAkB;;;;;;;;;;;;;;;ACH/B;;oHAEoH;AACpH;IAAA;IAUA,CAAC;IARG,4DAA4D;IAChC,oCAAa,GAAiD,GAAG,CAAC;IAE9F,mEAAmE;IACvC,mCAAY,GAAkD,GAAG,CAAC;IAE9F,iEAAiE;IACrC,kCAAW,GAAmD,GAAG,CAAC;IAClG,6BAAC;CAAA;AAVY,wDAAsB;;;;;;;;;;;;;;;ACHnC;;oHAEoH;AACpH;IAAA;IAyBA,CAAC;IAvBG,qEAAqE;IACzC,kCAAkB,GAA4C,oBAAoB,CAAC;IAC/G,oEAAoE;IACxC,iCAAiB,GAA6C,mBAAmB,CAAC;IAC9G,oEAAoE;IACxC,iCAAiB,GAA6C,mBAAmB,CAAC;IAC9G,iEAAiE;IACrC,8BAAc,GAAgD,gBAAgB,CAAC;IAC3G,+DAA+D;IACnC,kCAAkB,GAA4C,oBAAoB,CAAC;IAE/G,oEAAoE;IACxC,6BAAa,GAAiD,eAAe,CAAC;IAC1G,wEAAwE;IAC5C,6BAAa,GAAiD,eAAe,CAAC;IAE1G,gEAAgE;IACpC,0BAAU,GAAoD,YAAY,CAAC;IAEvG,qEAAqE;IACzC,kCAAkB,GAA4C,oBAAoB,CAAC;IAC/G,qEAAqE;IACzC,kCAAkB,GAA4C,oBAAoB,CAAC;IACnH,sBAAC;CAAA;AAzBY,0CAAe;;;;;;;;;;;;;;ACH5B,4BAA4B;;AAE5B,6FAAkC;AAElC;;oHAEoH;AACpH;IAAA;IAOA,CAAC;IALG,gDAAgD;IACpB,0BAAa,GAAiD,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC;IAEhH,gCAAgC;IACJ,iCAAoB,GAA0C,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE,CAAC;IAChI,mBAAC;CAAA;AAPY,oCAAY;;;;;;;;;;;;;ACP7B,cAAc,mBAAO,CAAC,yQAA+I;;AAErK,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,kHAA+D;;AAEpF;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;;AClBX,4BAA4B;;AAE5B;;oHAEoH;AACpH;IAAA;IA4CA,CAAC;IA1CG,gCAAgC;IACA,wBAAc,GAAoC,gCAAgC,CAAC;IACnH,kCAAkC;IACF,wBAAc,GAAoC,gCAAgC,CAAC;IACnH,kCAAkC;IACF,wBAAc,GAAoC,gCAAgC,CAAC;IACnH,gCAAgC;IACA,iBAAO,GAA2C,2BAA2B,CAAC;IAC9G,4BAA4B;IACI,kBAAQ,GAA0C,2BAA2B,CAAC;IAC9G,mCAAmC;IACH,yBAAe,GAAmC,iCAAiC,CAAC;IACpH,yBAAyB;IACO,eAAK,GAA6C,0BAA0B,CAAC;IAE7G,0BAA0B;IACM,gBAAM,GAA4C,qBAAqB,CAAC;IAExG,kCAAkC;IACF,iBAAO,GAA2C,6BAA6B,CAAC;IAChH,qCAAqC;IACL,2BAAiB,GAAiC,uCAAuC,CAAC;IAC1H,8BAA8B;IACE,oBAAU,GAAwC,2BAA2B,CAAC;IAE9G,oCAAoC;IACJ,wBAAc,GAC9C;QACI,SAAS,CAAC,cAAc;QACxB,SAAS,CAAC,cAAc;QACxB,SAAS,CAAC,cAAc;QACxB,SAAS,CAAC,OAAO;QACjB,SAAS,CAAC,QAAQ;QAClB,SAAS,CAAC,eAAe;QACzB,SAAS,CAAC,KAAK;QAEf,SAAS,CAAC,MAAM;QAEhB,SAAS,CAAC,OAAO;QACjB,SAAS,CAAC,iBAAiB;QAC3B,SAAS,CAAC,UAAU;KACvB,CAAC;IACN,gBAAC;CAAA;AA5CqB,8BAAS;;;;;;;;;;;;;;;ACL/B;;oHAEoH;AACpH,IAAY,UAcX;AAdD,WAAY,UAAU;IAElB,6BAA6B;IAC7B,kCAA2C;IAC3C,6BAA6B;IAC7B,kCAA2C;IAC3C,gCAAgC;IAChC,wCAA8C;IAC9C,4BAA4B;IAC5B,iCAA2C;IAC3C,4BAA4B;IAC5B,iCAA2C;IAC3C,0BAA0B;IAC1B,6BAAyC;AAC7C,CAAC,EAdW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAcrB;;;;;;;;;;;;;;ACjBD,4BAA4B;;AAE5B,oFAAyB;AAEzB;;oHAEoH;AACpH;IAAA;IAgBA,CAAC;IAdG,6BAA6B;IACG,mBAAS,GAA6C,EAAE,CAAC,eAAe,CAAC,aAAa,GAAG,WAAW,CAAC;IACrI,6BAA6B;IACG,mBAAS,GAA6C,EAAE,CAAC,eAAe,CAAC,aAAa,GAAG,WAAW,CAAC;IACrI,oDAAoD;IACpB,6CAAmC,GAAmB,EAAE,CAAC,eAAe,CAAC,aAAa,GAAG,6BAA6B,CAAC;IAEvJ,2CAA2C;IACX,yBAAe,GAC/C;QACI,SAAS,CAAC,SAAS;QACnB,SAAS,CAAC,SAAS;QACnB,SAAS,CAAC,mCAAmC;KAChD,CAAC;IACN,gBAAC;CAAA;AAhBqB,8BAAS;;;;;;;;;;;;;;ACP/B,4BAA4B;;AAE5B;;oHAEoH;AACpH;IAsBI;;;;;oHAKgH;IAChH,oBAAoB,QAAe,EAAE,SAAgB;QAXrD,4CAA4C;QACZ,aAAQ,GAAsC,IAAI,CAAC;QACnF,6EAA6E;QAC7C,cAAS,GAAqC,CAAC,CAAC;QAU5E,IAAI,CAAC,QAAQ,GAAI,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IA9BD,yBAAyB;IACO,eAAI,GAA8C,IAAI,UAAU,CAAE,UAAU,EAAQ,GAAG,CAAE,CAAC;IAC1H,+BAA+B;IACC,qBAAU,GAAwC,IAAI,UAAU,CAAE,eAAe,EAAG,GAAG,CAAE,CAAC;IAC1H,yBAAyB;IACO,eAAI,GAA8C,IAAI,UAAU,CAAE,UAAU,EAAQ,EAAE,CAAG,CAAC;IAE1H,0CAA0C;IACV,2BAAgB,GAChD;QACI,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,IAAI;KAClB,CAAC;IAkBN,iBAAC;CAAA;AAjCY,gCAAU;;;;;;;;;;;;;;ACLvB,4BAA4B;;;;;;;;;;;;;AAE5B,oFAAyB;AAEzB;;oHAEoH;AACpH;IAmEI;;;;;;;;oHAQgH;IAChH,iBAEI,QAAyB,EACzB,eAAqC,EACrC,UAA+B,EAC/B,iBAA6B,EAC7B,WAAiC;QA7BrC,4CAA4C;QACZ,aAAQ,GAA8C,IAAI,CAAC;QAC3F,0DAA0D;QAC1B,sBAAiB,GAAqC,IAAI,CAAC;QAC3F,sDAAsD;QACtB,oBAAe,GAAuC,IAAI,CAAC;QAC3F,wDAAwD;QACxB,eAAU,GAA4C,IAAI,CAAC;QAC3F,qCAAqC;QACL,gBAAW,GAA2C,IAAI,CAAC;QAE3F,mCAAmC;QACH,kBAAa,GAAyC,IAAI,CAAC;QAoBvF,IAAI,CAAC,WAAW,GAAS,WAAW,CAAC;QAErC,IAAI,CAAC,QAAQ,GAAY,IAAI,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;QACtD,IAAI,CAAC,eAAe,GAAK,eAAe,CAAC;QACzC,IAAI,CAAC,UAAU,GAAU,UAAU,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC/C,CAAC;IAED;;;;oHAIgH;IACzG,6BAAW,GAAlB,UAAoB,KAAmB;QAEnC,QAAS,IAAI,CAAC,WAAW,EACzB;YACI,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;gBACxB;oBACI,yBAAyB;oBACzB,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAE,CAAC;oBACjE,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,KAAK;gBACzB;oBACI,sCAAsC;oBACtC,IAAM,YAAY,GAAwB,IAAI,OAAO,CAAC,YAAY,CAC9D,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,EACb,KAAK,EACL,IAAI,CACP,CAAC;oBACF,YAAY,CAAC,KAAK,CAAC,KAAK,GAAM,IAAI,CAAC;oBACnC,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACnC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAC1B;wBACI,8CAA8C;oBAClD,CAAC,CAAE;yBACF,KAAK,CAAE;wBACJ,sCAAsC;oBAC1C,CAAC,CACJ,CAAC;oBAEF,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;oBAClC,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,KAAK;gBACzB;oBACI,wCAAwC;oBACxC,MAAM;iBACT;SACJ;IACL,CAAC;IAED;;;;oHAIgH;IACzG,oCAAkB,GAAzB;QAEI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtC,CAAC;IAED;;;;oHAIgH;IACzG,kCAAgB,GAAvB;QAEI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED;;;;oHAIgH;IACzG,mCAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;IACrD,CAAC;IAED;;;;oHAIgH;IACzG,0BAAQ,GAAf;QAEI,OAAO,CAAE,IAAI,CAAC,eAAe,KAAK,EAAE,CAAC,eAAe,CAAC,GAAG,CAAE,CAAC;IAC/D,CAAC;IAED;;;;oHAIgH;IACzG,+BAAa,GAApB;QAEI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;;;oHAMgH;IACxG,6BAAW,GAAnB,UAAqB,QAAe;QAEhC,QAAS,IAAI,CAAC,WAAW,EACzB;YACI,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;gBACxB;oBACI,OAAO,EAAE,CAAC,eAAe,CAAC,kBAAkB,GAAG,QAAQ,CAAC;iBAC3D;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,KAAK;gBACzB;oBACI,OAAO,EAAE,CAAC,eAAe,CAAC,kBAAkB,GAAG,QAAQ,CAAC;iBAC3D;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,KAAK;gBACzB;oBACI,OAAO,QAAQ,CAAC;iBACnB;SACJ;QAED,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;;;oHAMgH;IAClG,4CAAoC,GAAlD,UAAoD,IAAyB;;QAEzE,IAAM,2BAA2B,GAAW,OAAO,CAAC,oBAAoB,CAAC;QAEzE,mCAAmC;QACnC,IAEI,IAAI,IAAI,IAAI;eACT,IAAI,CAAC,QAAQ,IAAI,IAAI;eACrB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,IAAI;eACzC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,MAAM,GAAG,CAAC,EAEnD;YACI,wBAAwB;YACxB,IAAM,mBAAmB,GAAU,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC;;gBAE/E,qCAAqC;gBACrC,KAAuB,yBAAO,CAAC,YAAY,6CAC3C;oBADM,IAAM,OAAO;oBAEf,IAAK,OAAO,CAAC,QAAQ,KAAK,mBAAmB,EAC7C;wBACI,IAAK,OAAO,CAAC,iBAAiB,KAAK,IAAI,EACvC;4BACI,OAAO,OAAO,CAAC,iBAAiB,CAAC;yBACpC;qBACJ;iBACJ;;;;;;;;;SACJ;QAED,OAAO,2BAA2B,CAAC;IACvC,CAAC;IAhQD,2CAA2C;IACX,4BAAoB,GAAkC,IAAI,OAAO,CAAE,yBAAyB,EAAI,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,IAAI,EAA4B,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,sCAAsC;IACN,wBAAgB,GAAsC,IAAI,OAAO,CAAE,qBAAqB,EAAQ,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,IAAI,EAA4B,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,uCAAuC;IACP,yBAAiB,GAAqC,IAAI,OAAO,CAAE,sBAAsB,EAAO,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,IAAI,EAA4B,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAE9O,+BAA+B;IACC,iBAAS,GAA6C,IAAI,OAAO,CAAE,eAAe,EAAc,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,oBAAoB,EAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,yCAAyC;IACT,2BAAmB,GAAmC,IAAI,OAAO,CAAE,iBAAiB,EAAY,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,gCAAgC;IACA,kBAAU,GAA4C,IAAI,OAAO,CAAE,gBAAgB,EAAa,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,+BAA+B;IACC,iBAAS,GAA6C,IAAI,OAAO,CAAE,eAAe,EAAc,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,gCAAgC;IACA,kBAAU,GAA4C,IAAI,OAAO,CAAE,gBAAgB,EAAa,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,+BAA+B;IACC,kBAAU,GAA4C,IAAI,OAAO,CAAE,gBAAgB,EAAa,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,iBAAiB,EAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,+BAA+B;IACC,iBAAS,GAA6C,IAAI,OAAO,CAAE,eAAe,EAAc,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAC9O,oCAAoC;IACJ,sBAAc,GAAwC,IAAI,OAAO,CAAE,mBAAmB,EAAU,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAM,CAAC;IAE9O,qCAAqC;IACL,kBAAU,GAA4C,IAAI,OAAO,CAAE,UAAU,EAAmB,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,OAAO,CAAC,iBAAiB,EAAO,EAAE,CAAC,WAAW,CAAC,KAAK,CAAK,CAAC;IAE9O,iCAAiC;IACD,mBAAW,GAA2C,IAAI,OAAO,CAAE,YAAY,EAAiB,EAAE,CAAC,eAAe,CAAC,EAAE,EAAG,EAAE,CAAC,SAAS,CAAC,UAAU,EAAK,OAAO,CAAC,gBAAgB,EAAQ,EAAE,CAAC,WAAW,CAAC,KAAK,CAAK,CAAC;IAE9O,yCAAyC;IACT,oBAAY,GAC5C;QACI,OAAO,CAAC,oBAAoB;QAC5B,OAAO,CAAC,gBAAgB;QACxB,OAAO,CAAC,iBAAiB;QAEzB,OAAO,CAAC,SAAS;QACjB,OAAO,CAAC,mBAAmB;QAC3B,OAAO,CAAC,UAAU;QAClB,OAAO,CAAC,SAAS;QACjB,OAAO,CAAC,UAAU;QAClB,OAAO,CAAC,UAAU;QAClB,OAAO,CAAC,SAAS;QACjB,OAAO,CAAC,cAAc;QAEtB,OAAO,CAAC,UAAU;QAElB,OAAO,CAAC,WAAW;KACtB,CAAC;IAgNN,cAAC;CAAA;AAnQY,0BAAO;;;;;;;;;;;;;;;ACPpB,uFAA4B;AAE5B;;oHAEoH;AACpH;IAAA;QAEI,yBAAyB;QACG,iBAAY,GAAsD,IAAI,CAAC;QACnG,sBAAsB;QACM,cAAS,GAAyD,IAAI,CAAC;QACnG,6BAA6B;QACD,kBAAa,GAAqD,IAAI,CAAC;QACnG,iCAAiC;QACL,kBAAa,GAAqD,IAAI,CAAC;IAsJvG,CAAC;IApJG;;oHAEgH;IACzG,qBAAI,GAAX;QAAA,iBA+BC;QA7BG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAErC,+BAA+B;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAE,CAAC;QAEjF,6DAA6D;QAC7D,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,IAAI,CAAE,CAAC;QACrF,IAAK,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAC3C;YACI,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAEtC,4DAA4D;QAC5D,OAAO,CAAC,MAAM,CAAC,iBAAiB,GAAG,EAAE,CAAC,aAAa,CAAC,8BAA8B,CAAC;QAEnF,4BAA4B;QAC5B,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,4BAA4B,CAAE,CAAC;QAClD,MAAM,CAAC,gBAAgB,CAAE,QAAQ,EAAE,cAAQ,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAEtE,gCAAgC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;QAEpC,8BAA8B;QAC9B,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,6BAA6B,CAAE,CAAC;QACnD,MAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE,cAAQ,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;IACtE,CAAC;IAED;;;;oHAIgH;IACzG,uBAAM,GAAb;QAEI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;IACvC,CAAC;IAED;;;;oHAIgH;IACzG,uCAAsB,GAA7B,UAA+B,OAAe;QAE1C,IAAK,OAAO,EACZ;YACI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC;YAE3C,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;SACzC;aAED;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,mBAAmB,CAAE,CAAC;YAEzC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;SACtC;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,uCAAsB,GAA7B,UAA+B,MAAc,EAAE,UAAqB;QAEhE,IAAK,MAAM,EACX;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;YAE5C,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,UAAU,CAAE,CAAC;SAClD;aAED;YACI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;YAE7C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAE,UAAU,CAAE,CAAC;SACnD;IACL,CAAC;IAED;;;;oHAIgH;IACzG,+BAAc,GAArB;QAEI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;IACnD,CAAC;IAED;;;;oHAIgH;IACzG,gCAAe,GAAtB;QAEI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,6BAAY,GAAnB;QAEI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;oHAEgH;IACxG,+BAAc,GAAtB;QAEI,wBAAwB;QACxB,IAAI,CAAC,aAAa,CAAC,kCAAkC,EAAE,CAAC;QAExD,8DAA8D;QAC9D,IAAM,iBAAiB,GAAW,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAEvE,IAAK,iBAAiB,EACtB;YACI,cAAc;YACd,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAE1C,oBAAoB;YACpB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAC/B;IACL,CAAC;IAAA,CAAC;IAEF;;oHAEgH;IACxG,6BAAY,GAApB;QAEI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,iDAAiD,CAAE,CAAC;QACzE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IACL,aAAC;AAAD,CAAC;AA/JY,wBAAM;;;;;;;;;;;;;;;ACLnB,uFAA4B;AAE5B;;oHAEoH;AACpH;IAAA;QAEI,uBAAuB;QACK,WAAM,GAAoD,IAAI,CAAC;QAC3F,yBAAyB;QACG,UAAK,GAAqD,IAAI,CAAC;QAC3F,8BAA8B;QACF,UAAK,GAAqD,IAAI,CAAC;IA4P/F,CAAC;IA1PG;;oHAEgH;IACzG,mBAAI,GAAX;QAAA,iBAYC;QAVG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,kBAAkB,CAAE,CAAC;QAExC,kBAAkB;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAEnB,iBAAiB;QACjB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE,cAAQ,KAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;IAChF,CAAC;IAED;;;;oHAIgH;IACzG,0BAAW,GAAlB,UAAoB,WAAsB;QAA1C,iBAsFC;QApFG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;QACzB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,6BAA6B,GAAG,MAAM,CAAE,WAAW,CAAE,GAAG,GAAG,CAAE,CAAC;QAElF,kCAAkC;QAClC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAElC,gCAAgC;QAChC,IAAI,iBAAiB,GAAU,CAAC,CAAC;QAEjC,8BAA8B;QAC9B,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EACxB;YACI,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAE,IAAI,CAAE,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAE,KAAK,EAAE,cAAQ,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;YAEtE,iCAAiC;YACjC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAEnD,yBAAyB;YACzB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,6BAA6B,CAAE,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SACxB;QAED,uBAAuB;QACvB,QAAS,WAAW,EACpB;YACI,KAAK,EAAE,CAAC,OAAO,CAAC,WAAW;gBAC3B;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBACxE,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,UAAU;gBAC1B;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBAC3E,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS;gBACzB;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBAC1E,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,WAAW;gBAC3B;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBAC5E,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,oBAAoB;gBACpC;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,mBAAmB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBACrF,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,UAAU;gBAC1B;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBAC3E,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,qBAAqB;gBACrC;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,mBAAmB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBACrF,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,OAAO,CAAC,SAAS;gBACzB;oBACI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,cAAc,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;oBAChF,MAAM;iBACT;SACJ;QAED,qBAAqB;QACrB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,8BAA8B,GAAG,MAAM,CAAE,WAAW,CAAE,GAAG,GAAG,CAAE,CAAC;QACnF,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAElB,qCAAqC;QACrC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAE,iBAAiB,CAAE,CAAC;QAElD,4DAA4D;QAC5D,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,gBAAgB,CAAE,cAAQ,KAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;IACzF,CAAC;IAED;;oHAEgH;IACzG,0BAAW,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,2BAAY,GAAnB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAED;;;;oHAIgH;IACzG,qBAAM,GAAb;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAED;;oHAEgH;IACzG,yCAA0B,GAAjC;QAEI,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EACxB;YACI,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE,CAAC;SAC1C;IACL,CAAC;IAED;;oHAEgH;IACxG,wCAAyB,GAAjC;QAEI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,yCAAyC,CAAE,CAAC;QAE/D,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,YAAY,CAAC,aAAa,CAAE,CAAC;IACtD,CAAC;IAED;;oHAEgH;IACxG,iCAAkB,GAA1B;QAAA,iBASC;QAPG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,iDAAiD,CAAE,CAAC;QAEvE,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAE,KAAK,CAAE,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAE,IAAI,EAAE,cAAQ,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAErE,iGAAiG;QACjG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;IACrC,CAAC;IAAA,CAAC;IAEF;;oHAEgH;IACxG,qBAAM,GAAd;QAEI,eAAe;QACf,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAEpB,eAAe;QACf,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAEpB,oEAAoE;QACpE,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAE,CAAC;IACxD,CAAC;IAAA,CAAC;IAEF;;;;oHAIgH;IACxG,+BAAgB,GAAxB,UAA0B,SAAsB;QAE5C,IAAK,EAAE,CAAC,YAAY,CAAC,iBAAiB,EACtC;YACI,IAAI,CAAC,eAAe,CAAE,SAAS,CAAE,CAAC;SACrC;IACL,CAAC;IAED;;;;oHAIgH;IACxG,8BAAe,GAAvB,UAAyB,SAAsB;QAE3C,kBAAkB;QAElB,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,EAAE,CAAC,UAAU,CAAC,WAAW,CAAE,CAAC;SAC3D;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,EAAE,CAAC,UAAU,CAAC,UAAU,CAAE,CAAC;SAC1D;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,EAAE,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC;SACtD;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,EAAE,CAAC,UAAU,CAAC,YAAY,CAAE,CAAC;SAC5D;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,EAAE,CAAC,UAAU,CAAC,UAAU,CAAE,CAAC;SAC1D;QAED,oBAAoB;QACpB,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,EAClD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;SAC5B;QAED,iBAAiB;QACjB,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC9B;IACL,CAAC;IACL,WAAC;AAAD,CAAC;AAnQY,oBAAI;;;;;;;;;;;;;;;ACLjB,0FAAgC;AAEhC;;oHAEoH;AACpH;IAAA;IA+KA,CAAC;IA1KG;;;;;;oHAMgH;IAClG,8BAAgB,GAA9B,UAEI,KAA8B,EAC9B,eAAgC,EAChC,aAAgC;QAIhC,IAAM,UAAU,GAAsB,IAAI,OAAO,CAAC,UAAU,CAExD,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE,EAClC,eAAe,EACf,KAAK,CACR,CAAC;QAEF,wBAAwB;QACxB,UAAU,CAAC,SAAS,CAAE,aAAa,CAAE,CAAC;QAEtC,iCAAiC;QACjC,UAAU,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;QAC5E,UAAU,CAAC,YAAY,GAAM,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;QAE5E,qFAAqF;QACrF,UAAU,CAAC,SAAS,GAAS,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;QACpE,UAAU,CAAC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpD,UAAU,CAAC,MAAM,GAAM,CAAE,EAAE,CAAE,CAAC;QAC9B,UAAU,CAAC,QAAQ,GAAI,CAAE,EAAE,CAAE,CAAC;QAC9B,UAAU,CAAC,QAAQ,GAAI,CAAE,EAAE,CAAE,CAAC;QAC9B,UAAU,CAAC,SAAS,GAAG,CAAE,EAAE,CAAE,CAAC;QAE9B,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;;oHAKgH;IAClG,0CAA4B,GAA1C,UAEI,KAA8B,EAC9B,eAAgC;QAIhC,OAAO,IAAI,OAAO,CAAC,YAAY,CAE3B,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE,EAClC,eAAe,EACf,KAAK,CACR,CAAC;IACN,CAAC;IAED;;;;;;;oHAOgH;IAClG,gCAAkB,GAAhC,UAAkC,KAAmB,EAAE,eAA+B;QAElF,IAAM,YAAY,GAAwB,IAAI,OAAO,CAAC,YAAY,CAE9D,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE,EAClC,eAAe,EACf,KAAK,CACR,CAAC;QAEF,YAAY,CAAC,YAAY,GAAS,EAAE,CAAC,aAAa,CAAC,2BAA2B,CAAC;QAC/E,YAAY,CAAC,MAAM,GAAe,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC;QACxE,YAAY,CAAC,cAAc,GAAO,EAAE,CAAC,aAAa,CAAC,6BAA6B,CAAC;QACjF,YAAY,CAAC,kBAAkB,GAAG,EAAE,CAAC,aAAa,CAAC,gCAAgC,CAAC;QACpF,YAAY,CAAC,cAAc,GAAO,EAAE,CAAC,aAAa,CAAC,uBAAuB,CAAC;QAE3E,OAAO,YAAY,CAAC;IACxB,CAAC;IAED;;;;;;;oHAOgH;IAClG,qCAAuB,GAArC,UAAuC,KAAmB,EAAE,WAAkB;QAE1E,IAAM,UAAU,GAAsB,IAAI,OAAO,CAAC,UAAU,CAExD,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE,EAClC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,KAAK,CACR,CAAC;QACF,UAAU,CAAC,GAAG,GAAG,WAAW,CAAC;QAE7B,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;;;;;;;;;oHAYgH;IAClG,mCAAqB,GAAnC,UAEI,KAA+B,EAC/B,IAAwB,EACxB,IAAwB,EACxB,QAAwB,EACxB,MAAiC,EACjC,gBAAwB,EACxB,gBAAwB;QAIxB,IAAM,eAAe,GAA2B,IAAI,OAAO,CAAC,eAAe,CAEvE,EAAE,CAAC,aAAa,CAAC,eAAe,EAAE,EAClC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAE,EAChC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAE,EAChC,QAAQ,EACR,MAAM,EACN,KAAK,CACR,CAAC;QAEF,eAAe,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACpD,eAAe,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAEpD,eAAe,CAAC,eAAe,GAAI,IAAI,CAAC;QACxC,eAAe,CAAC,eAAe,GAAI,IAAI,CAAC;QACpD;;;UAGE;QACU,eAAe,CAAC,MAAM,GAAM,CAAE,EAAE,CAAE,CAAC;QACnC,eAAe,CAAC,QAAQ,GAAI,CAAE,EAAE,CAAE,CAAC;QACnC,eAAe,CAAC,QAAQ,GAAI,CAAE,EAAE,CAAE,CAAC;QACnC,eAAe,CAAC,SAAS,GAAG,CAAE,EAAE,CAAE,CAAC;QAEnC,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED;;;;oHAIgH;IACjG,6BAAe,GAA9B;QAEI,OAAO,QAAQ,GAAG,MAAM,CAAE,aAAa,CAAC,YAAY,EAAE,CAAE,CAAC;IAC7D,CAAC;IA5KD,oDAAoD;IACpB,0BAAY,GAAsD,CAAC,CAAC;IA4KxG,oBAAC;CAAA;AA/KqB,sCAAa;;;;;;;;;;;;;;;ACLnC,0FAA+B;AAE/B;;oHAEoH;AACpH;IAwBI;;;;;;;;;;;;;;oHAcgH;IAChH,sBAEI,KAAuC,EACvC,MAA2C,EAE3C,kBAAyC,EACzC,wBAAyC,EACzC,oBAAyC,EAEzC,gBAAyC,EACzC,sBAA6B,EAC7B,kBAA6B,EAC7B,uBAA8C;QA9ClD,wCAAwC;QACR,qBAAgB,GAA0D,IAAI,CAAC;QAE/G,2DAA2D;QAC3B,UAAK,GAAqE,IAAI,CAAC;QAC/G,uDAAuD;QACvB,WAAM,GAAoE,IAAI,CAAC;QAE/G,uDAAuD;QACvB,eAAU,GAAgE,IAAI,CAAC;QAC/G,qDAAqD;QACrB,qBAAgB,GAA0D,IAAI,CAAC;QAC/G,oCAAoC;QACJ,iBAAY,GAA8D,IAAI,CAAC;QAC/G,0CAA0C;QACV,sBAAiB,GAAyD,IAAI,CAAC;QAC/G,kCAAkC;QACF,oBAAe,GAA2D,IAAI,CAAC;QAgC3G,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,UAAU,GAAU,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAEtD,IAAI,CAAC,KAAK,EACV,kBAAkB,EAClB,gBAAgB,CACnB,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAI,EAAE,CAAC,aAAa,CAAC,4BAA4B,CAElE,IAAI,CAAC,KAAK,EACV,wBAAwB,CAC3B,CAAC;QACF,IAAI,CAAC,YAAY,GAAQ,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAExD,IAAI,CAAC,KAAK,EACV,oBAAoB,CACvB,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,aAAa,CAAC,uBAAuB,CAE7D,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,aAAa,CAAC,qBAAqB,CACzC,CAAC;QACF,IAAI,CAAC,eAAe,GAAK,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAE3D,IAAI,CAAC,KAAK,EACV,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,KAAK,EACL,KAAK,CACR,CAAC;QAEF,wBAAwB;QACxB,IAAK,sBAAsB,KAAK,IAAI,EACpC;YACI,IAAI,CAAC,4BAA4B,CAAE,sBAAsB,CAAE,CAAC;SAC/D;QACD,IAAK,kBAAkB,KAAK,IAAI,EAChC;YACI,IAAI,CAAC,kBAAkB,CAAE,kBAAkB,CAAE,CAAC;SACjD;QACD,IAAK,uBAAuB,KAAK,IAAI,EACrC;YACI,IAAI,CAAC,sBAAsB,CAAE,uBAAuB,CAAE,CAAC;SAC1D;IACL,CAAC;IAED;;;;oHAIgH;IACzG,sCAAe,GAAtB;QAEI,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IACnC,CAAC;IAED;;;;;;oHAMgH;IACzG,sCAAe,GAAtB,UAEI,UAAyB,EACzB,MAAqB,EACrB,GAAkB;QAIlB,IAAI,CAAC,gBAAgB,GAAK,UAAU,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAE,UAAU,CAAE,CAAC;QAE/D,QAAS,UAAU,EACnB;YACI,KAAK,EAAE,CAAC,UAAU,CAAC,WAAW;gBAC9B;oBACI,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,UAAU,EAAO,IAAI,CAAG,CAAC;oBAC7D,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAE,CAAC;oBAE7D,IAAK,MAAM,KAAK,IAAI,EACpB;wBACI,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;qBAC7B;oBACD,IAAK,GAAG,KAAQ,IAAI,EACpB;wBACI,GAAG,CAAC,sCAAsC,CAAE,KAAK,CAAE,CAAC;qBACvD;oBACD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU;gBAC7B;oBACI,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,UAAU,EAAO,KAAK,CAAE,CAAC;oBAC7D,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAE,CAAC;oBAE7D,IAAK,MAAM,KAAK,IAAI,EACpB;wBACI,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;qBAC7B;oBACD,IAAK,GAAG,KAAQ,IAAI,EACpB;wBACI,GAAG,CAAC,sCAAsC,CAAE,KAAK,CAAE,CAAC;qBACvD;oBACD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM;gBACzB;oBACI,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,UAAU,EAAO,KAAK,CAAE,CAAC;oBAC7D,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAE,CAAC;oBAE7D,IAAK,MAAM,KAAK,IAAI,EACpB;wBACI,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;qBAC7B;oBACD,IAAK,GAAG,KAAQ,IAAI,EACpB;wBACI,GAAG,CAAC,sCAAsC,CAAE,KAAK,CAAE,CAAC;qBACvD;oBACD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,YAAY;gBAC/B;oBACI,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,UAAU,EAAO,KAAK,CAAE,CAAC;oBAC7D,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAE,CAAC;oBAE7D,IAAK,MAAM,KAAK,IAAI,EACpB;wBACI,MAAM,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;qBAC9B;oBACD,IAAK,GAAG,KAAQ,IAAI,EACpB;wBACI,GAAG,CAAC,sCAAsC,CAAE,IAAI,CAAE,CAAC;qBACtD;oBAED,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU;gBAC7B;oBACI,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,UAAU,EAAO,KAAK,CAAE,CAAC;oBAC7D,IAAI,CAAC,wBAAwB,CAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAG,CAAC;oBAE7D,IAAK,MAAM,KAAK,IAAI,EACpB;wBACI,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;qBAC7B;oBACD,IAAK,GAAG,KAAQ,IAAI,EACpB;wBACI,GAAG,CAAC,sCAAsC,CAAE,KAAK,CAAE,CAAC;qBACvD;oBACD,MAAM;iBACT;SACJ;IACL,CAAC;IAED;;;;oHAIgH;IACzG,gDAAyB,GAAhC;QAEI,OAAO,CAAE,IAAI,CAAC,gBAAgB,KAAK,EAAE,CAAC,UAAU,CAAC,YAAY,CAAE,CAAC;IACpE,CAAC;IAED;;;;oHAIgH;IACzG,kDAA2B,GAAlC,UAAoC,KAAmB;QAEnD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;IACxC,CAAC;IAED;;oHAEgH;IACzG,8BAAO,GAAd;QAEI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IAED;;;;oHAIgH;IACzG,yCAAkB,GAAzB;QAEI,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED;;;;oHAIgH;IACzG,sDAA+B,GAAtC,UAAwC,GAAU;QAE9C,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,GAAG,CAAC;IACrC,CAAC;IAED;;;;;;;;oHAQgH;IACzG,4CAAqB,GAA5B,UAEI,UAA0B,EAC1B,WAA4B,EAC5B,OAAmB,EACnB,IAAmC,EACnC,QAAuB;QAIvB,IAAM,MAAM,GAAuB,IAAI,CAAC,iBAAiB,CAAE,UAAU,CAAE,CAAC;QACxE,IAAM,UAAU,GAAmB,CAAE,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,kCAAkC,CAAE,CAAC;QAErG,IAAK,IAAI,KAAK,IAAI,EAClB;YACI,IAAI,CAAC,aAAa,CAAE,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAE,CAAC;SACrE;QAED,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAErC,YAAY,CAAC,2BAA2B,EAAE,EAC1C,MAAM,EACN,UAAU,EACV,EAAE,CAAC,aAAa,CAAC,kCAAkC,EACnD,UAAU,EACV,MAAM,CAAC,QAAQ,EACf,WAAW,EACX,CAAC,EACD,IAAI,EACJ,QAAQ,CACX,CAAC;IACN,CAAC;IAED;;;;;;;;oHAQgH;IACzG,0CAAmB,GAA1B,UAEI,MAAoC,EACpC,WAA4B,EAC5B,OAAmB,EACnB,IAAmC,EACnC,QAAuB;QAIvB,IAAM,UAAU,GAAU,CAAE,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,kCAAkC,CAAE,CAAC;QAE5F,IAAK,IAAI,KAAK,IAAI,EAClB;YACI,IAAI,CAAC,aAAa,CAAE,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAE,CAAC;SACrE;QAED,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAErC,YAAY,CAAC,2BAA2B,EAAE,EAC1C,MAAM,EACN,QAAQ,EACR,EAAE,CAAC,aAAa,CAAC,kCAAkC,EACnD,UAAU,EACV,MAAM,CAAC,MAAM,EACb,WAAW,EACX,CAAC,EACD,IAAI,EACJ,QAAQ,CACX,CAAC;IACN,CAAC;IAED;;;;;;oHAMgH;IACxG,wCAAiB,GAAzB,UAA2B,UAAwB;QAE/C,QAAS,UAAU,EACnB;YACI,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU;gBAC7B;oBACI,OAAO,IAAI,CAAC,eAAe,CAAC;iBAC/B;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,YAAY;gBAC/B;oBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;iBACjC;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM;gBACzB;oBACI,OAAO,IAAI,CAAC,YAAY,CAAC;iBAC5B;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,WAAW;gBAC9B;oBACI,OAAO,IAAI,CAAC,UAAU,CAAC;iBAC1B;YAED,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU;gBAC7B;oBACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;iBAChC;SACJ;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACxG,mDAA4B,GAApC,UAAsC,IAAQ;QAE1C,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;IAC9C,CAAC;IAED;;;;oHAIgH;IACxG,yCAAkB,GAA1B,UAA4B,IAAQ;QAEhC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1C,CAAC;IAED;;;;oHAIgH;IACxG,6CAAsB,GAA9B,UAAgC,IAAyB;QAErD,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC;IACzC,CAAC;IAED;;;;;oHAKgH;IACxG,+CAAwB,GAAhC,UAEI,MAAsB,EACtB,MAAe;QAIf,IAAK,MAAM,EACX;YACI,MAAM,CAAC,aAAa,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;SACvC;aAED;YACI,MAAM,CAAC,aAAa,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;SACvC;IACL,CAAC;IAED;;;;oHAIgH;IACxG,iDAA0B,GAAlC,UAAoC,MAAqB;QAErD,IAAM,QAAQ,GAAsC,IAAI,OAAO,CAAC,yBAAyB,CAErF,MAAM,EACN,kBAAkB,CACrB,CAAC;QACF,IAAM,MAAM,GAAsC,IAAI,OAAO,CAAC,uBAAuB,CAEjF,MAAM,EACN,MAAM,EACN;YACI,OAAO,IAAI,OAAO,CAAC,eAAe,CAE9B,WAAW,EACX,CAAC,EACD,IAAI,EACJ,OAAO,CAAC,OAAO,CAAC,sBAAsB,EACtC,MAAM,EACN,CAAC,CAAC,CACL,CAAC;QACN,CAAC,CACJ,CAAC;QACF,QAAQ,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;QAEpE,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,6BAA6B,CACrE,kBAAkB,EAClB,IAAI,CAAC,gBAAgB,CACxB,CAAC;IACN,CAAC;IAED;;oHAEgH;IACxG,yCAAkB,GAA1B;QAEI,kBAAkB;QAClB,IAAM,aAAa,GAAoC,IAAI,OAAO,CAAC,wBAAwB,CAEvF,IAAI,EACJ,GAAG,EACH,IAAI,CAAC,gBAAgB,CACxB,CAAC;QAEF,OAAO;QACP,IAAM,MAAM,GAAU,EAAE,CAAC;QACzB,IAAM,IAAI,GAA2B,IAAI,OAAO,CAAC,eAAe,CAE5D,iBAAiB,EACjB,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,CAAE,EAC7B,MAAM,EACN,IAAI,EACJ,IAAI,CAAC,gBAAgB,CACxB,CAAC;QAEF,YAAY;QACZ,IAAM,WAAW,GAAkC,IAAI,OAAO,CAAC,qBAAqB,CAEhF,YAAY,EACZ,GAAG,EACH,IAAI,CAAC,gBAAgB,CACxB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACjG,wCAA2B,GAA1C;QAEI,OAAO,iBAAiB,GAAG,MAAM,CAAE,YAAY,CAAC,qBAAqB,EAAE,CAAE,CAAC;IAC9E,CAAC;IAzgBD,gDAAgD;IAChB,kCAAqB,GAAqD,CAAC,CAAC;IAygBhH,mBAAC;CAAA;AA5gBY,oCAAY;;;;;;;;;;;;;;;ACLzB;;oHAEoH;AACpH,IAAY,UAYX;AAZD,WAAY,UAAU;IAElB,kCAAkC;IAClC,yDAAW;IACX,iCAAiC;IACjC,uDAAU;IACV,+CAA+C;IAC/C,+CAAM;IACN,qEAAqE;IACrE,2DAAY;IACZ,+BAA+B;IAC/B,uDAAU;AACd,CAAC,EAZW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAYrB;;;;;;;;;;;;;;;ACfD;;oHAEoH;AACpH;IAAA;IA2DA,CAAC;IAzDG,wDAAwD;IACxB,iBAAQ,GAAkD,WAAW,CAAC;IACtG,sDAAsD;IACtB,eAAM,GAAoD,SAAS,CAAC;IACpG,yDAAyD;IACzB,kBAAS,GAAiD,YAAY,CAAC;IACvG,wDAAwD;IACxB,iBAAQ,GAAkD,WAAW,CAAC;IAEtG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IAEjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IAEjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IAEjG,2FAA2F;IAC3D,cAAK,GAAqD,MAAM,CAAC;IACjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IAEjG,+CAA+C;IACf,cAAK,GAAqD,MAAM,CAAC;IAEjG,mDAAmD;IACnB,kBAAS,GAAiD,OAAO,CAAC;IAClG,oDAAoD;IACpB,mBAAU,GAAgD,QAAQ,CAAC;IACnG,mDAAmD;IACnB,kBAAS,GAAiD,OAAO,CAAC;IAClG,0DAA0D;IAC1B,sBAAa,GAA6C,aAAa,CAAC;IACxG,wDAAwD;IACxB,uBAAc,GAA4C,WAAW,CAAC;IAEtG,+CAA+C;IACf,cAAK,GAAqD,QAAQ,CAAC;IACnG,+CAA+C;IACf,cAAK,GAAqD,QAAQ,CAAC;IACnG,+CAA+C;IACf,cAAK,GAAqD,QAAQ,CAAC;IACnG,+CAA+C;IACf,cAAK,GAAqD,QAAQ,CAAC;IACnG,+CAA+C;IACf,cAAK,GAAqD,QAAQ,CAAC;IACvG,eAAC;CAAA;AA3DqB,4BAAQ;;;;;;;;;;;;;;;ACH9B,0FAA+B;AAE/B;;oHAEoH;AACpH;IAOI;;oHAEgH;IAChH;QAAA,iBAOC;QAfD,8CAA8C;QACd,gBAAW,GAA+C,EAAE,CAAC;QAC7F,oDAAoD;QACpB,oBAAe,GAA2C,EAAE,CAAC;QAOzF,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAI,UAAE,KAAW,IAAQ,KAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;QAC/F,MAAM,CAAC,gBAAgB,CAAE,OAAO,EAAM,UAAE,KAAW,IAAQ,KAAI,CAAC,OAAO,CAAI,KAAK,CAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;QAE/F,MAAM,CAAC,gBAAgB,CAAE,WAAW,EAAE,UAAE,KAAW,IAAQ,KAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;QAC/F,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAI,UAAE,KAAW,IAAQ,KAAI,CAAC,OAAO,CAAI,KAAK,CAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;IACnG,CAAC;IAED;;;;oHAIgH;IACzG,6BAAS,GAAhB,UAAkB,KAAW;QAEzB,IAAM,OAAO,GAAY,KAAwB,CAAC,IAAI,CAAC;QAEvD,IAAK,CAAC,IAAI,CAAC,eAAe,CAAE,OAAO,CAAE,EACrC;YACI,IAAI,CAAC,WAAW,CAAE,OAAO,CAAE,GAAG,IAAI,CAAC;YAEnC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,eAAe,GAAI,OAAO,GAAG,GAAG,CAAE,CAAC;SACxD;IACL,CAAC;IAAA,CAAC;IAEF;;;;oHAIgH;IACzG,2BAAO,GAAd,UAAgB,KAAW;QAEvB,IAAM,OAAO,GAAY,KAAwB,CAAC,IAAI,CAAC;QAEvD,IAAI,CAAC,WAAW,CAAM,OAAO,CAAE,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,eAAe,CAAE,OAAO,CAAE,GAAG,KAAK,CAAC;QACpD;;;;;;UAME;QACU,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,gBAAgB,GAAI,OAAO,GAAG,GAAG,CAAE,CAAC;IAC1D,CAAC;IAAA,CAAC;IAEF;;;;;;;oHAOgH;IACzG,6BAAS,GAAhB,UAAkB,OAAc;QAE5B,OAAO,IAAI,CAAC,WAAW,CAAE,OAAO,CAAE,CAAC;IACvC,CAAC;IAED;;;;oHAIgH;IACzG,mCAAe,GAAtB,UAAwB,OAAc;QAElC,IAAI,CAAC,eAAe,CAAE,OAAO,CAAE,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,WAAW,CAAM,OAAO,CAAE,GAAG,KAAK,CAAC;IAC5C,CAAC;IAED;;;oHAGgH;IACzG,kCAAc,GAArB;QAEI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC;QAEzC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IACL,gBAAC;AAAD,CAAC;AA3FY,8BAAS;;;;;;;;;;;;;;;ACLtB,0FAAoC;AAEpC;;;oHAGoH;AACpH;IAUI;;;;;;;oHAOgH;IAChH,uBAEI,KAA2B,EAC3B,MAAkC,EAClC,iBAA0B,EAC1B,iBAA0B;QAL9B,iBAuBC;QAvCD,kDAAkD;QAClB,WAAM,GAA4C,IAAI,CAAC;QACvF,iDAAiD;QACjB,UAAK,GAA6C,IAAI,CAAC;QAEvF,yDAAyD;QACzB,kBAAa,GAAqC,KAAK,CAAC;QAkBpF,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,aAAa,GAAG,CAClC,iBAAiB;YACjB,CAAC,CAAC,UAAE,GAAgB,EAAE,UAA8B;gBAChD,KAAI,CAAC,aAAa,CAAE,GAAG,EAAE,UAAU,CAAE,CAAC;YAC1C,CAAC;YACD,CAAC,CAAC,IAAI,CACT,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,OAAO,GAAG,CACpC,iBAAiB;YACjB,CAAC,CAAC,cAAc,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,IAAI,CACT,CAAC;IACN,CAAC;IAED;;;;;oHAKgH;IACzG,qCAAa,GAApB,UAAsB,GAAgB,EAAE,UAA8B;QAElE,0DAA0D;QAC1D,IAAK,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAC1C;YACI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAE,8BAA8B,CAAE,CAAC;YAEvD,IAAI,GAAG,GAAoB,IAAI,CAAC;YAEhC,gCAAgC;YAChC,IAEQ,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,yBAAyB,EAAE;mBACxD,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,IAAI,EAEvC;gBACI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,8BAA8B,EAAE,CAAC,QAAQ,CAAC;aAC1E;iBAED;gBACI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;aACjE;YAED,IAAM,GAAG,GAAmB,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC;YACnE,GAAG,CAAC,SAAS,EAAE,CAAC;YAEhB,gCAAgC;YAChC,IAEQ,UAAU,CAAC,UAAU,IAAgC,IAAI;mBACzD,UAAU,CAAC,UAAU,CAAC,eAAe,IAAgB,IAAI;mBACzD,UAAU,CAAC,UAAU,CAAC,eAAe,CAAC,WAAW,IAAI,IAAI,EAEjE;gBACI,UAAU,CAAC,UAAU,CAAC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAE,EAAE,CAAE,EAAE,UAAU,CAAC,WAAW,CAAE,CAAC;aACjF;SACJ;IACL,CAAC;IAAA,CAAC;IAEF;;oHAEgH;IACxG,qCAAa,GAArB;QAAA,iBAiBC;QAfG,QAAQ,CAAC,gBAAgB,CAAE,mBAAmB,EAAK,cAAQ,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,QAAQ,CAAC,gBAAgB,CAAE,sBAAsB,EAAE,cAAQ,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAC3F,QAAQ,CAAC,gBAAgB,CAAE,WAAW,EAAa,UAAE,UAAqB;YACtE,KAAI,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;QAAC,CAAC,CACpC,CAAC;QAEF,6DAA6D;QAC7D,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,kBAAkB;YAChD;YACQ,6DAA6D;YAC7D,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,kBAAkB;gBAChD,6DAA6D;mBAC7D,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,qBAAqB,CAC1D,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC;IACvD,CAAC;IAAA,CAAC;IAEF;;oHAEgH;IACxG,2CAAmB,GAA3B;QAEI,IACQ,QAAQ,CAAC,kBAAkB,KAAmB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;eACzE,QAAiB,CAAC,qBAAqB,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EACjF;YACE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAE,uCAAuC,CAAE,CAAC;YAEhE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAE7B;aAED;YACI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAE,yCAAyC,CAAE,CAAC;YAElE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B;IACL,CAAC;IAAA,CAAC;IAEF;;;;;oHAKgH;IACxG,mCAAW,GAAnB,UAAqB,EAAa;QAE9B,IAAK,IAAI,CAAC,aAAa,EACvB;YACI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAChB,sBAAsB;kBACpB,MAAM,CAAE,EAAE,CAAC,SAAS,CAAE;kBACtB,QAAQ;kBACR,MAAM,CAAE,EAAE,CAAC,SAAS,CAAE;kBACtB,GAAG,CACR,CAAC;SACL;IAIL,CAAC;IAAA,CAAC;IACN,oBAAC;AAAD,CAAC;AA1JY,sCAAa;;;;;;;;;;;;;;;ACN1B,0FAAoC;AAEpC;;oHAEoH;AACpH;IAAA;IA23BA,CAAC;IAn3BG;;;;oHAIgH;IAClG,4BAAgB,GAA9B;QAEI,OAAO,MAAM,GAAG,MAAM,CAAE,WAAW,CAAC,UAAU,EAAE,CAAE,CAAC;IACvD,CAAC;IAED;;;;;;;;;;;;;;;oHAegH;IAClG,qBAAS,GAAvB,UAEI,KAAuB,EACvB,QAA8B,EAC9B,WAAiC,EACjC,IAA8B,EAC9B,QAA8B,EAC9B,OAAyB,EACzB,KAA6B,EAC7B,MAAwB,EACxB,aAAqB,EACrB,aAA6B;QAI7B,oDAAoD;QACpD,IAAI,MAAM,GAAqB,EAAE,CAAC;QAElC,IAAK,OAAO,KAAK,IAAI,EACrB;YACI,QAAS,OAAO,CAAC,aAAa,EAAE,EAChC;gBACI,KAAK,EAAE,CAAC,SAAS,CAAC,UAAU;oBAC5B;wBACI,MAAM;4BACN;gCACI,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAE;gCAC3C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,GAAG,CAAG;gCAE3C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAE;gCAC3C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,GAAG,CAAG;gCAE3C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAE;gCAC3C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,GAAG,CAAG;6BAC9C,CAAC;wBACF,MAAM;qBACT;gBAED,KAAK,EAAE,CAAC,SAAS,CAAC,aAAa;oBAC/B;wBACI,MAAM;4BACN;gCACI,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAE;gCACjD,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAG,IAAI,CAAC,CAAC,CAAG;gCAEjD,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAE;gCACjD,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAG,IAAI,CAAC,CAAC,CAAG;gCAEjD,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAE;gCACjD,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAG,IAAI,CAAC,CAAC,CAAG;6BACpD,CAAC;wBACF,MAAM;qBACT;aACJ;SACJ;QAED,IAAM,GAAG,GAAgB,OAAO,CAAC,WAAW,CAAC,SAAS,CAElD,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,KAAK,EAAG,IAAI,CAAC,CAAC;YACd,MAAM,EAAE,IAAI,CAAC,CAAC;YACd,KAAK,EAAG,IAAI,CAAC,CAAC;YAEd,MAAM,EAAE,MAAM;SACjB,EACD,KAAK,CAAC,cAAc,EAAE,CACzB,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,GAAG,EACH,QAAQ,EACR,WAAW,EACX,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACT,CAAC;QAEF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,IAAI,EACJ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,KAAK,EACL,aAAa,EACb,aAAa,CAChB,CAAC;QAEF,IAAM,MAAM,GAAU,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAE1E,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,GAAG,EACH,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,MAAM,CACT,CAAC;IACN,CAAC;IAED;;;;;;;;;;;;;;;;oHAgBgH;IAClG,0BAAc,GAA5B,UAEI,KAAuB,EACvB,QAA8B,EAC9B,WAAiC,EACjC,QAAqB,EACrB,MAAqB,EACrB,QAA8B,EAC9B,OAAyB,EACzB,KAA6B,EAC7B,MAAwB,EACxB,aAAqB,EACrB,aAA6B;QAI7B,IAAI,MAAM,GAAqB,EAAE,CAAC;QAElC,IAAK,OAAO,KAAK,IAAI,EACrB;YACI,QAAS,OAAO,CAAC,aAAa,EAAE,EAChC;gBACI,KAAK,EAAE,CAAC,SAAS,CAAC,UAAU;oBAC5B;wBACI,MAAM;4BACN;gCACI,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;gCACzC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAG;gCAC1C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;6BAC5C,CAAC;wBACF,MAAM;qBACT;gBAED,KAAK,EAAE,CAAC,SAAS,CAAC,aAAa;oBAC/B;wBACI,MAAM;4BACN;gCACI,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAgB,QAAQ,CAAE;gCAClE,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAE,EAAE,MAAM,CAAI;gCAClE,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAiB,QAAQ,CAAE;6BACrE,CAAC;wBACF,MAAM;qBACT;aACJ;SACJ;QAED,IAAM,QAAQ,GAAgB,OAAO,CAAC,WAAW,CAAC,cAAc,CAE5D,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAI,MAAM;YAEhB,MAAM,EAAI,MAAM;SACnB,EACD,KAAK,CAAC,cAAc,EAAE,CACzB,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,MAAM,EACN,QAAQ,CACX,CAAC;QAEF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,MAAM,EACN,KAAK,EACL,aAAa,EACb,aAAa,CAChB,CAAC;QAEF,IAAM,MAAM,GAAU,EAAE,CAAC,QAAQ,CAAC,iBAAiB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;QAExE,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,CAAC,eAAe,CAAC,gBAAgB,EACxC,MAAM,CACT,CAAC;IACN,CAAC;IAED;;;;;;;;;;;;;;;oHAegH;IAClG,wBAAY,GAA1B,UAEI,KAAuB,EACvB,QAA8B,EAC9B,WAAiC,EACjC,QAAqB,EACrB,QAA8B,EAC9B,OAAyB,EACzB,KAA6B,EAC7B,MAAwB,EACxB,aAAqB,EACrB,aAA6B;QAI7B,IAAM,MAAM,GAAgB,OAAO,CAAC,WAAW,CAAC,YAAY,CAExD,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,QAAQ,EAAE,QAAQ;SACrB,EACD,KAAK,CAAC,cAAc,EAAE,CACzB,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,MAAM,EACN,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,QAAQ,CACX,CAAC;QAEF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,aAAa,EACb,aAAa,CAChB,CAAC;QAEF,IAAM,MAAM,GAAU,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAE,QAAQ,CAAE,CAAC;QAE9D,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,CAAC,eAAe,CAAC,cAAc,EACtC,MAAM,CACT,CAAC;IACN,CAAC;IAED;;;;;;;;;;;;;;;;;;;;oHAoBgH;IAClG,uBAAW,GAAzB,UAEI,KAAyB,EAEzB,QAAgC,EAChC,WAAmC,EACnC,KAAuB,EACvB,MAAuB,EACvB,QAAgC,EAEhC,OAA2B,EAE3B,KAA+B,EAE/B,MAA0B,EAC1B,aAAuB,EACvB,aAA+B,EAC/B,eAAuB;QAIvB,IAAM,KAAK,GAAgB,OAAO,CAAC,WAAW,CAAC,WAAW,CAEtD,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,KAAK,EAAY,KAAK;YACtB,MAAM,EAAW,MAAM;YACvB,eAAe,EAAE,eAAe;SACnC,EACD,KAAK,CAAC,cAAc,EAAE,CACzB,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,KAAK,EACL,QAAQ,EACR,WAAW,EACX,KAAK,EACL,MAAM,EACN,GAAG,CACN,CAAC;QAEF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,aAAa,EACb,aAAa,CAChB,CAAC;QAEF,IAAM,MAAM,GAAU,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,UAAU,CAAE,CAAC;QAEzF,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,MAAM,CACT,CAAC;IACN,CAAC;IAED;;;;;;;;;;;oHAWgH;IAClG,sBAAU,GAAxB,UAEI,KAA0B,EAE1B,KAA4B,EAC5B,GAA4B,EAC5B,WAA+B,EAC/B,QAA4B,EAE5B,KAA2B;QAI3B,IAAM,IAAI,GAAgB,OAAO,CAAC,WAAW,CAAC,WAAW,CAErD,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,MAAM,EACN;gBACI,KAAK;gBACL,GAAG;aACN;YACD,MAAM,EACN;gBACI,KAAK;gBACL,KAAK;aACR;YACD,cAAc,EAAE,IAAI;SACvB,EACD,KAAK,CACR,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,IAAI,EACJ,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EACtB,WAAW,EACX,GAAG,EACH,GAAG,EACH,GAAG,CACN,CAAC;QAEF,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,GAAG,CACN,CAAC;IACN,CAAC;IAED;;;;;;;;;;;;oHAYgH;IAClG,yBAAa,GAA3B,UAEI,KAAuB,EAEvB,MAAgC,EAEhC,WAAiC,EACjC,QAA8B,EAE9B,KAA6B,EAE7B,MAAwB,EACxB,aAA6B;QAI7B,IAAM,OAAO,GAAgB,OAAO,CAAC,WAAW,CAAC,aAAa,CAE1D,WAAW,CAAC,gBAAgB,EAAE,EAC9B;YACI,KAAK,EAAE,MAAM;YACjC;;;;;;;cAOE;YACkB,KAAK,EAAE,WAAW,CAAC,UAAU;SAChC,EACD,KAAK,CAAC,cAAc,EAAE,CACzB,CAAC;QAEF,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAEnC,OAAO,EACP,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,WAAW,EACX,GAAG,EACH,GAAG,EACH,GAAG,CACN,CAAC;QACF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,IAAI,EACJ,KAAK,EACL,GAAG,EACH,GAAG,EACH,KAAK,EACL,GAAG,EACH,aAAa,CAChB,CAAC;QAEF,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,GAAG,CACN,CAAC;IACN,CAAC;IAED;;;;;;;;;;;;;;;;oHAgBgH;IAClG,uBAAW,GAAzB,UAEI,KAAuB,EACvB,QAA8B,EAC9B,UAAmC,EACnC,MAA8B,EAC9B,IAA8B,EAC9B,QAAqB,EACrB,MAAqB,EACrB,OAAyB,EACzB,KAA6B,EAC7B,aAAqB,EACrB,aAA6B;QAI7B,IAAM,KAAK,GAAgB,OAAO,CAAC,WAAW,CAAC,WAAW,CAEtD,WAAW,CAAC,gBAAgB,EAAE,EAC9B,UAAU,EACV;YACI,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAI,MAAM;YAChB,IAAI,EAAM,IAAI;YACd,KAAK,EAAK,QAAQ;SACrB,CACJ,CAAC;QAEF,IAAM,QAAQ,GAA4B,KAAK,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAE9E,KAAK,CAAC,cAAc,EAAE,EACtB,OAAO,EACP,IAAI,EACJ,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,KAAK,EACL,aAAa,EACb,aAAa,CAChB,CAAC;QACF,QAAQ,CAAC,OAAO,GAAG,CAAE,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC;QAC/C;;;;UAIE;QACU,OAAO,WAAW,CAAC,YAAY,CAE3B,KAAK,CAAC,cAAc,EAAE,EACtB,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,GAAG,CACN,CAAC;IACN,CAAC;IAED;;;;;;;;oHAQgH;IAClG,4BAAgB,GAA9B,UAEI,KAAsB,EACtB,MAAsB,EACtB,OAAe;QAIf,IAAM,cAAc,GAA4B,IAAI,OAAO,CAAC,gBAAgB,CAExE,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,EACxC,KAAK,CACR,CAAC;QACF,IAAM,UAAU,GAAU,MAAM,CAAC,QAAQ,EAAE,CAAC;QAE5C,cAAc,CAAC,eAAe,GAAK,KAAK,CAAC;QACzC,cAAc,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC,WAAW,CAEtD,EAAE,CAAC,eAAe,CAAC,iBAAiB,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,EACpE,KAAK,CACR,CAAC;QACF,cAAc,CAAC,iBAAiB,CAAC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;QAE/E,cAAc,CAAC,YAAY,GAAI,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;QAC/D,cAAc,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;QAC3E;;UAEE;QACU,cAAc,CAAC,KAAK,GAAG,OAAO,CAAC;QAC/B,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC;QAEtC,IAAM,MAAM,GAAgB,OAAO,CAAC,WAAW,CAAC,SAAS,CAErD,WAAW,CAAC,gBAAgB,EAAE,EAC9B,EAAE,IAAI,EAAE,MAAM,EAAE,EAChB,KAAK,CACR,CAAC;QACF,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,MAAM,CAAC,QAAQ,GAAW,cAAc,CAAC;QAEzC,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;oHAQgH;IAClG,8BAAkB,GAAhC,UAEI,KAAsB,EACtB,MAAsB,EACtB,OAAe;QAIf,IAAK,QAAQ,CAAC,cAAc,CAAE,kBAAkB,CAAE,KAAK,IAAI,EAC3D;YACI,IAAM,sBAAsB,GAAqB,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC;YACpF,sBAAsB,CAAC,IAAI,GAAG,0BAA0B,CAAC;YACzD,sBAAsB,CAAC,EAAE,GAAK,kBAAkB,CAAC;YACjD,sBAAsB,CAAC,SAAS,GAAG,sCAAsC;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,yEAAyE;gBACzE,MAAM,CAAC;YACP,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,sBAAsB,CAAE,CAAC;SACvD;QAED,IAAK,QAAQ,CAAC,cAAc,CAAE,oBAAoB,CAAE,KAAK,IAAI,EAC7D;YACI,IAAM,wBAAwB,GAAqB,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC;YACtF,wBAAwB,CAAC,IAAI,GAAG,4BAA4B,CAAC;YAC7D,wBAAwB,CAAC,EAAE,GAAK,oBAAoB,CAAC;YACrD,wBAAwB,CAAC,SAAS,GAAG,kCAAkC;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,uEAAuE;gBACvE,OAAO,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,wBAAwB,CAAE,CAAC;SACzD;QAED,IAAM,UAAU,GAAU,MAAM,CAAC,QAAQ,EAAE,CAAC;QAE5C,IAAM,OAAO,GAAmB,IAAI,OAAO,CAAC,OAAO,CAE/C,EAAE,CAAC,eAAe,CAAC,iBAAiB,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,EAC7E,KAAK,CACR,CAAC;QAEF,IAAM,cAAc,GAA0B,IAAI,OAAO,CAAC,cAAc,CACpE,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,EACxC,KAAK,EACL;YACI,aAAa,EAAE,kBAAkB;YACjC,eAAe,EAAE,oBAAoB;SACxC,EACD;YACI,iBAAiB,EAAE,IAAI;YACvB,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,QAAQ,EAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC;YACvC,QAAQ,EAAI,CAAC,gBAAgB,CAAC;SACjC,CACJ,CAAC;QACF,cAAc,CAAC,UAAU,CAAE,gBAAgB,EAAE,OAAO,CAAE,CAAC;QACvD,cAAc,CAAC,eAAe,GAAG,KAAK,CAAC;QAEvC,IAAM,MAAM,GAAgB,OAAO,CAAC,IAAI,CAAC,SAAS,CAE9C,WAAW,CAAC,gBAAgB,EAAE,EAC9B,KAAK,EACL,KAAK,CACR,CAAC;QACF,MAAM,CAAC,QAAQ,GAAW,cAAc,CAAC;QACzC,MAAM,CAAC,OAAO,GAAY,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE/B,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;oHAWgH;IAClG,+BAAmB,GAAjC,UAEI,KAAsB,EACtB,QAAoB,EACpB,QAA6B,EAC7B,MAAuB,EACvB,YAAkC;QAIlC,IAAM,aAAa,GAAa,KAAK,CAAC,cAAc,EAAE,CAAC,gBAAgB,CAAE,QAAQ,CAAE,CAAC;QACpF,IAAM,WAAW,GAAe,aAAa,CAAC,KAAK,EAAE,CAAC;QAEtD,qCAAqC;QACrC,WAAW,CAAC,iBAAiB,CAAE,QAAQ,CAAE,CAAC;QAE1C,0EAA0E;QAC1E,IAAI,SAAS,GAA8B,EAAE,CAAC;QAC9C,IAAK,MAAM,KAAK,IAAI,EACpB;YACI,SAAS,GAAG,aAAa,CAAC,YAAY,EAAE;SAC3C;aAED;YACI,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,EAC7D;gBACI,SAAS,CAAC,IAAI,CAAE,MAAM,CAAC,0BAA0B,CAAE,CAAE,GAAG,GAAG,aAAa,CAAC,YAAY,EAAE,CAAE,CAAE,CAAE,CAAC;aACjG;SACJ;QACD,WAAW,CAAC,eAAe,CAAE,KAAK,CAAC,cAAc,EAAE,EAAE,SAAS,CAAE,CAAC;QAEjE,sCAAsC;QACtC,QAAS,YAAY,EACrB;YACI,KAAK,EAAE,CAAC,iBAAiB,CAAC,IAAI;gBAC9B;oBACI,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,iBAAiB,CAAC,0BAA0B;gBACpD;oBACI,WAAW,CAAC,eAAe,CAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;oBACtD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,iBAAiB,CAAC,yBAAyB;gBACnD;oBACI,WAAW,CAAC,eAAe,CAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAE,CAAC;oBACrD,MAAM;iBACT;SACJ;QAED,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;;;;;;;;oHAUgH;IACjG,wBAAY,GAA3B,UAEI,KAAkC,EAClC,IAAiC,EACjC,QAAoC,EACpC,QAA6C,EAC7C,MAA8B,EAC9B,mBAA2B,EAC3B,MAA2B;QAI3B,IAAI,CAAC,QAAQ,GAAS,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC;QAEtD,IAAK,QAAQ,KAAK,IAAI,EACtB;YACI,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;SAC1F;QAED,qDAAqD;QACrD,MAAM,CAAC,iBAAiB,CAEpB,KAAK,EACL,IAAI,EACJ,MAAM,EACN,mBAAmB,CACtB,CAAC;QAEF,OAAO,IAAI,CAAC;IAChB,CAAC;IAx3BD,+DAA+D;IACvB,sBAAU,GAA4C,MAAM,CAAC;IAErG,2CAA2C;IACH,sBAAU,GAA4C,CAAC,CAAC;IAq3BpG,kBAAC;CAAA;AA33BY,kCAAW;;;;;;;;;;;;;;;ACLxB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAAA;IAiKA,CAAC;IA/JG;;;;;;;oHAOgH;IAClG,uCAAsB,GAApC,UAAsC,IAAyB,EAAE,IAAW,EAAE,IAAW,EAAE,IAAW;QAElG,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,UAAU,CAAC,oBAAoB,CAE7D,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAE,EAChC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAE,EAChC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAE,CACnC,CAAC;IACN,CAAC;IAED;;;;;oHAKgH;IAClG,kCAAiB,GAA/B,UAEI,IAA8B,EAC9B,QAAyB;QAIzB,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IAED;;;;;;;;;oHASgH;IAClG,oCAAmB,GAAjC,UAEI,IAAiC,EACjC,QAA4B,EAC5B,WAA+B,EAE/B,KAAmB,EACnB,MAAmB,EACnB,KAAmB;QAInB,QAAS,WAAW,EACpB;YACZ;;;;;;;;;;;;;;;;cAgBE;YACF;;;;;;;;;;;;;;;;cAgBE;YACc,6FAA6F;YAC7F,KAAK,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC;YACnC,KAAK,EAAE,CAAC,eAAe,CAAC,kBAAkB,CAAC;YAC3C,KAAK,EAAE,CAAC,eAAe,CAAC,UAAU;gBAClC;oBACI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,IAAI,CAAC,cAAc,CAEf,OAAO,CAAC,MAAM,CAAC,WAAW,CAEtB,GAAG,EACH,GAAG,EACH,GAAG,CACN,EACD,KAAK,CACR,CAAC;oBACF,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,eAAe,CAAC,IAAI;gBAC5B;oBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,OAAO,CAC/B,QAAQ,CAAC,CAAC,GAAG,CAAE,KAAK,GAAI,CAAC,CAAE,EAC3B,QAAQ,CAAC,CAAC,GAAG,CAAE,MAAM,GAAG,CAAC,CAAE,EAC3B,QAAQ,CAAC,CAAC,GAAG,CAAE,KAAK,GAAI,CAAC,CAAE,CAC9B,CAAC;oBACF,MAAM;iBACT;SACJ;IACL,CAAC;IAED;;;;;;;;;;oHAUgH;IAClG,iCAAgB,GAA9B,UAEI,KAA0B,EAC1B,IAAiC,EACjC,UAAmB,EACnB,QAAmB,EACnB,IAAoB,EACpB,QAAuB;QAIvB,IAAM,WAAW,GAAU,GAAG,CAAC;QAE/B,KAAK,CAAC,cAAc,CAEhB,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,IAAI,EACJ,WAAW,EACX,QAAQ,CACX,CAAC;IACN,CAAC;IACL,uBAAC;AAAD,CAAC;AAjKqB,4CAAgB;;;;;;;;;;;;;;;ACLtC;;oHAEoH;AACpH,IAAY,eAaX;AAbD,WAAY,eAAe;IAEvB,4DAA4D;IAC5D,qDAAI;IAEJ,0CAA0C;IAC1C,iEAAU;IAEV,wDAAwD;IACxD,iEAAU;IAEV,gEAAgE;IAChE,iFAAkB;AACtB,CAAC,EAbW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAa1B;;;;;;;;;;;;;;;AChBD,0FAA+B;AAE/B;;oHAEoH;AACpH;IAmFI;;;;;;;oHAOgH;IAChH,gBAEI,KAA2B,EAC3B,OAA6B,EAC7B,QAA8B,EAC9B,WAAiC;QAtBrC,wDAAwD;QACxB,UAAK,GAAqC,IAAI,CAAC;QAC/E,2CAA2C;QACX,YAAO,GAAmC,IAAI,CAAC;QAC/E,2CAA2C;QACX,aAAQ,GAAkC,IAAI,CAAC;QAC/E,0CAA0C;QACV,gBAAW,GAA+B,IAAI,CAAC;QAkB3E,IAAI,CAAC,KAAK,GAAS,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO,GAAO,OAAO,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAM,QAAQ,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED;;;;;;;oHAOgH;IACzG,kCAAiB,GAAxB,UAEI,KAA2B,EAC3B,IAAkC,EAClC,MAAoB,EACpB,YAAoB;QAIpB,QAAS,IAAI,CAAC,KAAK,EACnB;YACI,KAAK,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC;YAC3B,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO;gBAC3B;oBACI,IAAM,cAAc,GAAqC,IAAI,CAAC,oBAAoB,CAAE,MAAM,CAAE,CAAC;oBAE7F,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;oBACtE,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAAC,eAAe,CAE9C,IAAI,EACJ,YAAY,EACZ,cAAc,EACd,KAAK,CACR,CAAC;oBACF,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAAC;oBAEhE,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;gBACxB;oBACI,4BAA4B;oBAC5B,MAAM;iBACT;SACJ;IACL,CAAC;IAED;;;;;;oHAMgH;IACzG,2CAA0B,GAAjC,UAAmC,MAAa;QAE5C,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAErC,OAAO,CAAC,eAAe,CAAC,WAAW,EACnC,CAAE,MAAM,GAAG,IAAI,CAAC,OAAO,CAAE,EACzB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,WAAW,CACnB,CAAC;IACN,CAAC;IAED;;;;;;oHAMgH;IACxG,qCAAoB,GAA5B,UAA8B,MAAa;QAEvC,IAAI,IAAI,GAAU,GAAG,CAAC;QAEtB,QAAS,IAAI,CAAC,KAAK,EACnB;YACI,KAAK,EAAE,CAAC,WAAW,CAAC,MAAM;gBAC1B;oBACI,IAAI,GAAG,GAAG,CAAC;oBACX,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO;gBAC3B;oBACI,IAAI,GAAG,CAAE,MAAM,GAAG,IAAI,CAAC,OAAO,CAAE,CAAC;oBACjC,MAAM;iBACT;YAEjB,0FAA0F;YAC1F;;;;;;;;;;cAUE;YACc,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;gBACxB;oBACI,MAAM;iBACT;SACJ;QAED,OAAO;YACH,IAAI,EAAgC,IAAI;YACxC,QAAQ,EAA4B,IAAI,CAAC,QAAQ;YACjD,WAAW,EAAyB,IAAI,CAAC,WAAW;YACpD,kCAAkC,EAAE,KAAK;SAC5C,CAAC;IACN,CAAC;IAvND,sEAAsE;IACtC,WAAI,GAAsC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,IAAI,EACnB,IAAI,EACJ,EAAE,CAAC,cAAc,CAAC,IAAI,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;IAEF,yGAAyG;IACzE,mBAAY,GAA8B,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,OAAO,EACtB,EAAE,CAAC,kBAAkB,CAAC,IAAI,EAC1B,EAAE,CAAC,cAAc,CAAC,IAAI,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;IAEF,yGAAyG;IACzE,uBAAgB,GAA0B,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,MAAM,EACrB,EAAE,CAAC,aAAa,CAAC,MAAM,EACvB,EAAE,CAAC,cAAc,CAAC,IAAI,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;IAEF,4BAA4B;IACI,iBAAU,GAAgC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,OAAO,EACtB,EAAE,CAAC,aAAa,CAAC,UAAU,EAC3B,EAAE,CAAC,cAAc,CAAC,IAAI,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;IAEF,4BAA4B;IACI,iBAAU,GAAgC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,OAAO,EACtB,EAAE,CAAC,aAAa,CAAC,UAAU,EAC3B,EAAE,CAAC,cAAc,CAAC,MAAM,EACxB,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAC9B,CAAC;IAEF,8BAA8B;IACE,eAAQ,GAAkC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,OAAO,EACtB,EAAE,CAAC,aAAa,CAAC,QAAQ,EACzB,EAAE,CAAC,cAAc,CAAC,IAAI,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;IAEF,4CAA4C;IACZ,eAAQ,GAAkC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,OAAO,EACtB,EAAE,CAAC,aAAa,CAAC,OAAO,EACxB,EAAE,CAAC,cAAc,CAAC,MAAM,EACxB,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAC9B,CAAC;IAEF,gEAAgE;IAChC,aAAM,GAAoC,IAAI,MAAM,CAEhF,EAAE,CAAC,WAAW,CAAC,MAAM,EACrB,EAAE,CAAC,aAAa,CAAC,MAAM,EACvB,EAAE,CAAC,cAAc,CAAC,MAAM,EACxB,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAC9B,CAAC;IAkJN,aAAC;CAAA;AA1NY,wBAAM;;;;;;;;;;;;;;;ACLnB;;oHAEoH;AACpH,IAAY,aAeX;AAfD,WAAY,aAAa;IAErB,2CAA2C;IAC3C,qDAAgB;IAEhB,0CAA0C;IAC1C,+DAAgB;IAChB,0CAA0C;IAC1C,6DAAgB;IAEhB,2BAA2B;IAC3B,uDAAgB;IAEhB,wCAAwC;IACxC,2DAAgB;AACpB,CAAC,EAfW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAexB;;;;;;;;;;;;;;;AClBD;;oHAEoH;AACpH,IAAY,cAUX;AAVD,WAAY,cAAc;IAEtB,mBAAmB;IACnB,mDAAU;IAEV,uBAAuB;IACvB,yDAAY;IAEZ,qBAAqB;IACrB,mDAAU;AACd,CAAC,EAVW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAUzB;;;;;;;;;;;;;;;ACbD;;;oHAGoH;AACpH;IAAA;QAEI,yBAAyB;QACD,SAAI,GAAsD,CAAC,CAAC;QACpF,yBAAyB;QACD,SAAI,GAAsD,CAAC,CAAC;QACpF,6BAA6B;QACL,aAAQ,GAAkD,CAAC,CAAC;QACpF,gCAAgC;QACR,gBAAW,GAA+C,CAAC,CAAC;IAyExF,CAAC;IAvEG;;;;;oHAKgH;IACzG,mDAAoB,GAA3B,UAA6B,IAAyB,EAAE,KAAmB;QAEvE,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAAC,eAAe,CAE9C,IAAI,EACJ,IAAI,CAAC,IAAI,EACT;YACI,IAAI,EAAU,IAAI,CAAC,IAAI;YACvB,QAAQ,EAAM,IAAI,CAAC,QAAQ;YAC3B,WAAW,EAAG,IAAI,CAAC,WAAW;YAE9B,8BAA8B;YAC9B,YAAY,EAAE,KAAK;SACtB,EACD,KAAK,CACR,CAAC;IACN,CAAC;IAED;;;;;;oHAMgH;IAClG,iCAAY,GAA1B,UAA4B,QAAgC;QAExD,IAAM,GAAG,GAAwB,IAAI,oBAAoB,EAAE,CAAC;QAE5D,GAAG,CAAC,IAAI,GAAU,QAAQ,CAAC,IAAI,CAAC;QAChC,GAAG,CAAC,IAAI,GAAU,QAAQ,CAAC,IAAI,CAAC;QAChC,GAAG,CAAC,QAAQ,GAAM,QAAQ,CAAC,QAAQ,CAAC;QACpC,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QAEvC,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;;;;;oHASgH;IAClG,+BAAU,GAAxB,UAEI,IAAmB,EACnB,IAAmB,EACnB,QAAmB,EACnB,WAAmB;QAInB,IAAM,GAAG,GAAwB,IAAI,oBAAoB,EAAE,CAAC;QAE5D,GAAG,CAAC,IAAI,GAAU,IAAI,CAAC;QACvB,GAAG,CAAC,IAAI,GAAU,IAAI,CAAC;QACvB,GAAG,CAAC,QAAQ,GAAM,QAAQ,CAAC;QAC3B,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;QAE9B,OAAO,GAAG,CAAC;IACf,CAAC;IACL,2BAAC;AAAD,CAAC;AAlFY,oDAAoB;;;;;;;;;;;;;;;ACJjC;;oHAEoH;AACpH,IAAY,iBAUX;AAVD,WAAY,iBAAiB;IAEzB,sBAAsB;IACtB,yDAAU;IAEV,0BAA0B;IAC1B,+DAAY;IAEZ,wBAAwB;IACxB,yDAAU;AACd,CAAC,EAVW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAU5B;;;;;;;;;;;;;;;ACbD;;oHAEoH;AACpH,IAAY,WAUX;AAVD,WAAY,WAAW;IAEnB,wEAAwE;IACxE,6CAAI;IAEJ,oDAAoD;IACpD,iDAAM;IAEN,iDAAiD;IACjD,mDAAO;AACX,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB;;;;;;;;;;;;;;;ACbD,0FAA+B;AAE/B;;;oHAGoH;AACpH;IAAA;QAEI,oCAAoC;QACR,iBAAY,GAAsD,IAAI,CAAC;QACnG,kDAAkD;QACtB,kBAAa,GAAqD,IAAI,CAAC;QAEnG,2BAA2B;QACC,mBAAc,GAAoD,IAAI,CAAC;QACnG,yBAAyB;QACG,iBAAY,GAAsD,IAAI,CAAC;QACnG,wBAAwB;QACI,gBAAW,GAAuD,IAAI,CAAC;QACnG,8BAA8B;QACF,gBAAW,GAAuD,IAAI,CAAC;QAEnG,6DAA6D;QACjC,sBAAiB,GAAiD,IAAI,CAAC;QAEnG,sDAAsD;QAC1B,mBAAc,GAAoD,KAAK,CAAC;IAiNxG,CAAC;IA/MG;;;;;oHAKgH;IACzG,oBAAI,GAAX,UAAa,MAAgB,EAAE,iBAA4B;QAA3D,iBA8CC;QA5CG,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAE3C,0BAA0B;QAC1B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAE5C,gCAAgC;QAChC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAAC;QAEvE,gDAAgD;QAChD,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;QAErF,kCAAkC;QAClC,IAAK,EAAE,CAAC,YAAY,CAAC,sBAAsB,EAC3C;YACI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CACpC;gBACI,8CAA8C;YAClD,CAAC,CAAE;iBACF,KAAK,CAAE;gBACJ,sCAAsC;YAC1C,CAAC,CACJ,CAAC;SACL;QAED,wBAAwB;QACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,qBAAqB;QACrB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC,cAAc,CAAE,EAAE,CAAC,OAAO,CAAC,YAAY,CAAE,CAAC;QACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE9C,mBAAmB;QACnB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,YAAY,CAAE,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAE,CAAC;QAC1E,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE5C,kBAAkB;QAClB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CACjC,EAAE,CAAC,SAAS,CAAC,eAAe,EAC5B,cAAQ,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CACnC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;IAC/C,CAAC;IAED;;;;oHAIgH;IACzG,8BAAc,GAArB;QAEI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,iCAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED;;;;oHAIgH;IACzG,+BAAe,GAAtB;QAEI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,8BAAc,GAArB;QAEI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;oHAIgH;IACzG,8BAAc,GAArB;QAEI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACzG,sBAAM,GAAb;QAEI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED;;oHAEgH;IACzG,6BAAa,GAApB;QAEI,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAE3C,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,cAAc,CAAE,CAAC;IAC9C,CAAC;IAED;;;;oHAIgH;IACzG,6BAAa,GAApB,UAAsB,OAAe;QAEjC,IAAK,OAAO,EACZ;YACI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,EAAE,CAAC,aAAa,CAAC,yBAAyB,CAAE,CAAC;YAC7E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC9B;aAED;YACI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,EAAE,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAC;YAC5E,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC/B;IACL,CAAC;IAED;;oHAEgH;IACzG,0BAAU,GAAjB;QAEI,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;IAC3D,CAAC;IAED;;;;;oHAKgH;IACzG,yBAAS,GAAhB,UAAkB,KAAoB,EAAE,OAAc;QAElD,0BAA0B;QAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAM,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAK,KAAK,CAAC;QAErC,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,OAAO,CAAC;QACnD;;;;UAIE;IACM,CAAC;IAED;;oHAEgH;IACxG,mCAAmB,GAA3B;QAEI,wBAAwB;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,cAAc,CAE3C,IAAI,EACJ,EAAE,CAAC,aAAa,CAAC,yBAAyB,CAC7C,CAAC;QAEF,kCAAkC;QAClC,IAAI,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAE5B,+FAA+F;QAC/F,IAAI,CAAC,YAAY,CAAC,aAAa,CAE3B,EAAE,CAAC,YAAY,CAAC,oBAAoB,EACpC,IAAI,CAAC,aAAa,CACrB,CAAC;IACN,CAAC;IAED;;oHAEgH;IACxG,8BAAc,GAAtB;QAEI,sBAAsB;QACtB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,qBAAqB,CAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAEjC,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,CAAC,iBAAiB,CACzB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;IAC/C,CAAC;IAAA,CAAC;IACN,YAAC;AAAD,CAAC;AArOY,sBAAK;;;;;;;;;;;;;;;;;;;;;;;;;;ACNlB,6FAAkC;AAElC;;oHAEoH;AACpH;IAQI;;;;oHAIgH;IAChH,wBAAoB,QAAqB;QARzC,4BAA4B;QACI,aAAQ,GAA8C,EAAE,CAAC;QASrF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,6BAAI,GAAX,UAAa,KAAmB;;;YAE5B,0BAA0B;YAC1B,KAAuB,sBAAI,CAAC,QAAQ,6CACpC;gBADM,IAAM,OAAO;gBAEf,OAAO,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;aAChC;;;;;;;;;IACL,CAAC;IAED;;;;;;;;;;;oHAWgH;IACzG,uCAAc,GAArB,UAEI,KAAiC,EACjC,OAA8B,EAC9B,kBAA2B,EAE3B,KAA0B,EAC1B,KAA0B,EAE1B,KAAkC,EAClC,KAA0B,EAC1B,aAAkC;QAIlC,IAAM,QAAQ,GAA4B,IAAI,OAAO,CAAC,gBAAgB,CAElE,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,EACxC,KAAK,CACR,CAAC;QAEF,IAAK,OAAO,KAAK,IAAI,EACrB;YACI,IAAI,QAAQ,GAAU,CAAC,CAAC,CAAC;YACzB,IAAI,QAAQ,GAAU,CAAC,CAAC,CAAC;YAEzB,IAAK,CAAC,kBAAkB,EACxB;gBACI,QAAS,OAAO,CAAC,aAAa,EAAE,EAChC;oBACI,KAAK,EAAE,CAAC,SAAS,CAAC,aAAa;wBAC/B;4BACI,QAAQ,GAAG,KAAK,CAAC;4BACjB,QAAQ,GAAG,KAAK,CAAC;4BACjB,MAAM;yBACT;oBAED,KAAK,EAAE,CAAC,SAAS,CAAC,UAAU;wBAC5B;4BACI,QAAQ,GAAG,GAAG,CAAC;4BACf,QAAQ,GAAG,GAAG,CAAC;4BACf,MAAM;yBACT;iBACJ;aACJ;YAED,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC,aAAa,CAElD,OAAO,EACP,QAAQ,EACR,QAAQ,CACX,CAAC;YAEF,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;SACjD;aACI,IAAK,KAAK,KAAK,IAAI,EACxB;YACI,QAAQ,CAAC,YAAY,GAAM,KAAK,CAAC;YACjC,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;SACpC;QAED,QAAQ,CAAC,KAAK,GAAW,KAAK,CAAC;QAC/B,QAAQ,CAAC,aAAa,GAAG,aAAa,CAAC;QAEvC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;oHAIgH;IAClG,mCAAoB,GAAlC;QAEI,OAAO,UAAU,GAAG,MAAM,CAAE,cAAc,CAAC,cAAc,EAAE,CAAE,CAAC;IAClE,CAAC;IAED;;;;;;oHAMgH;IACjG,4BAAa,GAA5B,UAEI,OAAmB,EACnB,OAAe,EACf,OAAe;QAIf,0EAA0E;QAC1E,IAAM,UAAU,GAChB,CACQ,OAAO,CAAC,iBAAiB,EAAE;YAC/B,CAAC,CAAG,OAAO,CAAC,gBAAgB,EAAE;YAC9B,CAAC,CAAG,OAAO,CAAC,kBAAkB,EAAE,CACnC,CAAC;QAEF,IAAK,OAAO,CAAC,iBAAiB,EAAE,EAChC;YACI,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;YACrD,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;SACxD;aAED;YACI,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACpD,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;YAEpD,6CAA6C;YAC7C,IAAK,OAAO,KAAK,CAAC,CAAC,EACnB;gBACM,UAAmB,CAAC,MAAM,GAAG,OAAO,CAAC;aAC1C;YACD,IAAK,OAAO,KAAK,CAAC,CAAC,EACnB;gBACM,UAAmB,CAAC,MAAM,GAAG,OAAO,CAAC;aAC1C;SACJ;QAED,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEzC,OAAO,UAAU,CAAC;IACtB,CAAC;IAtKD,+CAA+C;IACf,6BAAc,GAAwC,CAAC,CAAC;IAsK5F,qBAAC;CAAA;AAzKY,wCAAc;;;;;;;;;;;;;;;ACL3B;;oHAEoH;AACpH,IAAY,eAOX;AAPD,WAAY,eAAe;IAEvB,uDAAuD;IACvD,mDAAG;IAEH,uCAAuC;IACvC,iDAAE;AACN,CAAC,EAPW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAO1B;;;;;;;;;;;;;;;ACVD;;oHAEoH;AACpH,IAAY,WAUX;AAVD,WAAY,WAAW;IAEnB,4BAA4B;IAC5B,6CAAI;IAEJ,iCAAiC;IACjC,+CAAK;IAEL,kDAAkD;IAClD,+CAAK;AACT,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB;;;;;;;;;;;;;;;ACbD;;oHAEoH;AACpH,IAAY,SAOX;AAPD,WAAY,SAAS;IAEjB,qDAAqD;IACrD,qDAAU;IAEV,gDAAgD;IAChD,2DAAa;AACjB,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD,6FAAkC;AAElC;;oHAEoH;AACpH;IAaI;;;;oHAIgH;IAChH,eAAoB,MAA6B;QAhBjD,0CAA0C;QACF,WAAM,GAAwD,IAAI,CAAC;QAE3G,wCAAwC;QACA,iBAAY,GAAkD,IAAI,CAAC;QAC3G,2DAA2D;QACnB,cAAS,GAAqD,IAAI,CAAC;QAE3G,sEAAsE;QAC9B,yBAAoB,GAA0C,KAAK,CAAC;QASxG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED;;;;;;oHAMgH;IACzG,uBAAO,GAAd,UAAgB,KAAY;QAExB,OAAO,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;IAChC,CAAC;IAED;;;;oHAIgH;IACzG,4BAAY,GAAnB;QAEI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;;oHAIgH;IACzG,4BAAY,GAAnB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED;;oHAEgH;IACzG,uBAAO,GAAd;;;YAEI,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;;;;;;;;;QAED,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,EAC9B;YACI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC/B;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,0BAAU,GAAjB,UAAmB,OAAe;;;YAE9B,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,SAAS,GAAI,OAAO,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;aAC7B;;;;;;;;;IACL,CAAC;IAED;;;;;;oHAMgH;IACzG,iCAAiB,GAAxB,UAA0B,GAAe;QAErC,OAAO,GAAG,CAAC,gBAAgB,CACvB,IAAI,CAAC,MAAa,CACrB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACzG,oCAAoB,GAA3B,UAA6B,eAAuC;;;YAEhE,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,eAAe,CAAC,YAAY,EAAE,CAAC,UAAU,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;aAC1D;;;;;;;;;IACL,CAAC;IAED;;;;oHAIgH;IACzG,iCAAiB,GAAxB,UAA0B,KAAqB;;;YAE3C,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,EAAE,CAAC,gBAAgB,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;aACvD;;;;;;;;;IACL,CAAC;IAED;;;;;;oHAMgH;IACzG,sCAAsB,GAA7B,UAA+B,IAAW,EAAE,IAAW,EAAE,IAAW;;QAEhE,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,EAC9B;YACI,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;SACrF;aAED;;gBACI,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;oBADM,IAAM,IAAI;oBAEZ,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;iBACxE;;;;;;;;;SACJ;IACL,CAAC;IAED;;;;;;oHAMgH;IACzG,0BAAU,GAAjB,UAAmB,UAAmB;;;YAElC,KAAyB,4BAAU,CAAC,MAAM,6CAC1C;gBADM,IAAM,SAAS;;oBAEjB,KAAuB,qCAAI,CAAC,MAAM,8CAClC;wBADM,IAAM,OAAO;wBAEf,IAAK,OAAO,CAAC,cAAc,CAAE,SAAS,CAAE,EACxC;4BACI,OAAO,IAAI,CAAC;yBACf;qBACJ;;;;;;;;;aACJ;;;;;;;;;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;oHAMgH;IACzG,+BAAe,GAAtB,UAAwB,KAAc,EAAE,QAAwB,EAAE,oBAA4B;;QAE1F,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QAEjD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,WAAW,CAAC,SAAS,CAExC,KAAK,EACL,QAAQ,EACR,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE,EAC1C,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CACvB,CAAC;;YAEF,iDAAiD;YACjD,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;aACvC;;;;;;;;;QAED,2BAA2B;QAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAEhC,KAAK,CAAC,cAAc,EAAE,EACtB,IAAI,CAAC,YAAY,EACjB,GAAG,EACH,OAAO,CAAC,eAAe,CAAC,WAAW,CACtC,CAAC;IACN,CAAC;IAED;;;;;oHAKgH;IACzG,kCAAkB,GAAzB,UAA2B,KAAmB;QAE1C,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,EAC9B;YACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,qCAAqC,CAAE,CAAC;YAE7D,sCAAsC;YACtC,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EACnD;gBACI,IAAI,CAAC,0BAA0B,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;aAC/C;YAED,6CAA6C;YAC7C,qDAAqD;YAErD,4BAA4B;YAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;IACL,CAAC;IAED;;oHAEgH;IACzG,uCAAuB,GAA9B;;QAEI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;YAEpB,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,EACjC;oBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,EAAE,CAAC,oBAAoB,CAAC,YAAY,CAAE,IAAI,CAAC,eAAe,CAAE,CAAE,CAAC;iBACvF;qBAED;oBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;iBAC/B;aACJ;;;;;;;;;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,+BAAe,GAAtB,UAAwB,KAAmB,EAAE,SAAmC;QAE5E,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,sCAAsC,CAAE,CAAC;QAE9D,gEAAgE;QAChE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,qDAAqD;QACrD,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EACnD;YACI,IAAM,IAAI,GAAgC,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;YAC3D,IAAM,QAAQ,GAA4B,SAAS,CAAE,CAAC,CAAE,CAAC;YAEzD,IAAK,QAAQ,IAAI,IAAI,EACrB;gBACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAEf,6BAA6B;sBAC3B,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAS,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAS,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,QAAQ,CAAK,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,WAAW,CAAE,GAAG,GAAG,CAC/C,CAAC;gBAEF,QAAQ,CAAC,oBAAoB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;aAChD;SACJ;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,qBAAK,GAAZ;;QAEI,IAAM,YAAY,GAA0B,IAAI,CAAC,WAAW,EAAE,CAAC;;YAE/D,0BAA0B;YAC1B,KAA0B,0CAAY,+GACtC;gBADM,IAAM,UAAU;gBAElB,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;gBAElD,iBAAiB;gBACjB,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;gBAE5B,6CAA6C;gBAC7C,UAAU,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;gBAC5E,UAAU,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAAC;gBACtE,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;aAChC;;;;;;;;;QAED,OAAO,IAAI,EAAE,CAAC,KAAK,CAAE,YAAY,CAAE,CAAC;IACxC,CAAC;IAED;;;;;oHAKgH;IACzG,4BAAY,GAAnB,UAAqB,KAAmB,EAAE,KAAY;;;YAElD,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,0BAA0B;gBAC1B,IAAK,IAAI,CAAC,QAAQ,YAAY,OAAO,CAAC,gBAAgB,EACtD;oBACI,IAAM,gBAAgB,GAAgC,KAAK,CAAC,CAAC,sCAAsC;oBAEnG,IAAM,mBAAmB,GAA6B,IAAI,CAAC,QAAQ,CAAC;oBACpE,IAAM,eAAe,GAAiC,mBAAmB,CAAC,YAAY,CAAC;oBACvF,IAAM,IAAI,GAA4C,eAAe,CAAC,CAAC,CAAC;oBACxE,IAAM,IAAI,GAA4C,eAAe,CAAC,CAAC,CAAC;oBACxE,IAAM,IAAI,GAA4C,eAAe,CAAC,CAAC,CAAC;oBAExE,IAAM,IAAI,GAA4C,IAAI,GAAG,gBAAgB,CAAC;oBAC9E,IAAM,IAAI,GAA4C,IAAI,GAAG,gBAAgB,CAAC;oBAC9E,IAAM,IAAI,GAA4C,IAAI,GAAG,gBAAgB,CAAC;oBAC9E,IAAM,eAAe,GAAiC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;oBAC7F,IAAM,mBAAmB,GAA6B,IAAI,OAAO,CAAC,gBAAgB,CAE9E,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,EACxC,KAAK,CACR,CAAC;oBACF,mBAAmB,CAAC,YAAY,GAAM,eAAe,CAAC;oBACtD,mBAAmB,CAAC,eAAe,GAAG,KAAK,CAAC;oBAE5C,+EAA+E;oBAC/E,sEAAsE;oBACtE,+EAA+E;oBAE/E,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;iBACvC;gBACjB;;;;;kBAKE;aACW;;;;;;;;;IACL,CAAC;IAED;;;;;oHAKgH;IACzG,+BAAe,GAAtB,UAAwB,KAAmB,EAAE,IAAyB;QAElE,IAAK,IAAI,CAAC,oBAAoB,EAC9B;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,wCAAwC,CAAE,CAAC;YAE9D,sCAAsC;YACtC,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EACnD;gBACI,IAAK,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,KAAK,IAAI,EAC9B;oBACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,6BAA6B,CAAE,CAAC;oBAEnD,IAAI,CAAC,0BAA0B,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;oBAE5C,MAAM;iBACT;aACJ;SACJ;IACL,CAAC;IAED;;oHAEgH;IACzG,qCAAqB,GAA5B;;;YAEI,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAEO,IAAI,CAAC,eAAe,IAAiB,IAAI;uBACzC,IAAI,CAAC,eAAe,CAAC,WAAW,IAAK,IAAI;uBACzC,IAAI,CAAC,eAAe,CAAC,IAAI,KAAY,OAAO,CAAC,eAAe,CAAC,cAAc,EAElF;oBACI,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAG,IAAI,CAAE,CAAE,CAAC;oBACnG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;iBACtG;aACJ;;;;;;;;;IACL,CAAC;IAED;;oHAEgH;IACzG,mCAAmB,GAA1B;;;YAEI,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,IAAI,IAAI,EAC7E;oBACI,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;iBACpG;aACJ;;;;;;;;;IACL,CAAC;IAED;;oHAEgH;IACzG,oCAAoB,GAA3B;;;YAEI,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,IAAI,IAAI,EAC7E;oBACI,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;iBACtG;aACJ;;;;;;;;;IACL,CAAC;IAED;;;;;oHAKgH;IACxG,2BAAW,GAAnB;;QAEI,IAAM,YAAY,GAA0B,EAAE,CAAC;;YAE/C,KAAoB,sBAAI,CAAC,MAAM,6CAC/B;gBADM,IAAM,IAAI;gBAEZ,2DAA2D;gBAC3D,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,EACjC;oBACI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;oBAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC/B;gBAED,iDAAiD;gBACjD,IAAM,UAAU,GAAwB,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;gBACtE,YAAY,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;aACnC;;;;;;;;;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED;;;;;;oHAMgH;IACxG,0CAA0B,GAAlC,UAAoC,KAAmB,EAAE,KAAY;QAEjE,IAAM,IAAI,GAAgC,IAAI,CAAC,MAAM,CAAK,KAAK,CAAE,CAAC;QAClE,IAAM,QAAQ,GAA4B,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC;QAElE,2CAA2C;QAC3C,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,EACxB;YACI,wBAAwB;YACxB,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;YAEvB,iBAAiB;YACjB,IAAK,QAAQ,IAAI,IAAI,EACrB;gBACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,+CAA+C,CAAE,CAAC;gBAEvE,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAElC,KAAK,EACL,IAAI,EACJ,GAAG,EACH,OAAO,CAAC,eAAe,CAAC,WAAW,CACtC,CAAC;aACL;iBAED;gBACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAEf,uCAAuC;sBACrC,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAS,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,IAAI,CAAS,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,QAAQ,CAAK,GAAG,GAAG;sBAC1C,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAC,WAAW,CAAE,GAAG,GAAG,CAC/C,CAAC;gBAEF,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAAC,eAAe,CAE9C,IAAI,EACJ,QAAQ,CAAC,IAAI,EACb;oBACI,IAAI,EAAS,QAAQ,CAAC,IAAI;oBAC1B,QAAQ,EAAK,QAAQ,CAAC,QAAQ;oBAC9B,WAAW,EAAE,QAAQ,CAAC,WAAW;iBACpC,EACD,KAAK,CACR,CAAC;aACL;YAED,gCAAgC;YAChC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACtC;IACL,CAAC;IACL,YAAC;AAAD,CAAC;AAnhBY,sBAAK;;;;;;;;;;;;;;;ACLlB;;oHAEoH;AACpH,IAAY,iBAUX;AAVD,WAAY,iBAAiB;IAEzB,mBAAmB;IACnB,yDAAI;IAEJ,kDAAkD;IAClD,qGAA0B;IAE1B,+CAA+C;IAC/C,mGAAyB;AAC7B,CAAC,EAVW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAU5B;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD,6FAAkC;AAElC;;oHAEoH;AACpH;IAYI;;;;;oHAKgH;IAChH,qBAAoB,SAAkB,EAAE,cAAuB;QAhB/D,oCAAoC;QACJ,cAAS,GAAyD,IAAI,CAAC;QACvG,4DAA4D;QAC5B,mBAAc,GAAoD,IAAI,CAAC;QAEvG,kDAAkD;QAClB,qBAAgB,GAAkD,CAAC,CAAC;QACpG,+BAA+B;QACC,WAAM,GAA4D,EAAE,CAAC;QAUjG,IAAI,CAAC,SAAS,GAAQ,SAAS,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IAED;;oHAEgH;IACzG,0BAAI,GAAX,UAAa,KAAmB;;QAAhC,iBAmDC;QAjDG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,cAAc,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,GAAG,eAAe,CAAE,CAAC;gCAE5E,QAAQ;YAEhB,IAAM,QAAQ,GAAgB,CAAE,EAAE,CAAC,eAAe,CAAC,UAAU,GAAG,QAAQ,CAAE,CAAC;YAC3E,IAAM,aAAa,GAAW,QAAQ,CAAC,WAAW,CAAE,GAAG,CAAE,CAAC;YAC1D,IAAM,SAAS,GAAe,QAAQ,CAAC,MAAM,CAAE,CAAC,EAAE,aAAa,GAAG,CAAC,CAAE,CAAC;YACtE,IAAM,IAAI,GAAoB,QAAQ,CAAC,MAAM,CAAE,aAAa,GAAM,CAAC,CAAE,CAAC;YAEtE,OAAO,CAAC,WAAW,CAAC,UAAU;YAE1B,oGAAoG;YACpG,EAAE,EACF,SAAS,EACT,IAAI,EACJ,KAAK,EACL,UAAE,cAAqC;gBAEnC,4EAA4E;;;oBAE5E,kBAAkB;oBAClB,KAA4B,6DAAc,0HAC1C;wBADM,IAAM,YAAY;wBAEpB,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC;wBAE/B,sCAAsC;wBACtC,IAAK,YAAY,CAAC,QAAQ,IAAI,IAAI,EAClC;4BACI,YAAY,CAAC,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;yBACjD;qBACJ;;;;;;;;;gBAED,uBAAuB;gBACvB,KAAI,CAAC,MAAM,CAAE,QAAQ,CAAE,GAAG,IAAI,EAAE,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC,uBAAuB,EAAE,CAAC;gBAElD,cAAc;gBACd,KAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,EACD,IAAI,EACJ,UAAE,aAA2B,EAAE,eAAsB,EAAE,iBAAsB;gBAEzE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,4BAA4B,GAAG,IAAI,GAAG,GAAG,CAAE,CAAC;gBAE/D,gBAAgB;gBAChB,KAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,CACJ,CAAC;;;YA7CN,KAAwB,sBAAI,CAAC,SAAS;gBAAhC,IAAM,QAAQ;wBAAR,QAAQ;aA8CnB;;;;;;;;;IACL,CAAC;IAED;;;;oHAIgH;IACzG,sCAAgB,GAAvB,UAAyB,QAAe;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;IACnC,CAAC;IAED;;oHAEgH;IACxG,iCAAW,GAAnB;QAEI,IAAK,EAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EACrD;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,GAAG,iBAAiB,CAAE,CAAC;YAEpF,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAAA,CAAC;IACN,kBAAC;AAAD,CAAC;AAtGY,kCAAW;;;;;;;;;;;;;;;;;;;;;;;;;;ACLxB,6FAAkC;AAElC;;oHAEoH;AACpH;IAeI;;;;;oHAKgH;IAChH,qBAAoB,SAAkB,EAAE,cAAuB;QAhB/D,oCAAoC;QACJ,cAAS,GAAyD,IAAI,CAAC;QACvG,uDAAuD;QACvB,mBAAc,GAAoD,IAAI,CAAC;QAEvG,6CAA6C;QACb,qBAAgB,GAAkD,CAAC,CAAC;QACpG,gCAAgC;QACA,WAAM,GAA4D,EAAE,CAAC;QAUjG,IAAI,CAAC,SAAS,GAAQ,SAAS,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,uCAAuC;QACvC,qDAAqD;IACzD,CAAC;IAED;;;;oHAIgH;IACzG,0BAAI,GAAX,UAAY,KAAmB;;QAA/B,iBAoBC;QAlBG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,eAAe,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,GAAG,UAAU,CAAE,CAAC;QAEpF,IAAK,EAAE,CAAC,YAAY,CAAC,aAAa,EAClC;YACI,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO;SACV;;YAED,KAAwB,sBAAI,CAAC,SAAS,6CACtC;gBADM,IAAM,QAAQ;gBAEhB,IAAI,CAAC,MAAM,CAAE,QAAQ,CAAE,GAAG,IAAI,OAAO,CAAC,KAAK,CAEvC,WAAW,CAAC,iBAAiB,EAAE,EAC/B,QAAQ,EACR,KAAK,EACL,cAAQ,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAChC,CAAC;aACL;;;;;;;;;IACL,CAAC;IAED;;;;;;;oHAOgH;IACzG,+BAAS,GAAhB,UAAkB,EAAS,EAAE,IAAoB;QAApB,mCAAoB;QAE7C,IAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,EACnC;YACI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,iBAAiB,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC;YAEnD,IAAI,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YAE9B,OAAO,IAAI,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAC;SACnC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;oHAEgH;IACxG,iCAAW,GAAnB;QAEI,IAAK,EAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EACrD;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,GAAG,iBAAiB,CAAE,CAAC;YAEpF,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAAA,CAAC;IAEF;;;;oHAIgH;IAClG,6BAAiB,GAA/B;QAEI,OAAO,OAAO,GAAG,MAAM,CAAE,WAAW,CAAC,WAAW,EAAE,CAAE,CAAC;IACzD,CAAC;IAlGD,4CAA4C;IACZ,uBAAW,GAAuD,CAAC,CAAC;IAkGxG,kBAAC;CAAA;AArGY,kCAAW;;;;;;;;;;;;;;;ACLxB,6FAAkC;AAElC;;oHAEoH;AACpH;IAmBI;;;;;;;;;;;;oHAYgH;IAChH,gBAEI,KAAoB,EACpB,UAAyB,EACzB,QAA2B,EAC3B,KAAkB,EAClB,MAAkB,EAClB,MAA8B,EAC9B,UAA+B;QAtCnC,qDAAqD;QACb,WAAM,GAAwD,IAAI,CAAC;QAC3G,+DAA+D;QACvB,aAAQ,GAAsD,IAAI,CAAC;QAE3G,wCAAwC;QACA,eAAU,GAAoD,KAAK,CAAC;QAC5G,6CAA6C;QACL,uBAAkB,GAA4C,CAAC,CAAC;QACxG,2CAA2C;QACH,qBAAgB,GAA8C,CAAC,CAAC;QACxG,kDAAkD;QACV,yBAAoB,GAA0C,KAAK,CAAC;QAE5G,2DAA2D;QACnB,6BAAwB,GAAsC,CAAC,CAAC,CAAC;QA0BrG,uBAAuB;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAE5B,KAAK,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,EAC5C,KAAK,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAE,UAAU,CAAC,QAAQ,CAAE,CAClE,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAM,KAAK,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAK,MAAM,CAAC;QAE9B,6BAA6B;QAC7B,IAAK,UAAU,KAAK,EAAE,CAAC,gBAAgB,CAAC,GAAG,EAC3C;YACI,IAAM,cAAc,GAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,cAAc,CAEzC,KAAK,EACL,QAAQ,CAAC,KAAK,EAAE,EAChB,MAAM,EACN,cAAc,EACd,MAAM,EACN,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EACtB,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,IAAI,EACJ,EAAE,CAAC,YAAY,CAAC,eAAe,CAClC,CAAC;SACL;QAED,IAAI,CAAC,iBAAiB,CAAE,MAAM,CAAE,CAAC;IACrC,CAAC;IAED;;;;;;oHAMgH;IACzG,wBAAO,GAAd,UAAgB,IAAW,EAAE,EAAS,EAAE,IAAY;QAApD,iBAkBC;QAhBG,IAAI,CAAC,UAAU,GAAa,IAAI,CAAC;QAEjC,IAAI,CAAC,kBAAkB,GAAK,IAAI,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAErB,IAAI,EACJ,EAAE,EACF,IAAI,EACJ,EAAE,CAAC,aAAa,CAAC,kBAAkB,EACnC;YACI,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC,CACJ;IACL,CAAC;IAED;;;;oHAIgH;IACzG,yBAAQ,GAAf,UAAiB,KAAa;QAE1B,2BAA2B;QAC3B,IAAK,IAAI,CAAC,UAAU,EACpB;YACI,IAAK,KAAK,EACV;gBACI,4BAA4B;gBAC5B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBAEtD,iBAAiB;gBACjB,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;aAC/B;iBAED;gBACI,mBAAmB;gBACnB,IAAI,CAAC,OAAO,CAER,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,oBAAoB,CAC5B,CAAC;gBAEF,qCAAqC;gBACrC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC;aACzD;SACJ;IACL,CAAC;IAED;;oHAEgH;IACzG,wBAAO,GAAd;QAEI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAEtB,IAAK,IAAI,CAAC,QAAQ,KAAK,IAAI,EAC3B;YACI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC3B;IACL,CAAC;IAED;;;;oHAIgH;IACxG,kCAAiB,GAAzB,UAA2B,MAAyB;QAEhD,QAAS,MAAM,EACf;YACI,KAAK,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;YAC7B,KAAK,EAAE,CAAC,eAAe,CAAC,UAAU;gBAClC;oBACI,gCAAgC;oBAChC,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,eAAe,CAAC,kBAAkB;gBAC1C;oBACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;oBACrD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,eAAe,CAAC,UAAU;gBAClC;oBACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAI,CAAC,CAAE,CAAC;oBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAI,CAAC,CAAE,CAAC;oBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;oBACrD,MAAM;iBACT;SACJ;IACL,CAAC;IACL,aAAC;AAAD,CAAC;AArLY,wBAAM;;;;;;;;;;;;;;;ACLnB;;oHAEoH;AACpH,IAAY,gBAOX;AAPD,WAAY,gBAAgB;IAExB,0BAA0B;IAC1B,qDAAG;IAEH,oCAAoC;IACpC,mDAAE;AACN,CAAC,EAPW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAO3B;;;;;;;;;;;;;;;ACVD,6FAAkC;AAElC;;oHAEoH;AACpH;IAWI;;;;oHAIgH;IAChH,sBAAoB,WAA2B;QAd/C,6CAA6C;QACb,iBAAY,GAAkD,CAAC,CAAC;QAEhG,4DAA4D;QAC5B,mBAAc,GAAgD,EAAE,CAAC;QAEjG,gCAAgC;QACA,gBAAW,GAAmD,EAAE,CAAC;QAS7F,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED;;;;oHAIgH;IACzG,2BAAI,GAAX,UAAa,KAAmB;QAE5B,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EACxD;YACI,IAAM,UAAU,GAAiB,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;YAEvD,IAAI,CAAC,cAAc,CAAE,UAAU,CAAC,QAAQ,CAAE,GAAG,IAAI,OAAO,CAAC,aAAa,CAElE,eAAe,GAAG,MAAM,CAAE,CAAC,CAAE,EAC7B,EAAE,CAAC,eAAe,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,EAC1D,EAAE,CAAC,aAAa,CAAC,oBAAoB,EACrC,UAAU,CAAC,SAAS,EACpB,KAAK,CACR,CAAC;SACL;IACL,CAAC;IAED;;;;oHAIgH;IACzG,yCAAkB,GAAzB;QAEI,OAAO,QAAQ,GAAG,MAAM,CAAE,IAAI,CAAC,YAAY,EAAE,CAAE,CAAC;IACpD,CAAC;IAED;;;;;;oHAMgH;IACzG,uCAAgB,GAAvB,UAAyB,UAAiB;QAEtC,OAAO,IAAI,CAAC,cAAc,CAAE,UAAU,CAAE,CAAC;IAC7C,CAAC;IACL,mBAAC;AAAD,CAAC;AAhEY,oCAAY;;;;;;;;;;;;;;;ACLzB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAiBI;;;;;;oHAMgH;IAChH,oBAEI,KAAuB,EACvB,QAA0B,EAC1B,aAA6B;QAvBjC,qDAAqD;QACrB,aAAQ,GAA8D,IAAI,CAAC;QAC3G,yEAAyE;QACzC,kBAAa,GAAyD,IAAI,CAAC;QAE3G,0CAA0C;QACV,aAAQ,GAA8D,IAAI,CAAC;QAC3G,iDAAiD;QACjB,oBAAe,GAAuD,IAAI,CAAC;QAC3G,6CAA6C;QACb,oBAAe,GAAuD,IAAI,CAAC;QAgBvG,IAAI,CAAC,QAAQ,GAAQ,QAAQ,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,uBAAuB;QACvB,IAAI,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;QAE7B,6BAA6B;QAC7B,IAAK,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAC5C;YACI,IAAI,CAAC,qBAAqB,CAAE,KAAK,CAAE,CAAC;SACvC;QAED,mCAAmC;QACnC,IAAK,EAAE,CAAC,YAAY,CAAC,6BAA6B,EAClD;YACI,IAAI,CAAC,yBAAyB,CAAE,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;SAC5D;IACL,CAAC;IAED;;oHAEgH;IACzG,4BAAO,GAAd;QAEI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAExB,IAAK,IAAI,CAAC,eAAe,KAAK,IAAI,EAClC;YACI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SAClC;QACD,IAAK,IAAI,CAAC,eAAe,KAAK,IAAI,EAClC;YACI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SAClC;IACL,CAAC;IAED;;;;oHAIgH;IACxG,mCAAc,GAAtB,UAAwB,KAAc;QAElC,IAAM,WAAW,GAAc,EAAE,CAAC,OAAO,CAAC,oCAAoC,CAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAE,CAAC;QAE1G,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAEtC,KAAK,EACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EACvB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EACzB,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,iBAAiB,CAAE,EAC7D,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,GAAG,CAAE,EAClC,IAAI,CAAC,QAAQ,CAAC,iCAAiC,EAAE,EACjD,WAAW,EACX,IAAI,EACJ,GAAG,EACH,IAAI,CAAC,aAAa,CACrB,CAAC;QAEF,kBAAkB;QAClB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAE,CAAC;IACvD,CAAC;IAED;;;;oHAIgH;IACxG,0CAAqB,GAA7B,UAA+B,KAAc;QAEzC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,YAAY,CAE9C,KAAK,EACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAChC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,EACJ,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,EACJ,EAAE,CAAC,YAAY,CAAC,gBAAgB,EAChC,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,oBAAoB;SACxD,CAAC;QAEF,kBAAkB;QAClB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAE,CAAC;IAC9D,CAAC;IAED;;;;oHAIgH;IACxG,8CAAyB,GAAjC,UAAmC,KAAmB;QAElD,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAE5C,KAAK,EACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAChC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAE,EACjE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,YAAY,CAAC,kCAAkC,CACrD,CAAC;QAEF,kBAAkB;QAClB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAE,CAAC;IAC9D,CAAC;IA3ID,gGAAgG;IAChE,4BAAiB,GAAqD,KAAK,CAAC;IA2IhH,iBAAC;CAAA;AA9IY,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;ACLvB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAeI;;;;;;;;;oHASgH;IAChH,kBAEI,KAA2B,EAC3B,IAAgC,EAChC,MAA2B,EAC3B,QAAkB,EAClB,SAA2B,EAC3B,UAAyB;QA9B7B,iCAAiC;QACL,UAAK,GAA6D,IAAI,CAAC;QACnG,4CAA4C;QAChB,SAAI,GAA8D,IAAI,CAAC;QACnG,qDAAqD;QACzB,WAAM,GAA4D,IAAI,CAAC;QACnG,2DAA2D;QAC/B,aAAQ,GAA0D,IAAI,CAAC;QACnG,4DAA4D;QAChC,cAAS,GAAyD,IAAI,CAAC;QACnG,gCAAgC;QACJ,eAAU,GAAwD,IAAI,CAAC;QAsB/F,IAAI,CAAC,KAAK,GAAQ,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAS,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAO,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAK,QAAQ,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAI,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED;;;;;;;;;oHASgH;IACzG,8BAAW,GAAlB,UAAoB,KAAc,EAAE,aAA4B,EAAE,MAAa;QAE3E,uBAAuB;QACvB,IAAM,UAAU,GAAiB,IAAI,EAAE,CAAC,UAAU,CAE9C,KAAK,EACL,IAAI,EACJ,aAAa,CAChB,CAAC;QAEF,gBAAgB;QAChB,IAAI,CAAC,kBAAkB,CAAE,MAAM,GAAG,EAAE,CAAC,aAAa,CAAC,yBAAyB,CAAE,CAAC;QAE/E,uBAAuB;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,KAAK,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAElE,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;oHAIgH;IACzG,qCAAkB,GAAzB,UAA2B,KAAY;QAEnC,IAAK,IAAI,CAAC,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,KAAK,IAAI,EACzF;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAEb,0CAA0C;kBACxC,GAAG,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE,GAAG,GAAG;kBACtC,GAAG,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE,GAAG,GAAG;kBACtC,GAAG,GAAG,MAAM,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE,GAAG,GAAG,CAC3C,CAAC;YAEF,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAEb,0BAA0B;kBACxB,GAAG,GAAG,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,GAAG,GAAG,CACzD,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAE,KAAK,CAAE,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;SACvE;aAED;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,6DAA6D,CAAE,CAAC;SACtF;IACL,CAAC;IAED;;;;oHAIgH;IACzG,oDAAiC,GAAxC;QAEI,OAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC;IACrD,CAAC;IAED;;;;oHAIgH;IACzG,2BAAQ,GAAf;QAEI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;;oHAIgH;IACzG,0BAAO,GAAd;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;oHAIgH;IACzG,4BAAS,GAAhB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;oHAMgH;IAClG,iCAAwB,GAAtC,UAAwC,SAAuB;;QAE3D,IAAI,cAAc,GAAiB,QAAQ,CAAC;QAC5C,IAAI,eAAe,GAAgB,IAAI,CAAC;;YAExC,KAAwB,oCAAS,gGACjC;gBADM,IAAM,QAAQ;gBAEhB,IAAK,QAAQ,CAAC,QAAQ,GAAG,cAAc,EACvC;oBACI,cAAc,GAAI,QAAQ,CAAC,QAAQ,CAAC;oBACpC,eAAe,GAAG,QAAQ,CAAC;iBAC9B;aACJ;;;;;;;;;QAED,OAAO,eAAe,CAAC;IAC3B,CAAC;IACL,eAAC;AAAD,CAAC;AAtKY,4BAAQ;;;;;;;;;;;;;;;ACLrB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAkBI;;;;;;;;oHAQgH;IAChH,cAEI,MAA6B,EAC7B,QAA6B,EAC7B,KAAoB,EACpB,YAAqB,EACrB,MAAoB;QA/BxB,oCAAoC;QACJ,WAAM,GAAwD,IAAI,CAAC;QACnG,uCAAuC;QACP,aAAQ,GAAsD,IAAI,CAAC;QACnG,sCAAsC;QACN,UAAK,GAAyD,GAAG,CAAC;QAClG,+CAA+C;QACf,iBAAY,GAAkD,KAAK,CAAC;QACpG,qDAAqD;QACrB,WAAM,GAAwD,CAAC,CAAC;QAEhG,yCAAyC;QACT,gBAAW,GAAmD,IAAI,CAAC;QACnG,wEAAwE;QACxC,QAAG,GAA2D,IAAI,CAAC;QAoB/F,IAAI,CAAC,MAAM,GAAS,MAAM,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAO,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAU,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAS,MAAM,CAAC;QAE3B,8BAA8B;QAC9B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,YAAY,CAEvC,MAAM,EACN,QAAQ,EACR,KAAK,CACR,CAAC;QAEF,gCAAgC;QAChC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QACpF;;;UAGE;IACM,CAAC;IAED;;;;oHAIgH;IACzG,qBAAM,GAAb;QAEI,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED;;;;oHAIgH;IACzG,6BAAc,GAArB;QAEI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,8BAAe,GAAtB,UAAwB,KAAmB;QAEvC,OAAO,EAAE,CAAC,WAAW,CAAC,UAAU,CAE5B,KAAK,EACL,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,WAAW,EAChB,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAC3C,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACzG,wBAAS,GAAhB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,WAAC;AAAD,CAAC;AAzGY,oBAAI;;;;;;;;;;;;;;;ACLjB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAOI;;oHAEgH;IAChH;QARA,uCAAuC;QACX,WAAM,GAAoD,IAAI,CAAC;QAC3F,oCAAoC;QACR,kBAAa,GAA6C,IAAI,CAAC;QAOvF,uBAAuB;QACvB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC;QAEjD,iCAAiC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;QAEvD,iBAAiB;QACjB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IAC7C,CAAC;IAED;;;;oHAIgH;IACzG,uCAAgB,GAAvB;QAEI,8BAA8B;QAC9B,IAAI,WAAW,GAAW,MAAM,CAAC,UAAU,CAAC;QAC5C,IAAI,YAAY,GAAU,MAAM,CAAC,WAAW,CAAC;QAE7C,oCAAoC;QACpC,IAAK,WAAW,GAAI,EAAE,CAAC,aAAa,CAAC,gBAAgB,EACrD;YACI,WAAW,GAAI,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC;SACpD;QACD,IAAK,YAAY,GAAG,EAAE,CAAC,aAAa,CAAC,iBAAiB,EACtD;YACI,YAAY,GAAG,EAAE,CAAC,aAAa,CAAC,iBAAiB,CAAC;SACrD;QAED,IAAM,iBAAiB,GACvB,CACO,IAAI,CAAC,MAAM,CAAC,KAAK,KAAM,WAAW;eAClC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,YAAY,CACzC,CAAC;QAEF,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAI,WAAW,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;QAElC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAEf,gCAAgC;cAC9B,MAAM,CAAE,WAAW,CAAE,GAAG,GAAG,GAAG,MAAM,CAAE,YAAY,CAAE,GAAG,IAAI;cAC3D,WAAW,GAAG,MAAM,CAAE,iBAAiB,CAAE,GAAG,GAAG,CACpD,CAAC;QAEF,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,+BAAQ,GAAf;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACzG,gCAAS,GAAhB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED;;;;oHAIgH;IACzG,sCAAe,GAAtB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;oHAIgH;IACzG,uCAAgB,GAAvB;QAEI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IACL,mBAAC;AAAD,CAAC;AAtGY,oCAAY;;;;;;;;;;;;;;;ACLzB,0FAAoC;AAEpC;;oHAEoH;AACpH;IAAA;IA6KA,CAAC;IAxKG;;;;;;;;;oHASgH;IAClG,8BAAiB,GAA/B,UAEI,KAA4B,EAC5B,SAA8B,EAC9B,YAA6B,EAC7B,aAA6B,EAC7B,WAA6B,EAC7B,OAAsB;QAItB,IAAM,KAAK,GAA4B,IAAI,OAAO,CAAC,gBAAgB,CAE/D,YAAY,CAAC,iBAAiB,EAAE,EAChC,SAAS,EACT,KAAK,CACR,CAAC;QAEF,KAAK,CAAC,OAAO,GAAO,YAAY,CAAE;QAClC,KAAK,CAAC,QAAQ,GAAM,aAAa,CAAC;QAClC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAG;QAClC,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;QAE5B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;;;;oHAUgH;IAClG,8BAAiB,GAA/B,UAEI,KAA4B,EAC5B,SAA8B,EAC9B,QAA8B,EAC9B,SAAqB,EACrB,YAA6B,EAC7B,aAA6B,EAC7B,OAAsB;QAItB,IAAM,KAAK,GAA4B,IAAI,OAAO,CAAC,gBAAgB,CAE/D,YAAY,CAAC,iBAAiB,EAAE,EAChC,SAAS,EACT,KAAK,CACR,CAAC;QAEF,KAAK,CAAC,QAAQ,GAAI,QAAQ,CAAC;QAC3B,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;QACtB,KAAK,CAAC,OAAO,GAAK,YAAY,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAI,aAAa,CAAC;QAChC,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;QAE5B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;;;;;;oHAYgH;IAClG,uBAAU,GAAxB,UAEI,KAA4B,EAC5B,QAA8B,EAC9B,SAA8B,EAC9B,YAAqB,EACrB,QAAqB,EACrB,YAA6B,EAC7B,aAA6B,EAC7B,KAAqB,EACrB,OAAsB;QAItB,IAAM,KAAK,GAAqB,IAAI,OAAO,CAAC,SAAS,CAEjD,YAAY,CAAC,iBAAiB,EAAE,EAChC,QAAQ,EACR,SAAS,EACT,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,YAAY,CAAE,EACxC,QAAQ,EACR,KAAK,CACR,CAAC;QAEF,KAAK,CAAC,OAAO,GAAI,YAAY,CAAE;QAC/B,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC;QAC/B,KAAK,CAAC,KAAK,GAAM,KAAK,CAAC;QACvB,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;QAE5B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;;;;oHAUgH;IAClG,wBAAW,GAAzB,UAEI,KAA4B,EAC5B,QAA8B,EAC9B,YAA6B,EAC7B,aAA6B,EAC7B,KAAqB,EACrB,SAAqB,EACrB,OAAsB;QAItB,IAAM,KAAK,GAAsB,IAAI,OAAO,CAAC,UAAU,CAEnD,YAAY,CAAC,iBAAiB,EAAE,EAChC,QAAQ,EACR,KAAK,CACR,CAAC;QAEF,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,OAAO,GAAK,YAAY,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAI,aAAa,CAAC;QAChC,KAAK,CAAC,KAAK,GAAO,KAAK,CAAC;QACxB,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;QAE5B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;oHAIgH;IACjG,8BAAiB,GAAhC;QAEI,OAAO,OAAO,GAAG,MAAM,CAAE,YAAY,CAAC,WAAW,EAAE,CAAE,CAAC;IAC1D,CAAC;IA1KD,4CAA4C;IACZ,wBAAW,GAAoC,CAAC,CAAC;IA0KrF,mBAAC;CAAA;AA7KqB,oCAAY;;;;;;;;;;;;;;;ACLlC,0FAAoC;AAEpC;;oHAEoH;AACpH;IAYI;;;;oHAIgH;IAChH,uBAAoB,MAAwB;QAf5C,gDAAgD;QAChB,6BAAwB,GAA0C,EAAE,CAAC;QACrG,gDAAgD;QAChB,kBAAa,GAAqD,EAAE,CAAC;QAErG,gDAAgD;QAChB,WAAM,GAA4D,IAAI,CAAC;QACvG,+CAA+C;QACf,eAAU,GAAwD,IAAI,CAAC;QASnG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe;YACrC,CACI,OAAO;kBACL,EAAE,CAAC,eAAe,CAAC,kBAAkB;kBACrC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,cAAc,EAAE;kBAC1C,IAAI,CACT,CAAC;QACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;IACjD,CAAC;IAED;;oHAEgH;IACzG,wCAAgB,GAAvB;QAEI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAO,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAExC,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAC9C,CAAC;IAED;;oHAEgH;IACzG,qCAAa,GAApB;QAEI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAO,OAAO,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC3C,CAAC;IAED;;oHAEgH;IACzG,0DAAkC,GAAzC;QAER;;;UAGE;IACM,CAAC;IACL,oBAAC;AAAD,CAAC;AA/DY,sCAAa;;;;;;;;;;;;;;;ACL1B,6FAAoC;AACpC,qEAAsC;AAEtC;;oHAEoH;AACpH;IAcI;;;;oHAIgH;IAChH,aAAuB,KAAmB;QAjB1C,wCAAwC;QACJ,UAAK,GAA6D,IAAI,CAAC;QAC3G,0BAA0B;QACU,YAAO,GAA2D,IAAI,CAAC;QAC3G,oCAAoC;QACA,mBAAc,GAAoD,IAAI,CAAC;QAC3G,mCAAmC;QACC,cAAS,GAAyD,IAAI,CAAC;QAE3G,qBAAqB;QACe,aAAQ,GAA0D,IAAI,CAAC;QASvG,wBAAwB;QACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAEpD,YAAY;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAE9C,WAAW;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAExC,EAAE,EACF,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,EAC3B,EAAE,CAAC,UAAU,CAAC,YAAY,EAC1B,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,0BAA0B,EACvC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC;QACtC,IAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAC9B;YACI,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;SAClC;QAED,qCAAqC;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACjD,IAAI,CAAC,SAAS,GAAQ,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAOD;;;;oHAIgH;IACzG,oDAAsC,GAA7C,UAA+C,OAAe;QAE1D,iBAAiB;IACrB,CAAC;IAED;;;;;oHAKgH;IACzG,wBAAU,GAAjB,UAAmB,KAAY,EAAE,MAAa;QAE1C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAI,KAAK,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;QAEhC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;IACxC,CAAC;IAED;;oHAEgH;IACzG,qBAAO,GAAd;QAEI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED;;;;oHAIgH;IACzG,oBAAM,GAAb,UAAe,KAAa;QAExB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAExB,IAAK,KAAK,EACV;YACI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC1B;IACL,CAAC;IAED;;;;oHAIgH;IACzG,2BAAa,GAApB,UAAsB,GAAU;QAE5B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAE,CAAC;IACzD,CAAC;IAED;;;;oHAIgH;IACzG,sBAAQ,GAAf,UAAiB,IAAiB;QAE9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAE,CAAC;IAChD,CAAC;IAED;;;;oHAIgH;IACzG,mCAAqB,GAA5B,UAA8B,OAAe;QAEzC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAE,OAAO,CAAE,CAAC;IAC3C,CAAC;IAED;;;;oHAIgH;IACzG,+BAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IAC7C,CAAC;IAED;;;;oHAIgH;IACzG,+BAAiB,GAAxB,UAA0B,KAAY;QAElC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;IAC7C,CAAC;IAED;;oHAEgH;IACxG,uBAAS,GAAjB;QAEI,wBAAwB;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;IACpE,CAAC;IACL,UAAC;AAAD,CAAC;AAtKqB,kBAAG;;;;;;;;;;;;;;;;;;;;;;;;;;ACNzB,6FAAoC;AACpC,qEAAsC;AAEtC;;oHAEoH;AACpH;IAAA;IA0iBA,CAAC;IAriBG;;;;;;;;oHAQgH;IAClG,oBAAS,GAAvB,UAEI,KAAyB,EACzB,UAAmB;QAInB,IAAM,GAAG,GAA+B,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAElF,UAAU,CAAC,eAAe,EAAE,EAC5B,UAAU;QAC1B;;;UAGE;SACW,CAAC;QAEF,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC7B,GAAG,CAAC,gBAAgB,GAAI,KAAK,CAAC;QAC9B,GAAG,CAAC,WAAW,GAAS,GAAG,CAAC;QAE5B,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;;;;;;;oHAWgH;IAClG,0BAAe,GAA7B,UAEI,CAAqB,EACrB,CAAqB,EACrB,KAAqB,EACrB,MAAqB,EACrB,WAAqB,EACrB,SAAqB;QAIrB,IAAM,SAAS,GAAkB,IAAI,IAAI,CAAC,SAAS,CAAE,UAAU,CAAC,eAAe,EAAE,CAAE,CAAC;QAEpF,SAAS,CAAC,IAAI,GAAS,CAAC,CAAC;QACzB,SAAS,CAAC,GAAG,GAAU,CAAC,CAAC;QACzB,SAAS,CAAC,KAAK,GAAQ,MAAM,CAAE,KAAK,CAAG,GAAG,IAAI,CAAC;QAC/C,SAAS,CAAC,MAAM,GAAO,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;QAC/C,SAAS,CAAC,KAAK,GAAQ,WAAW,CAAC;QACnC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC;QAEjC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACvE,SAAS,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAEpE,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;;;;;;;;;;;;oHAgBgH;IAClG,0BAAe,GAA7B,UAEI,IAAqB,EACrB,QAAqB,EACrB,KAAqB,EACrB,WAAqB,EACrB,CAAqB,EACrB,CAAqB,EACrB,KAAqB,EACrB,MAAqB,EACrB,aAAqB,EACrB,aAAqB,EACrB,aAAyB;QAIzB,IAAM,SAAS,GAAkB,IAAI,IAAI,CAAC,SAAS,CAAG,UAAU,CAAC,eAAe,EAAE,CAAG,CAAC;QAEtF,SAAS,CAAC,IAAI,GAAO,IAAI,CAAC;QAC1B,SAAS,CAAC,IAAI,GAAO,CAAC,CAAC;QACvB,SAAS,CAAC,GAAG,GAAQ,CAAC,CAAC;QACvB,SAAS,CAAC,KAAK,GAAM,MAAM,CAAE,KAAK,CAAK,GAAG,IAAI,CAAC;QAC/C,SAAS,CAAC,MAAM,GAAK,MAAM,CAAE,MAAM,CAAI,GAAG,IAAI,CAAC;QAC/C,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAE,QAAQ,CAAE,GAAG,IAAI,CAAC;QAC/C,SAAS,CAAC,KAAK,GAAM,KAAK,CAAC;QAE3B,IAAK,WAAW,KAAK,IAAI,EACzB;YACI,SAAS,CAAC,WAAW,GAAK,WAAW,CAAC;YACtC,SAAS,CAAC,UAAU,GAAM,GAAG,CAAC;YAC9B,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;YAC9B,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;SACjC;QAED,SAAS,CAAC,mBAAmB,GAAO,aAAa,CAAC;QAClD,SAAS,CAAC,iBAAiB,GAAS,aAAa,CAAC;QAClD,SAAS,CAAC,uBAAuB,GAAG,aAAa,CAAC;QAClD,SAAS,CAAC,qBAAqB,GAAK,aAAa,CAAC;QAElD,IAAK,aAAa,EAClB;YACI,SAAS,CAAC,uBAAuB,CAAC,GAAG,CAEjC;gBACI,aAAa,EAAE,CAAC;YACpB,CAAC,CACJ,CAAC;SACL;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;;;;;;;;oHAYgH;IAClG,2BAAgB,GAA9B,UAEI,IAAe,EACf,OAAe,EACf,OAAe,EACf,CAAe,EACf,CAAe,EACf,KAAe,EACf,MAAe;QAIf,IAAM,UAAU,GAAkB,IAAI,IAAI,CAAC,SAAS,CAAE,UAAU,CAAC,eAAe,EAAE,CAAE,CAAC;QAErF,UAAU,CAAC,IAAI,GAAS,IAAI,CAAC;QAC7B,UAAU,CAAC,KAAK,GAAQ,OAAO,CAAC;QAChC,UAAU,CAAC,UAAU,GAAG,OAAO,CAAC;QAChC,UAAU,CAAC,IAAI,GAAS,CAAC,CAAC;QAC1B,UAAU,CAAC,GAAG,GAAU,CAAC,CAAC;QAC1B,UAAU,CAAC,KAAK,GAAQ,MAAM,CAAE,KAAK,CAAE,GAAG,IAAI,CAAC;QAC/C,UAAU,CAAC,MAAM,GAAO,MAAM,CAAC,MAAM,CAAE,GAAG,IAAI,CAAC;QAE/C,UAAU,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACxE,UAAU,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAErE,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;;;;;;;;;;oHAagH;IAClG,uBAAY,GAA1B,UAEI,IAAe,EACf,OAAe,EACf,OAAe,EACf,CAAe,EACf,CAAe,EACf,KAAe,EACf,MAAe,EACf,OAAmB;QAInB,IAAM,MAAM,GAAe,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAErD,UAAU,CAAC,eAAe,EAAE,EAC5B,IAAI,CACP,CAAC;QAEF,MAAM,CAAC,KAAK,GAAQ,OAAO,CAAC;QAC5B,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC;QAC5B,MAAM,CAAC,IAAI,GAAS,CAAC,CAAC;QACtB,MAAM,CAAC,GAAG,GAAU,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,GAAQ,MAAM,CAAE,KAAK,CAAG,GAAG,IAAI,CAAC;QAC5C,MAAM,CAAC,MAAM,GAAO,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;QAE5C,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACpE,MAAM,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAEjE,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAE/B;YACI,OAAO,EAAE,CAAC;QACd,CAAC,CACJ,CAAC;QAEF,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;;;oHAagH;IAClG,yBAAc,GAA5B,UAEI,SAAkB,EAClB,OAAiB,EACjB,OAAiB,EACjB,CAAiB,EACjB,CAAiB,EACjB,KAAiB,EACjB,MAAiB,EACjB,QAAqB;QAIrB,IAAM,QAAQ,GAAiB,IAAI,IAAI,CAAC,QAAQ,CAE5C,UAAU,CAAC,eAAe,EAAE,CAC/B,CAAC;QAEF,QAAQ,CAAC,SAAS,GAAI,SAAS,CAAC;QAChC,QAAQ,CAAC,KAAK,GAAQ,OAAO,CAAC;QAC9B,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC;QAC9B,QAAQ,CAAC,IAAI,GAAS,CAAC,CAAC;QACxB,QAAQ,CAAC,GAAG,GAAU,CAAC,CAAC;QACxB,QAAQ,CAAC,KAAK,GAAQ,MAAM,CAAE,KAAK,CAAG,GAAG,IAAI,CAAC;QAC9C,QAAQ,CAAC,MAAM,GAAO,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;QAE9C,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACtE,QAAQ,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAEnE,QAAQ,CAAC,wBAAwB,CAAC,GAAG,CAEjC;YACI,QAAQ,EAAE,CAAC;QACf,CAAC,CACJ,CAAC;QAEF,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;;;;;;;;;oHAagH;IAClG,4BAAiB,GAA/B,UAEI,KAAiB,EACjB,OAAiB,EACjB,OAAiB,EACjB,CAAiB,EACjB,CAAiB,EACjB,KAAiB,EACjB,MAAiB,EACjB,OAAsC;QAItC,IAAM,WAAW,GAAoB,IAAI,IAAI,CAAC,WAAW,CAErD,UAAU,CAAC,eAAe,EAAE,CAC/B,CAAC;QAEF,WAAW,CAAC,KAAK,GAAQ,KAAK,CAAC;QAC/B,WAAW,CAAC,KAAK,GAAQ,OAAO,CAAC;QACjC,WAAW,CAAC,UAAU,GAAG,OAAO,CAAC;QACjC,WAAW,CAAC,IAAI,GAAS,CAAC,CAAC;QAC3B,WAAW,CAAC,GAAG,GAAU,CAAC,CAAC;QAC3B,WAAW,CAAC,KAAK,GAAQ,MAAM,CAAE,KAAK,CAAG,GAAG,IAAI,CAAC;QACjD,WAAW,CAAC,MAAM,GAAO,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;QAEjD,WAAW,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACzE,WAAW,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAEtE,WAAW,CAAC,4BAA4B,CAAC,GAAG,CAExC,UAAE,OAAe;YACb,OAAO,CAAE,OAAO,CAAE,CAAC;QACvB,CAAC,CACJ,CAAC;QAEF,OAAO,WAAW,CAAC;IACvB,CAAC;IAED;;;;;;;;;;;;;;;;oHAgBgH;IAClG,uBAAY,GAA1B,UAEI,KAAmB,EACnB,OAAmB,EACnB,OAAmB,EACnB,OAAmB,EACnB,OAAmB,EACnB,WAAmB,EACnB,CAAmB,EACnB,CAAmB,EACnB,KAAmB,EACnB,MAAmB,EACnB,QAAqC;QAIrC,IAAM,MAAM,GAAe,IAAI,IAAI,CAAC,MAAM,CAEtC,UAAU,CAAC,eAAe,EAAE,CAC/B,CAAC;QAEF,MAAM,CAAC,KAAK,GAAS,KAAK,CAAC;QAC3B,MAAM,CAAC,OAAO,GAAQ,OAAO,CAAC;QAC9B,MAAM,CAAC,OAAO,GAAQ,OAAO,CAAC;QAE9B,MAAM,CAAC,KAAK,GAAS,OAAO,CAAC;QAC7B,MAAM,CAAC,UAAU,GAAI,OAAO,CAAC;QAC7B,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QAEjC,MAAM,CAAC,IAAI,GAAU,CAAC,CAAC;QACvB,MAAM,CAAC,GAAG,GAAW,CAAC,CAAC;QACvB,MAAM,CAAC,KAAK,GAAS,MAAM,CAAE,KAAK,CAAG,GAAG,IAAI,CAAC;QAC7C,MAAM,CAAC,MAAM,GAAQ,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC;QAE7C,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;QACpE,MAAM,CAAC,iBAAiB,GAAK,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAEjE,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAEhD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;;;oHAagH;IAClG,qBAAU,GAAxB,UAEI,EAAmB,EACnB,EAAmB,EACnB,EAAmB,EACnB,EAAmB,EACnB,KAAmB,EACnB,KAAmB,EACnB,WAAmB;QAInB,IAAM,IAAI,GAAa,IAAI,IAAI,CAAC,IAAI,CAEhC,UAAU,CAAC,eAAe,EAAE,CAC/B,CAAC;QAEF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAEb,IAAI,CAAC,KAAK,GAAO,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAK,WAAW,KAAK,IAAI,EACzB;YACI,IAAI,CAAC,WAAW,GAAK,WAAW,CAAC;YACjC,IAAI,CAAC,UAAU,GAAM,GAAG,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;SAC5B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;;;;;oHAWgH;IAClG,sBAAW,GAAzB,UAEI,QAAmB,EACnB,CAAmB,EACnB,CAAmB,EACnB,SAAmB,EACnB,SAAmB,EACnB,WAAmB;QAInB,IAAM,KAAK,GAAc,IAAI,IAAI,CAAC,KAAK,CAEnC,UAAU,CAAC,eAAe,EAAE,EAC5B,EAAE,CAAC,eAAe,CAAC,cAAc,GAAG,QAAQ,CAC/C,CAAC;QAEF,KAAK,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACtC,KAAK,CAAC,iBAAiB,GAAK,SAAS,CAAC;QACtC,KAAK,CAAC,SAAS,GAAa,IAAI,CAAC;QACjC,KAAK,CAAC,OAAO,GAAe,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAEpD,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QACf,KAAK,CAAC,GAAG,GAAI,CAAC,CAAC;QAEf,IAAK,WAAW,KAAK,IAAI,EACzB;YACI,KAAK,CAAC,WAAW,GAAK,WAAW,CAAC;YAClC,KAAK,CAAC,UAAU,GAAM,GAAG,CAAC;YAC1B,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC;YAC1B,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC;SAC7B;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;oHAKgH;IAClG,4CAAiC,GAA/C,UAAiD,YAA+B,EAAE,KAAY;;QAE1F,IAAI,wBAAwB,GAAW,IAAI,CAAC;;YAC5C,KAA2B,0CAAY,+GACvC;gBADM,IAAM,WAAW;gBAEnB,IAAK,WAAW,CAAC,SAAS,EAC1B;oBACI,wBAAwB,GAAG,KAAK,CAAC;iBACpC;aACJ;;;;;;;;;QAED,qCAAqC;QACrC,IAAK,wBAAwB,EAC7B;YACI,mCAAmC;YACnC,YAAY,CAAE,KAAK,CAAE,CAAC,SAAS,GAAG,IAAI,CAAC;SAC1C;IACL,CAAC;IAED;;;;;oHAKgH;IAClG,mCAAwB,GAAtC,UAAwC,MAAkB,EAAE,OAAc;QAEtE,IAAM,QAAQ,GAAoB,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;QAC1D,IAAM,SAAS,GAAmB,MAAM,CAAC,cAAc,CAEnD,QAAQ,EACR,WAAW,CACI,CAAC;QAEpB,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC;IAC7B,CAAC;IAED;;;;oHAIgH;IACjG,0BAAe,GAA9B;QAEI,OAAO,KAAK,GAAG,MAAM,CAAE,UAAU,CAAC,SAAS,EAAE,CAAE,CAAC;IACpD,CAAC;IAviBD,oDAAoD;IACpB,oBAAS,GAAqD,CAAC,CAAC;IAuiBpG,iBAAC;CAAA;AA1iBqB,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhC,6FAAoC;AACpC,qEAAqC;AAErC;;oHAEoH;AACpH;IAA6B,2BAAM;IAO/B;;;;oHAIgH;IAChH,iBAAoB,KAAmB;QAAvC,YAEI,kBAAO,KAAK,CAAE,SACjB;QAbD,yBAAyB;QACW,kBAAY,GAAkD,IAAI,CAAC;QACvG,qBAAqB;QACe,eAAS,GAAqD,IAAI,CAAC;;IAUvG,CAAC;IAED;;oHAEgH;IACzG,sBAAI,GAAX;QAEI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,CAEzC,yBAAyB,EACzB,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,EAC3B,CAAC,EACD,IAAI,CAAC,OAAO,CAAC,0BAA0B,EACvC,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,CAEtC,uBAAuB,EACvB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,OAAO,CAAC,2BAA2B,EACxC,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;IAC5C,CAAC;IAED;;;;oHAIgH;IACzG,wBAAM,GAAb,UAAe,KAAa;QAExB,iBAAM,MAAM,YAAE,KAAK,CAAE,CAAC;IAC1B,CAAC;IAED;;;;oHAIgH;IACzG,wDAAsC,GAA7C,UAA+C,OAAe;QAE1D,8CAA8C;QAC9C,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAM,OAAO,CAAC;IAC1C,CAAC;IACL,cAAC;AAAD,CAAC,CAlE4B,EAAE,CAAC,GAAG,GAkElC;AAlEY,0BAAO;;;;;;;;;;;;;;ACNpB,4BAA4B;;;;;;;;;;;;;;;AAE5B,6FAAoC;AACpC,qEAAqC;AAErC;;oHAEoH;AACpH;IAA4C,0CAAM;IAoB9C;;;;;oHAKgH;IAChH,gCAAoB,KAAmB,EAAE,MAA6B;QAAtE,YAEI,kBAAO,KAAK,CAAE,SAGjB;QApBD,6CAA6C;QACb,sBAAgB,GAA8C,IAAI,CAAC;QAEnG,sDAAsD;QACtB,oBAAc,GAAgD,IAAI,CAAC;QAEnG,qDAAqD;QACrB,YAAM,GAAwD,IAAI,CAAC;QAY/F,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAC;IAED;;oHAEgH;IACzG,qCAAI,GAAX;QAAA,iBA6FC;QA3FG,IAAM,gBAAgB,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAEjE,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,sBAAsB,CAAC,gBAAgB,EACvC,sBAAsB,CAAC,YAAY,CACtC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,gBAAgB,CAAE,CAAC;QAE1C,IAAM,IAAI,GAAc,EAAE,CAAC,UAAU,CAAC,WAAW,CAE7C,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,EAAE,EACzC,EAAE,EACF,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,sBAAsB,CAAC,gBAAgB,CAC1C,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;QAE9B,IAAM,QAAQ,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAEzD,qCAAqC,EACrC,EAAE,CAAC,UAAU,CAAC,oBAAoB,EAClC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,QAAQ,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,QAAQ,CAAE,CAAC;QAElC,IAAM,KAAK,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAEtD,EAAE,EACF,GAAG,EACH,GAAG,EACH,CAAC,EACD,sBAAsB,CAAC,gBAAgB,EACvC,sBAAsB,CAAC,YAAY,CACtC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;QAE/B,IAAM,cAAc,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE/D,MAAM,EACN,EAAE,CAAC,UAAU,CAAC,oBAAoB,EAClC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,cAAc,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC;QAClF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,cAAc,CAAE,CAAC;QAExC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,UAAU,CAAC,YAAY,CAE9C,KAAK,EACL,KAAK,EACL,KAAK,EACL,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAC7C,EAAE,CAAC,YAAY,CAAC,6BAA6B,EAC7C,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,UAAE,KAAY;YAEV,2DAA2D;YAE3D,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAE,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE,CAAC;QAC1F,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAE/C,uBAAuB;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC,4BAA4B,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QACxE,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;IAC9D,CAAC;IAED;;;;oHAIgH;IACzG,uCAAM,GAAb,UAAe,KAAa;QAExB,iBAAM,MAAM,YAAE,KAAK,CAAE,CAAC;IAC1B,CAAC;IAzID,gCAAgC;IACA,mCAAY,GAAkD,wBAAwB,CAAC;IACvH,kCAAkC;IACF,qCAAc,GAAgD,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;IACrI,yCAAyC;IACT,uCAAgB,GAA8C,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;IACrI,oCAAoC;IACJ,uCAAgB,GAA8C,SAAS,CAAC;IAmI5G,6BAAC;CAAA,CA5I2C,EAAE,CAAC,GAAG,GA4IjD;AA5IY,wDAAsB;;;;;;;;;;;;;;;ACRnC,6FAAoC;AACpC,qEAAsC;AAEtC;;oHAEoH;AACpH;IASI;;;;oHAIgH;IAChH,sCAAoB,KAAiC;QAZrD,kDAAkD;QAClB,wBAAmB,GAAgC,IAAI,CAAC;QACxF,mCAAmC;QACH,kBAAa,GAAsC,IAAI,CAAC;QACxF,kCAAkC;QACF,iBAAY,GAAuC,IAAI,CAAC;QASpF,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAEpD,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,CAAC,sBAAsB,CAAC,gBAAgB,EAC1C,EAAE,CAAC,sBAAsB,CAAC,YAAY,CACzC,CAAC;QACF,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,mBAAmB,CAAE,CAAC;QAE7C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAE9C,EAAE,EACF,EAAE,CAAC,UAAU,CAAC,oBAAoB,EAClC,EAAE,CAAC,sBAAsB,CAAC,cAAc,EACxC,EAAE,CAAC,sBAAsB,CAAC,gBAAgB,EAC1C,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC;QACtF,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAEvC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAE7C,EAAE,EACF,EAAE,CAAC,UAAU,CAAC,oBAAoB,EAClC,EAAE,CAAC,sBAAsB,CAAC,cAAc,EACxC,EAAE,CAAC,sBAAsB,CAAC,gBAAgB,EAC1C,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC;QACrF,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACtC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;IAC1C,CAAC;IAED;;;;;oHAKgH;IACzG,6DAAsB,GAA7B,UAA+B,OAAe,EAAE,QAAe;QAE3D,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,sBAAsB,GAAG,QAAQ,GAAG,GAAG,CAAE,CAAC;QAE5D,8BAA8B;QAC9B,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,SAAS,GAAS,OAAO,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,SAAS,GAAU,OAAO,CAAC;QAE7C,eAAe;QACf,QAAS,QAAQ,EACjB;YACI,KAAK,MAAM;gBACX;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,YAAY,CAAC;oBACvC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,2EAA2E;0BAClG,+FAA+F;0BAC/F,qEAAqE,CAAC;oBACxE,MAAM;iBACT;YAED,KAAK,MAAM;gBACX;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC;oBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,yEAAyE;0BAChG,iGAAiG;0BACjG,sDAAsD,CAAC;oBACzD,MAAM;iBACT;YAED,KAAK,YAAY;gBACjB;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC;oBACxC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,wEAAwE;0BAC/F,+FAA+F;0BAC/F,sCAAsC,CAAC;oBACzC,MAAM;iBACT;YAED,KAAK,OAAO;gBACZ;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,OAAO,CAAC;oBAClC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,0EAA0E;0BACjG,+EAA+E,CAAC;oBAClF,MAAM;iBACT;YAED,KAAK,YAAY;gBACjB;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC;oBACxC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,mEAAmE;0BAC1F,8FAA8F;0BAC9F,+DAA+D,CAAC;oBAClE,MAAM;iBACT;YAED,KAAK,MAAM;gBACX;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC;oBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,kEAAkE;0BACzF,8FAA8F;0BAC9F,0FAA0F,CAAC;oBAC7F,MAAM;iBACT;SACJ;IACL,CAAC;IACL,mCAAC;AAAD,CAAC;AAvIY,oEAA4B;;;;;;;;;;;;;;;ACNzC,6FAAoC;AACpC,qEAAqC;AAErC;;oHAEoH;AACpH;IA4BI;;;;oHAIgH;IAChH,kBAAoB,KAAiC;QAZrD,kCAAkC;QACE,OAAE,GAAyD,IAAI,CAAC;QACpG,iCAAiC;QACG,aAAQ,GAAmD,IAAI,CAAC;QACpG,oBAAoB;QACgB,SAAI,GAA8D,IAAI,CAAC;QASvG,KAAK;QACL,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAEnC,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,qBAAqB,EACrC,QAAQ,CAAC,YAAY,CACxB,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,KAAK,GAAI,MAAM,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;QACxB,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE5B,WAAW;QACX,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAEzC,YAAY,EACZ,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,CAAC,EACD,EAAE,CAAC,UAAU,CAAC,YAAY,EAC1B,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,2BAA2B,EACxC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAElC,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,OAAO,CAEtB,KAAK,EACL,QAAQ,CAAC,cAAc,EACvB,CAAE,EAAE,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,CAAE,EACpC,EAAE,CAAC,UAAU,CAAC,qBAAqB,CACtC,CAAC;QAEF,gCAAgC;QAChC,IAAI,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;IAChC,CAAC;IAED;;;;oHAIgH;IACzG,gCAAa,GAApB,UAAsB,OAAe;QAEjC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,EAAE,CAAC,SAAS,GAAS,OAAO,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAE,OAAO,CAAE,CAAC;IACvC,CAAC;IAED;;oHAEgH;IACzG,yBAAM,GAAb;QAEI,IAAI,CAAC,eAAe,CAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAE,CAAC;IACxD,CAAC;IAED;;;;oHAIgH;IACzG,oCAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACzC,CAAC;IAED;;;;oHAIgH;IACzG,oCAAiB,GAAxB,UAA0B,KAAY;QAElC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;IACzC,CAAC;IAED;;;;oHAIgH;IACxG,kCAAe,GAAvB,UAAyB,SAAsB;QAE3C,IAEQ,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAG;eACzC,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAE,EAEjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAG,CAAC;YAChD,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAE,CAAC;YAEhD,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAClC;QAED,IAEQ,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAK;eAC3C,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAE,EAEnD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAK,CAAC;YAClD,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAE,CAAC;YAElD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;SAC9B;QAED,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;SAC/B;IACL,CAAC;IA3JD,gCAAgC;IACI,qBAAY,GAAsD,CAClG,6BAA6B,CAChC,CAAC;IAEF,iCAAiC;IACG,uBAAc,GAClD;QACI,IAAI,EAAE,CAAC,WAAW,CAAE,kBAAkB,EAAmB,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,sBAAsB,EAAe,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,uBAAuB,EAAc,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,mCAAmC,EAAE,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,sBAAsB,EAAe,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,iCAAiC,EAAI,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,qBAAqB,EAAgB,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,sBAAsB,EAAe,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAE;QACzF,IAAI,EAAE,CAAC,WAAW,CAAE,aAAa,EAAwB,EAAE,CAAC,SAAS,CAAC,WAAW,CAAQ;KAC5F,CAAC;IA2IN,eAAC;CAAA;AA9JY,4BAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNrB,6FAAoC;AACpC,qEAAqC;AAErC;;oHAEoH;AACpH;IAA4C,0CAAM;IAgF9C;;;;;oHAKgH;IAChH,gCAAoB,KAAmB,EAAE,MAA6B;QAAtE,YAEI,kBAAO,KAAK,CAAE,SAGjB;QAvBD,6CAA6C;QACb,sBAAgB,GAA0C,IAAI,CAAC;QAC/F,oEAAoE;QACpC,uBAAiB,GAAyC,IAAI,CAAC;QAE/F,kDAAkD;QAClB,4BAAsB,GAAoC,EAAE,CAAC;QAC7F,mDAAmD;QACnB,6BAAuB,GAAmC,EAAE,CAAC;QAC7F,qDAAqD;QACrB,YAAM,GAAoD,IAAI,CAAC;QAY3F,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAC;IAED;;oHAEgH;IACzG,qCAAI,GAAX;QAAA,iBA0VC;QAxVG,IAAM,cAAc,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE/D,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,cAAc,CAAE,CAAC;QAExC,IAAM,eAAe,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAEhE,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,eAAe,CAAE,CAAC;QAEzC,IAAM,cAAc,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE/D,EAAE,EACF,EAAE,EACF,GAAG,EACH,GAAG,EACH,sBAAsB,CAAC,gBAAgB,EACvC,sBAAsB,CAAC,YAAY,CACtC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,cAAc,CAAE,CAAC;QAExC,IAAM,IAAI,GAAc,EAAE,CAAC,UAAU,CAAC,WAAW,CAE7C,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,EAAE,EACxC,EAAE,EACF,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,sBAAsB,CAAC,gBAAgB,CAC1C,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;QAE9B,IAAM,SAAS,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE1D,YAAY,EACZ,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,SAAS,CAAE,CAAC;QACnC,IAAM,SAAS,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE1D,cAAc,EACd,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,GAAG,EACH,EAAE,EACF,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,SAAS,CAAE,CAAC;QACnC,IAAM,SAAS,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE1D,cAAc,EACd,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,GAAG,EACH,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,SAAS,CAAE,CAAC;QAEnC,IAAM,KAAK,GAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAE5C,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;QAE/B,IAAM,oBAAoB,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAErE,aAAa,EACb,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,oBAAoB,CAAE,CAAC;gCAErC,CAAC;YAEN,IAAM,UAAU,GAAmB,sBAAsB,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAC5E,IAAM,QAAQ,GAAqB,CAC/B,OAAO;kBACL,MAAM,CAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC5B,IAAI;kBACJ,MAAM,CAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC5B,IAAI;kBACJ,MAAM,CAAE,UAAU,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC5B,IAAI,CACT,CAAC;YACF,IAAM,WAAW,GAAoB,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAEhE,kBAAkB,EAClB,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,sBAAsB,CAAC,YAAY,EACnC,EAAE,EACF,GAAG,GAAG,CAAE,CAAC,GAAG,EAAE,CAAE,EAChB,EAAE,EACF,EAAE,EACF,UAAE,OAAe;gBACb,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CACb,uBAAuB;sBACrB,MAAM,CAAE,CAAC,CAAE;sBACX,IAAI;sBACJ,MAAM,CAAE,OAAO,CAAE;sBACjB,GAAG,CACR,CAAC;gBACF,IAAK,OAAO,EACZ;oBACI,KAAI,CAAC,4BAA4B,CAAE,CAAC,CAAE,CAAC;iBAC1C;qBAED;oBACI,EAAE,CAAC,UAAU,CAAC,iCAAiC,CAAE,KAAI,CAAC,sBAAsB,EAAE,CAAC,CAAE,CAAC;iBACrF;YACL,CAAC,CACJ,CAAC;YACF,OAAK,sBAAsB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAChD,OAAK,KAAK,CAAC,UAAU,CAAE,WAAW,CAAE,CAAC;YAErC,IAAM,YAAY,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE7D,sBAAsB,CAAC,iBAAiB,CAAE,CAAC,CAAE,EAC7C,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,QAAQ,EACR,sBAAsB,CAAC,mBAAmB,CAAE,CAAC,CAAE,EAC/C,EAAE,EACF,GAAG,GAAG,CAAE,CAAC,GAAG,EAAE,CAAE,EAChB,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC;gBACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,iBAAiB,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC;gBAC5D,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;YACjC,CAAC,CACJ,CAAC;YACF,OAAK,KAAK,CAAC,UAAU,CAAE,YAAY,CAAE,CAAC;;;QA3D1C,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC;oBAAjE,CAAC;SA4DT;QACD,IAAI,CAAC,sBAAsB,CAAE,CAAC,CAAE,CAAC,SAAS,GAAG,IAAI,CAAC;QAElD,IAAM,KAAK,GAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAE5C,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;QAE/B,IAAM,qBAAqB,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAEtE,cAAc,EACd,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,qBAAqB,CAAE,CAAC;gCAEtC,CAAC;YAEN,IAAM,WAAW,GAAmB,sBAAsB,CAAC,aAAa,CAAE,CAAC,CAAE,CAAC;YAC9E,IAAM,QAAQ,GAAqB,CAC/B,OAAO;kBACL,MAAM,CAAE,WAAW,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC7B,IAAI;kBACJ,MAAM,CAAE,WAAW,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC7B,IAAI;kBACJ,MAAM,CAAE,WAAW,CAAC,CAAC,GAAG,GAAG,CAAE;kBAC7B,IAAI,CACT,CAAC;YACF,IAAM,WAAW,GAAoB,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAEhE,mBAAmB,EACnB,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,sBAAsB,CAAC,YAAY,EACnC,EAAE,EACF,GAAG,GAAG,CAAE,CAAC,GAAG,EAAE,CAAE,EAChB,EAAE,EACF,EAAE,EACF,UAAE,OAAe;gBACb,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CACb,uBAAuB,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,MAAM,CAAE,OAAO,CAAE,GAAG,GAAG,CACzE,CAAC;gBACF,IAAK,OAAO,EACZ;oBACI,KAAI,CAAC,6BAA6B,CAAE,CAAC,CAAE,CAAC;iBAC3C;qBAED;oBACI,EAAE,CAAC,UAAU,CAAC,iCAAiC,CAAE,KAAI,CAAC,uBAAuB,EAAE,CAAC,CAAE,CAAC;iBACtF;YACL,CAAC,CACJ,CAAC;YACF,OAAK,uBAAuB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YACjD,OAAK,KAAK,CAAC,UAAU,CAAE,WAAW,CAAE,CAAC;YAErC,IAAM,YAAY,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE7D,sBAAsB,CAAC,kBAAkB,CAAE,CAAC,CAAE,EAC9C,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,QAAQ,EACR,sBAAsB,CAAC,oBAAoB,CAAE,CAAC,CAAE,EAChD,EAAE,EACF,GAAG,GAAG,CAAE,CAAC,GAAG,EAAE,CAAE,EAChB,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC;gBACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,iBAAiB,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC;gBAC5D,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;YACjC,CAAC,CACJ,CAAC;YACF,OAAK,KAAK,CAAC,UAAU,CAAE,YAAY,CAAE,CAAC;;;QAvD1C,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC;oBAAlE,CAAC;SAwDT;QACD,IAAI,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAC,SAAS,GAAG,IAAI,CAAC;QAEnD,IAAM,KAAK,GAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAE5C,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;QAE/B,IAAM,cAAc,GAAkB,EAAE,CAAC,UAAU,CAAC,eAAe,CAE/D,MAAM,EACN,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,sBAAsB,CAAC,cAAc,EACrC,sBAAsB,CAAC,gBAAgB,EACvC,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,cAAc,CAAE,CAAC;QAExC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,UAAU,CAAC,YAAY,CAE9C,KAAK,EACL,KAAK,EACL,KAAK,EACL,EAAE,CAAC,YAAY,CAAC,iCAAiC,EACjD,SAAS,EACT,SAAS,EACT,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF,UAAE,KAAY;YAEV,2DAA2D;YAE3D,2FAA2F;YAC3F,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAE,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE,CAAC;QAC1F,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAE/C,IAAM,KAAK,GAAa,EAAE,CAAC,UAAU,CAAC,UAAU,CAE5C,EAAE,EACF,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;QAE/B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,YAAY,CAE/C,YAAY,EACZ,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,iCAAiC,EACjD,EAAE,EACF,GAAG,EACH,GAAG,EACH,EAAE,EACF;YACI,KAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE,CAAC;QAC9C,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC;IACpD,CAAC;IAED;;;;oHAIgH;IACzG,uCAAM,GAAb,UAAe,KAAa;QAExB,iBAAM,MAAM,YAAE,KAAK,CAAE,CAAC;IAC1B,CAAC;IAED;;;;oHAIgH;IACxG,6DAA4B,GAApC,UAAsC,UAAiB;QAEnD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,0CAA0C,GAAG,MAAM,CAAE,UAAU,CAAE,GAAG,GAAG,CAAE,CAAC;QAE7F,qBAAqB;QACrB,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAE,sBAAsB,CAAC,YAAY,CAAE,UAAU,CAAE,CAAE,CAAC;IAC7F,CAAC;IAED;;;;oHAIgH;IACxG,8DAA6B,GAArC,UAAuC,UAAiB;QAEpD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,2CAA2C,GAAG,MAAM,CAAE,UAAU,CAAE,GAAG,GAAG,CAAE,CAAC;QAE9F,sBAAsB;QACtB,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAE,sBAAsB,CAAC,aAAa,CAAE,UAAU,CAAE,CAAE,CAAC;IAC/F,CAAC;IA5dD,gCAAgC;IACA,mCAAY,GAC5C;QACI,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAK,GAAG,EAAK,GAAG,CAAK;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAI,IAAI,EAAI,IAAI,CAAI;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAI,IAAI,EAAI,IAAI,CAAI;KAC/C,CAAC;IACF,6CAA6C;IACb,0CAAmB,GACnD;QACI,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;KACzC,CAAC;IACF,qCAAqC;IACL,wCAAiB,GACjD;QACI,mBAAmB;QACnB,aAAa;QACb,yBAAyB;QACzB,gBAAgB;KACnB,CAAC;IAEF,iCAAiC;IACD,oCAAa,GAC7C;QACI,IAAI,OAAO,CAAC,MAAM,CAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAK,GAAG,EAAK,GAAG,CAAK;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAI,GAAG,EAAK,GAAG,CAAK;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAK,IAAI,EAAI,IAAI,CAAI;KAC/C,CAAC;IACF,8CAA8C;IACd,2CAAoB,GACpD;QACI,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;QACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB;KACzC,CAAC;IACF,sCAAsC;IACN,yCAAkB,GAClD;QACI,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;QACnB,eAAe;KAClB,CAAC;IAEF,gCAAgC;IAChC,2CAA2C;IACX,mCAAY,GAA8C,CACtF,4BAA4B,CAC/B,CAAC;IACF,kCAAkC;IACF,qCAAc,GAA4C,CACtF,EAAE,CAAC,YAAY,CAAC,sBAAsB,CACzC,CAAC;IACF,yCAAyC;IACT,uCAAgB,GAA0C,CACtF,EAAE,CAAC,YAAY,CAAC,sBAAsB,CACzC,CAAC;IACF,oCAAoC;IACJ,uCAAgB,GAA0C,SAAS,CAAC;IA6ZxG,6BAAC;CAAA,CA/d2C,EAAE,CAAC,GAAG,GA+djD;AA/dY,wDAAsB;;;;;;;;;;;;;;;ACNnC,gGAAuC;AAGvC;;oHAEoH;AACpH;IAQI;;;;;oHAKgH;IAChH,eAEI,GAAiC,EACjC,IAAkB;QAftB,oDAAoD;QAChB,kBAAa,GAAqD,CAAC,CAAC;QAExG,mDAAmD;QACf,WAAM,GAA4D,IAAI,CAAC;QAcvG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC;QAEnD,IAAI,KAAK,GAAU,IAAI,CAAC;QACxB,QAAS,IAAI,EACb;YACI,KAAK,EAAE,CAAC,SAAS,CAAC,IAAI;gBACtB;oBACI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC;oBAC7C,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,WAAW;gBAC7B;oBACI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;oBAC/C,MAAM;iBACT;SACJ;QAED,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAEvC,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,CAAC,YAAY,CAAC,qBAAqB,EACrC,KAAK,CACR,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,KAAK,GAAI,MAAM,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAE5B,GAAG,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IAClC,CAAC;IAED;;oHAEgH;IACzG,sBAAM,GAAb;QAEI,oCAAoC;QACpC,EAAE,IAAI,CAAC,aAAa,CAAC;QAErB,6CAA6C;QAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAChB,EAAE,CAAC,UAAU,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAC1F,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACzG,8BAAc,GAArB;QAEI,OAAO,CAAE,IAAI,CAAC,aAAa,IAAI,CAAC,CAAE,CAAC;IACvC,CAAC;IAED;;oHAEgH;IACzG,uBAAO,GAAd;QAEI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IACL,YAAC;AAAD,CAAC;AApFY,sBAAK;;;;;;;;;;;;;;;;;;;;;;;;;;ACNlB,gGAAuC;AAGvC;;oHAEoH;AACpH;IAAA;QAEI,2CAA2C;QACP,YAAO,GAAmD,EAAE,CAAC;IAkDrG,CAAC;IAhDG;;oHAEgH;IACzG,6BAAM,GAAb;QAEI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;oHAKgH;IACzG,+BAAQ,GAAf,UAAiB,GAA+B,EAAE,IAAiB;QAE/D,IAAI,CAAC,OAAO,CAAC,IAAI,CAEb,IAAI,EAAE,CAAC,KAAK,CAER,GAAG,EACH,IAAI,CACP,CACJ,CAAC;IACN,CAAC;IAED;;;oHAGgH;IACxG,yCAAkB,GAA1B;;;YAEI,qBAAqB;YACrB,KAAsB,sBAAI,CAAC,OAAO,6CAClC;gBADM,IAAM,MAAM;gBAEd,MAAM,CAAC,MAAM,EAAE,CAAC;aACnB;;;;;;;;;QAED,+BAA+B;QAC/B,KAAM,IAAI,KAAK,GAAU,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,KAAK,EACrE;YACI,IAAK,IAAI,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC,cAAc,EAAE,EAC3C;gBACI,IAAI,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC,OAAO,EAAE,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;aACnC;SACJ;IACL,CAAC;IACL,mBAAC;AAAD,CAAC;AArDY,oCAAY;;;;;;;;;;;;;;;ACNzB;;oHAEoH;AACpH,IAAY,SAOX;AAPD,WAAY,SAAS;IAEjB,6CAA6C;IAC7C,yCAAI;IAEJ,6CAA6C;IAC7C,uDAAW;AACf,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;;;;;;;;;;;;;;;ACVD;;oHAEoH;AACpH,IAAY,SAqBX;AArBD,WAAY,SAAS;IAEjB,iCAAiC;IACjC,uDAAW;IAEX,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;IACjB,yBAAyB;IACzB,mEAAiB;AACrB,CAAC,EArBW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAqBpB;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBD;;oHAEoH;AACpH;IAUI;;;;;;;oHAOgH;IAChH,iBAEI,KAA0C,EAC1C,SAA+B,EAC/B,CAAqB,EACrB,aAAsB;QArB1B,4BAA4B;QACQ,cAAS,GAAqD,EAAE,CAAC;QACrG,mFAAmF;QAC/C,kBAAa,GAAiD,KAAK,CAAC;QAExG,gEAAgE;QAC5B,wBAAmB,GAA2C,CAAC,CAAC;QAkBhG,IAAI,CAAC,SAAS,GAAa,SAAS,CAAC;QACrC,IAAI,CAAC,aAAa,GAAS,aAAa,CAAC;QAEzC,mCAAmC;QACnC,KAAM,IAAI,KAAK,GAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAClE;YACI,4BAA4B;YAC5B,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC,eAAe,CAAE,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,EAAE,CAAG,CAAC;SACrE;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED;;;;oHAIgH;IACzG,+BAAa,GAApB,UAAsB,OAAe;;;YAEjC,KAAwB,sBAAI,CAAC,SAAS,6CACtC;gBADM,IAAM,QAAQ;gBAEhB,QAAQ,CAAC,aAAa,CAAE,OAAO,CAAE,CAAC;aACrC;;;;;;;;;IACL,CAAC;IAED;;oHAEgH;IACzG,oCAAkB,GAAzB;QAEI,IAAK,IAAI,CAAC,mBAAmB,GAAG,CAAC,EACjC;YACI,EAAE,IAAI,CAAC,mBAAmB,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aACI,IAAK,IAAI,CAAC,aAAa,EAC5B;YACI,IAAI,CAAC,mBAAmB,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YACzD,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAED;;oHAEgH;IACzG,gCAAc,GAArB;QAEI,IAAK,IAAI,CAAC,mBAAmB,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAE,EAC7D;YACI,EAAE,IAAI,CAAC,mBAAmB,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aACI,IAAK,IAAI,CAAC,aAAa,EAC5B;YACI,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAED;;oHAEgH;IACzG,iCAAe,GAAtB;QAEI,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,mBAAmB,CAAE,CAAC,OAAO,EAAE,CAAC;IACzD,CAAC;IAED;;;;oHAIgH;IACzG,mCAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED;;;;oHAIgH;IACzG,mCAAiB,GAAxB,UAA0B,KAAY;QAElC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED;;oHAEgH;IACxG,iCAAe,GAAvB;QAEI,wBAAwB;QACxB,KAAM,IAAI,KAAK,GAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAClE;YACI,IAAK,KAAK,KAAK,IAAI,CAAC,mBAAmB,EACvC;gBACI,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,CAAC;aACpC;iBAED;gBACI,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC,QAAQ,EAAE,CAAC;aACtC;SACJ;IACL,CAAC;IACL,cAAC;AAAD,CAAC;AApIY,0BAAO;;;;;;;;;;;;;;;ACNpB,gGAAuC;AACvC,qEAAsC;AAEtC;;oHAEoH;AACpH;IAUI;;;;;oHAKgH;IAChH,qBAAoB,KAAY,EAAE,MAAmB;QAdrD,mCAAmC;QACC,UAAK,GAAyD,IAAI,CAAC;QACvG,0DAA0D;QACtB,WAAM,GAAwD,IAAI,CAAC;QAEvG,gEAAgE;QAC5B,cAAS,GAA8C,IAAI,CAAC;QAU5F,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED;;;;;oHAKgH;IACzG,qCAAe,GAAtB,UAAwB,KAAiC,EAAE,CAAQ;QAE/D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAE1C,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,CAAC,EACD,CAAC,EACD,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,2BAA2B,EACxC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EACnC,IAAI,CACP,CAAC;QAEF,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;IACvC,CAAC;IAED;;;;oHAIgH;IACzG,mCAAa,GAApB,UAAsB,OAAe;QAEjC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC;IACvC,CAAC;IAED;;oHAEgH;IACzG,4BAAM,GAAb;QAEI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,iCAAiC,CAAC;IAC7E,CAAC;IAED;;oHAEgH;IACzG,8BAAQ,GAAf;QAEI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;IAClE,CAAC;IAED;;oHAEgH;IACzG,6BAAO,GAAd;QAEI,IAAM,IAAI,GAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QAElC,QAAS,IAAI,CAAC,MAAM,EACpB;YACI,KAAK,EAAE,CAAC,SAAS,CAAC,WAAW;gBAC7B;oBACI,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;oBAC3C,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAE,CAAC;oBAC1C,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;oBAC3C,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAE,CAAC;oBACpD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAE,CAAC;oBAC1C,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,qBAAqB,CAAE,CAAC;oBACrD,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAE,CAAC;oBACzC,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,SAAS,CAAC,iBAAiB;gBACnC;oBACI,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAE,CAAC;oBACzC,MAAM;iBACT;SACJ;IACL,CAAC;IACL,kBAAC;AAAD,CAAC;AA1IY,kCAAW;;;;;;;;;;;;;;;ACNxB,gGAAuC;AACvC,qEAAsC;AAEtC;;oHAEoH;AACpH;IAQI;;;;;oHAKgH;IAChH,oBAEI,GAAgC,EAChC,GAAW;QAff,yDAAyD;QACrB,kBAAa,GAAqD,CAAC,CAAC;QAExG,wDAAwD;QACpB,gBAAW,GAAuD,IAAI,CAAC;QAcvG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC;QAExD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAE5C,GAAG,EACH,EAAE,CAAC,UAAU,CAAC,qBAAqB,EACnC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,EAAE,CAAC,UAAU,CAAC,YAAY,EAC1B,CAAC,EACD,GAAG,EACH,EAAE,EACF,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CAAC,OAAO,CAAC,yBAAyB,EACtC,IAAI,CACP,CAAC;QAEF,GAAG,CAAC,UAAU,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IACvC,CAAC;IAED;;oHAEgH;IACzG,2BAAM,GAAb;QAEI,oCAAoC;QACpC,EAAE,IAAI,CAAC,aAAa,CAAC;QAErB,6CAA6C;QAC7C,IAAK,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,0BAA0B,EAClE;YACI,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,0BAA0B,CAAE,CAAC;SAC9F;IACL,CAAC;IAED;;;;oHAIgH;IACzG,mCAAc,GAArB;QAEI,OAAO,CAAE,IAAI,CAAC,aAAa,IAAI,CAAC,CAAE,CAAC;IACvC,CAAC;IAED;;oHAEgH;IACzG,4BAAO,GAAd;QAEI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAED;;;;;oHAKgH;IACzG,iCAAY,GAAnB,UAAqB,KAAY,EAAE,KAAY;QAE3C,IAAM,mBAAmB,GACzB,CACI,EAAE,CAAC,UAAU,CAAC,qBAAqB,GAAG,EAAE,CAAC,UAAU,CAAC,4BAA4B,CACnF,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,GAAG;YACpB,CACI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY;kBACzB,CAAE,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,mBAAmB,CAAE;kBACvC,CAAE,KAAK,GAAW,mBAAmB,CAAE,CAC5C,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CAAC;AA7FY,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvB,gGAAuC;AAGvC;;oHAEoH;AACpH;IAAA;QAEI,4CAA4C;QACR,iBAAY,GAAsD,EAAE,CAAC;IAwE7G,CAAC;IAtEG;;oHAEgH;IACzG,kCAAM,GAAb;QAEI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;oHAKgH;IACzG,yCAAa,GAApB,UAAsB,GAA+B,EAAE,GAAU;QAE7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAElB,IAAI,EAAE,CAAC,UAAU,CAEb,GAAG,EACH,GAAG,CACN,CACJ,CAAC;QAEF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED;;;oHAGgH;IACxG,8CAAkB,GAA1B;;;YAEI,sBAAsB;YACtB,KAAuB,sBAAI,CAAC,YAAY,6CACxC;gBADM,IAAM,OAAO;gBAEf,OAAO,CAAC,MAAM,EAAE,CAAC;aACpB;;;;;;;;;QAED,gCAAgC;QAChC,IAAI,kBAAkB,GAAW,KAAK,CAAC;QACvC,KAAM,IAAI,KAAK,GAAU,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,KAAK,EAC1E;YACI,IAAK,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,cAAc,EAAE,EAChD;gBACI,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,OAAO,EAAE,CAAC;gBACrC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;gBAErC,kBAAkB,GAAG,IAAI,CAAC;aAC7B;SACJ;QAED,oCAAoC;QACpC,IAAK,kBAAkB,EACvB;YACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;IACL,CAAC;IAED;;oHAEgH;IACxG,+CAAmB,GAA3B;QAEI,KAAM,IAAI,KAAK,GAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,KAAK,EACrE;YACI,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,YAAY,CAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC;SAC9E;IACL,CAAC;IACL,wBAAC;AAAD,CAAC;AA3EY,8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN9B,uFAA4B;AAE5B;;oHAEoH;AACpH;IAAyB,uBAAa;IAElC;;;;;oHAKgH;IAChH,aAAoB,KAAc,EAAE,KAAc;eAE9C,kBAAO,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,CAAE;IACpD,CAAC;IACL,UAAC;AAAD,CAAC,CAZwB,EAAE,CAAC,UAAU,GAYrC;AAZY,kBAAG;;;;;;;;;;;;;;;;;;;;;;;;;;ACLhB,uFAA4B;AAE5B;;oHAEoH;AACpH;IAmBI;;;;;;oHAMgH;IAChH,oBAAuB,KAAc,EAAE,KAAc,EAAE,MAAa;QArBpE,6CAA6C;QACT,UAAK,GAAyD,IAAI,CAAC;QACvG,+CAA+C;QACX,UAAK,GAAyD,IAAI,CAAC;QACvG,8CAA8C;QACV,kBAAa,GAAiD,CAAC,CAAC;QAEpG,uCAAuC;QACH,WAAM,GAAwD,CAAC,CAAC;QACpG,oCAAoC;QACA,cAAS,GAAqD,KAAK,CAAC;QACxG,sDAAsD;QAClB,yBAAoB,GAA0C,CAAC,CAAC;QAWhG,IAAI,CAAC,KAAK,GAAW,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAW,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAU,MAAM,CAAC;IAChC,CAAC;IAED;;;;;oHAKgH;IACzG,4CAAuB,GAA9B;QAEI,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;IACvC,CAAC;IAED;;;;oHAIgH;IACzG,6BAAQ,GAAf;QAEI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;oHAEgH;IACzG,2BAAM,GAAb;IAEA,CAAC;IAED;;oHAEgH;IACzG,4BAAO,GAAd;QAEI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED;;;;oHAIgH;IACzG,+BAAU,GAAjB,UAAmB,OAAe;QAE9B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;IACrC,CAAC;IAED;;;;;;oHAMgH;IACzG,uCAAkB,GAAzB,UAA2B,IAAY;;QAEnC,IAAM,SAAS,GAA6B,EAAE,CAAC;QAC/C,IAAM,YAAY,GAA0B,IAAI,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAE,IAAI,CAAC,MAAM,EAAE,CAAE,CAAC;QAE/F,IAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAC5B;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAEb,KAAK,GAAG,MAAM,CAAE,YAAY,CAAC,MAAM,CAAE,GAAG,sCAAsC,CACjF,CAAC;;gBAEF,KAA2B,0CAAY,+GACvC;oBADM,IAAM,WAAW;oBAEnB,SAAS,CAAC,IAAI,CAEV,IAAI,EAAE,CAAC,QAAQ,CAEX,WAAW,CAAC,WAAW,EACvB,WAAW,CAAC,UAAU,EACtB,WAAW,CAAC,SAAS,CAAE,IAAI,CAAE,EAC7B,WAAW,CAAC,QAAQ,EACpB,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,EACvB,IAAI,CACP,CACJ,CAAC;iBACL;;;;;;;;;SACJ;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;;;oHAOgH;IACzG,yBAAI,GAAX,UAAa,KAAmB,EAAE,MAAa,EAAE,IAAyB;QAEtE,sBAAsB;QACtB,IAAK,IAAI,CAAC,MAAM,KAAK,UAAU,CAAC,WAAW,EAC3C;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;YAC9C,OAAO;SACV;QAED,4BAA4B;QAC5B,IAAK,IAAI,CAAC,SAAS,EACnB;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,8BAA8B,CAAE,CAAC;YACpD,OAAO;SACV;QAED,6BAA6B;QAC7B,IAAK,MAAM,KAAK,CAAC,EACjB;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,sCAAsC,CAAE,CAAC;YAC5D,OAAO;SACV;QAED,eAAe;QACf,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;QACtB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAEb,wBAAwB;cACtB,MAAM,CAAE,MAAM,CAAE;cAChB,4BAA4B;cAC5B,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,GAAG,GAAG,CAChC,CAAC;QAEF,2BAA2B;QAC3B,IAAK,IAAI,CAAC,MAAM,IAAI,CAAC,EACrB;YACI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;QAED,0BAA0B;QAC1B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAE,KAAK,EAAE,CAAE,MAAM,GAAG,IAAI,CAAC,aAAa,CAAE,CAAE,CAAC;QAElE,iEAAiE;QACjE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAE1C,sCAAsC;QACtC,IAAK,IAAI,CAAC,MAAM,KAAK,CAAC,EACtB;YACI,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;YAE5C,oBAAoB;YACpB,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;SAC1C;IACL,CAAC;IApLD,6EAA6E;IACzC,sBAAW,GAAmD,CAAC,CAAC,CAAC;IAoLzG,iBAAC;CAAA;AAvLqB,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLhC,uFAA4B;AAE5B;;oHAEoH;AACpH;IAA0B,wBAAa;IAQnC;;;;;oHAKgH;IAChH,cAAoB,KAAc,EAAE,KAAc;QAAlD,YAEI,kBAAO,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,CAAE,SACnD;QAfD,4CAA4C;QACpB,YAAM,GAAgD,KAAK,CAAC;QAEpF,wCAAwC;QAChB,UAAI,GAAkD,GAAG,CAAC;;IAWlF,CAAC;IAED;;oHAEgH;IACzG,qBAAM,GAAb;QAEI,uBAAuB;QACvB,iBAAM,MAAM,WAAE,CAAC;QAEf,4BAA4B;QAC5B,IAAK,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAE,EACxD;YACI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAE,CAAC;SACnD;QAED,4BAA4B;QAC5B,IAAK,CAAC,IAAI,CAAC,MAAM,EACjB;YACI,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAE7B,GAAG,EACH,IAAI,CAAC,IAAI,EACT,GAAG,CACN,CAAC;YACF,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;SACpB;IACL,CAAC;IAED;;;;;;oHAMgH;IACxG,wBAAS,GAAjB,UAAmB,YAAqB;QAEpC,IAAK,CAAC,IAAI,CAAC,MAAM,EACjB;YACI,IAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,YAAY,CAAE,EAC1C;gBACI,IAAI,CAAC,IAAI,EAAE,CAAC;gBAEZ,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;oHAEgH;IACxG,mBAAI,GAAZ;QAEI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;QAEnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;IACnC,CAAC;IACL,WAAC;AAAD,CAAC,CA/EyB,EAAE,CAAC,UAAU,GA+EtC;AA/EY,oBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLjB,uFAA4B;AAE5B;;oHAEoH;AACpH;IAA0B,wBAAa;IAEnC;;;;;;oHAMgH;IAChH,cAAoB,KAAc,EAAE,KAAc,EAAE,MAAgC;QAAhC,kCAAgB,IAAI,CAAC,WAAW;eAEhF,kBAAO,KAAK,EAAE,KAAK,EAAE,MAAM,CAAE;IACjC,CAAC;IAED;;oHAEgH;IACzG,qBAAM,GAAb;QAEI,gDAAgD;QAChD,IAAI,CAAC,QAAQ,EAAE,CAAC,qBAAqB,EAAE,CAAC;IAC5C,CAAC;IACL,WAAC;AAAD,CAAC,CAtByB,EAAE,CAAC,UAAU,GAsBtC;AAtBY,oBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLjB,gGAAqC;AAErC;;oHAEoH;AACpH;IAAqC,0BAAa;IAAlD;;IAeA,CAAC;IAAD,aAAC;AAAD,CAAC,CAfoC,EAAE,CAAC,UAAU,GAejD;AAfqB,wBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL5B,gGAAqC;AAErC;;oHAEoH;AACpH;IAAiC,+BAAS;IA4CtC;;;;;;;;oHAQgH;IAChH,qBAEI,KAAuB,EACvB,KAAuB,EACvB,QAA8B,EAC9B,IAAqB,EACrB,aAA6B;QANjC,YASI,kBAEI,KAAK,EAEL,IAAI,EAAE,CAAC,KAAK,CAER;YACI,wBAAwB;YACxB,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,KAAK,EACL,EAAE,CAAC,SAAS,CAAC,KAAK,EAClB,QAAQ,CAAC,KAAK,EAAE,EAChB,EAAE,CAAC,MAAM,CAAC,YAAY,EACtB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC,OAAO,CAAE,CAAC,CAAE;YAEd,wBAAwB;YACxB,EAAE,CAAC,WAAW,CAAC,YAAY,CAEvB,KAAK,EACL,QAAQ,CAAC,KAAK,EAAE,CAAC,UAAU,CAAE,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAE,EACnE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,kBAAkB,CAAC,aAAa,EACnC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EACtB,EAAE,CAAC,OAAO,CAAC,cAAc,EACzB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,aAAa,CAChB;YAED,6BAA6B;YAC7B,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,KAAK,EACL,QAAQ,CAAC,KAAK,EAAE,CAAC,UAAU,CAAE,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAE,EACtE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EACtB,EAAE,CAAC,OAAO,CAAC,cAAc,EACzB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,aAAa,CAChB;YAED,8BAA8B;YAC9B,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,KAAK,EACL,QAAQ,CAAC,KAAK,EAAE,CAAC,UAAU,CAAE,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAE,EACrE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EACtB,EAAE,CAAC,OAAO,CAAC,cAAc,EACzB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,aAAa,CAChB;SACJ,CACJ;QAEjB;;;;;;;;;;;;;;;WAeG;QACa,EAAE,CAAC,UAAU,CAAC,WAAW,CAC5B,SAuCJ;QA3KD,4DAA4D;QAC5B,aAAO,GAA2D,GAAG,CAAC;QACtG,2DAA2D;QAC3B,gBAAU,GAAwD,KAAK,CAAC;QACxG,uEAAuE;QACvC,sBAAgB,GAAkD,GAAG,CAAC;QAEtG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QACxG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QAExG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QACxG,mEAAmE;QACnC,iBAAW,GAAuD,GAAG,CAAC;QAEtG,wBAAwB;QACQ,cAAQ,GAA0D,IAAI,CAAC;QACvG,8BAA8B;QACE,mBAAa,GAAqD,IAAI,CAAC;QACvG,0BAA0B;QACM,eAAS,GAAyD,IAAI,CAAC;QAEvG,gCAAgC;QACA,UAAI,GAA8D,IAAI,CAAC;QACvG,gCAAgC;QACA,UAAI,GAA8D,IAAI,CAAC;QACvG,qCAAqC;QACL,cAAQ,GAA0D,IAAI,CAAC;QACvG,sCAAsC;QACN,eAAS,GAAyD,IAAI,CAAC;QAuGnG,yDAAyD;QACzD,KAAI,CAAC,QAAQ,GAAQ,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;QAC3D,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC5C,KAAI,CAAC,SAAS,GAAO,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAE5C,mCAAmC;QACnC,KAAI,CAAC,IAAI,GAAQ,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,cAAc,CAAQ,CAAC;QACxE,KAAI,CAAC,IAAI,GAAQ,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,cAAc,CAAQ,CAAC;QACxE,KAAI,CAAC,QAAQ,GAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,mBAAmB,CAAG,CAAC;QACxE,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,oBAAoB,CAAE,CAAC;QAExE,0BAA0B;QAC1B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAO,KAAI,CAAC,IAAI,CAAE,CAAC;QACtC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,KAAI,CAAC,IAAI,CAAE,CAAC;QACtC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAE,KAAI,CAAC,IAAI,CAAE,CAAC;QAEtC,qBAAqB;QACrB,KAAI,CAAC,OAAO,GAAO,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;QAC3D,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;QAE1D,yBAAyB;QACzB,KAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,gCAAgC;QAChC,KAAI,CAAC,mBAAmB,EAAE,CAAC;;QACvC;;;;;;;;;;;UAWE;IACM,CAAC;IAED;;oHAEgH;IACzG,4BAAM,GAAb;QAEI,cAAc;QACd,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,iBAAiB;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,aAAa;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,eAAe;QACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,WAAW;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED;;;;;oHAKgH;IACzG,oDAA8B,GAArC;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;;oHAKgH;IACzG,oDAA8B,GAArC;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;oHAEgH;IACxG,gCAAU,GAAlB;QAEI,IAAM,SAAS,GAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAE3D,+BAA+B;QAC/B,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAG;QAC5C,+CAA+C;UAEnD;YACI,IAAI,YAAY,GAAU,CAAC,CAAC;YAE5B,eAAe;YACf,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAG,EACvD;gBACI,YAAY,GAAG,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC;aACpD;iBAED;gBACI,YAAY,GAAG,EAAE,CAAC,kBAAkB,CAAC,YAAY,CAAC;aACrD;YAED,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YAE7E,wBAAwB;YACxB,IAAK,EAAE,CAAC,kBAAkB,CAAC,oBAAoB,EAC/C;gBACI,IAAI,CAAC,mBAAmB,CAAE,YAAY,CAAE,CAAC;aAC5C;SACJ;QACD,IAEQ,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE;QAC5C,kDAAkD;UAEtD;YACI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YACnG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YAEnG,wBAAwB;YACxB,IAAK,EAAE,CAAC,kBAAkB,CAAC,oBAAoB,EAC/C;gBACI,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,kBAAkB,CAAC,YAAY,CAAE,CAAC;aACnE;SACJ;QAED,SAAS;QACT,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAK;QAC9C,iDAAiD;UAErD;YACI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YACnG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;SACtG;QACD,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAM;QAC/C,kDAAkD;UAEtD;YACI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;YACnG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;SACtG;QAED,SAAS;QACT,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;SAC5D;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;SAC3D;QAED,iBAAiB;QACjB,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,kBAAkB,CAAC;SACpE;QACD,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,kBAAkB,CAAC;SACnE;QAED,OAAO;QACP,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,EACrD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,CAAC;YAEvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;QAED,OAAO;QACP,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,EAC7C;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;YAE/C,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAED,OAAO;QACP,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAED,OAAO;QACP,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;IACzD,CAAC;IAED;;oHAEgH;IACxG,gCAAU,GAAlB;QAEI,2BAA2B;QAC3B,IAEI,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG;eACrB,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG;eACxB,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,EAE/B;YACZ;;;;;;;;;;;cAWE;YAEc,kDAAkD;YAElD,yBAAyB;YACzB,IAAK,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,EACtC;gBACI,gDAAgD;gBAEhD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,eAAe;iBAElD,IAAI,OAAO,CAAC,OAAO,CAEf,IAAI,CAAC,SAAS,CAAC,CAAC,EAChB,IAAI,CAAC,SAAS,CAAC,CAAC,EAChB,IAAI,CAAC,SAAS,CAAC,CAAC,CACnB,EACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CACrB,CAAC;aACL;YAED,+CAA+C;YAC/C,IAAK,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,EACzD;gBACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC1B;YAED,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SAC3C;aAED;YACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SAC3B;IACL,CAAC;IAED;;oHAEgH;IACxG,0CAAoB,GAA5B;QAEI,IAAK,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,EACtC;YACI,sCAAsC;YACtC,IAAM,QAAQ,GAAmB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;YAC/E,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAEvC,IAAI,OAAO,CAAC,OAAO,CAEf,CAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,wBAAwB,CAAE;YAE/D,uBAAuB;YACvB,CACI,IAAI,CAAC,SAAS,EAAE;gBAEhB,4BAA4B;gBAC5B,CAAC,CAAC,CAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,2BAA2B,CAAE;gBAEpE,gBAAgB;gBAChB,CAAC,CAAC,QAAQ,CAAC,CAAC,CACf,EAED,CAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,wBAAwB,CAAE,CAClE,CACJ,CAAC;YAEF,yCAAyC;YACzC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAExC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CACzB,CAAC;SACL;IACL,CAAC;IAED;;oHAEgH;IACxG,qCAAe,GAAvB;QAEI,IAAK,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,EACjC;YACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAE,CAAC;YAC9F,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,CAAC;SAC9B;QAED,IAAK,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,EACjC;YACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EAC7D;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;aAC5D;iBACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EACnE;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;aAC7D;YAED,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,CAAC;SAC9B;QAED,cAAc;QACd,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAEtC,IAAI,CAAC,IAAI,EACT,GAAG,EAAE,mBAAmB;QACxB,IAAI,CAAC,QAAQ,CAAC,CAAC,EACf,GAAG,CACN,CAAC;QAEF,cAAc;QACd,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAEtC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,CAAC,EACf,GAAG,EACH,GAAG,CACN,CAAC;IACN,CAAC;IAED;;oHAEgH;IACxG,gCAAU,GAAlB;QAEI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAEvB,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,mBAAmB,GAAG,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,GAAG,CAAE,CAAC;IAC3E,CAAC;IAED;;oHAEgH;IACxG,gCAAU,GAAlB;QAER;;;;;;UAME;QACU,oCAAoC;QACpC,IAAK,IAAI,CAAC,SAAS,EAAE,EACrB;YACI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,yCAAyC,CAAE,CAAC;YACjE,OAAO;SACV;QAED,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,qBAAqB,CAAC;IACnE,CAAC;IAED;;oHAEgH;IACxG,uCAAiB,GAAzB;QAEI,IAAK,IAAI,CAAC,IAAI,EACd;YACI,IAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,eAAe,EACzD;gBACI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,kBAAkB,CAAC,aAAa,CAAC;gBAEpD,IAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,eAAe,EACzD;oBACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,eAAe,CAAC;iBACxD;gBAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;SACJ;aAED;YACI,IAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,EAC3D;gBACI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;gBAExD,IAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,EAC3D;oBACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;iBAC1D;gBAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;SACJ;IACL,CAAC;IAED;;oHAEgH;IACxG,4CAAsB,GAA9B;QAEI,IAAM,wBAAwB,GAAa,GAAG,CAAC;QAC/C,IAAM,0BAA0B,GAAW,IAAI,CAAC;QAEhD,IAAM,YAAY,GAAmB,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QAElE,IAAK,IAAI,CAAC,IAAI,EACd;YACI,IAAK,IAAI,CAAC,WAAW,GAAG,wBAAwB,EAChD;gBACI,IAAI,CAAC,WAAW,IAAI,0BAA0B,CAAC;gBAE/C,IAAK,IAAI,CAAC,WAAW,GAAG,wBAAwB,EAChD;oBACI,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;iBAC/C;gBAED,YAAY,CAAC,+BAA+B,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;aACpE;SACJ;aAED;YACI,IAAK,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAC9D;gBACI,IAAI,CAAC,WAAW,IAAI,0BAA0B,CAAC;gBAE/C,IAAK,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAC9D;oBACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;iBAC7D;gBAED,YAAY,CAAC,+BAA+B,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;aACpE;SACJ;IACL,CAAC;IAED;;oHAEgH;IACxG,wCAAkB,GAA1B;QAEI,IAAK,IAAI,CAAC,UAAU,EACpB;YACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,EAC1B;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,yBAAyB,CAAC;gBAEnE,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,EAC3B;oBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;iBACzB;aACJ;iBACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,EAC/B;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,yBAAyB,CAAC;gBAEnE,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,EAC3B;oBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;iBACzB;aACJ;SACJ;IACL,CAAC;IAED;;oHAEgH;IACxG,+BAAS,GAAjB;QAEI,+BAA+B;QAC/B,IAAK,IAAI,CAAC,IAAI,EACd;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACpB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,kBAAkB,CAAE,CAAC;YAExC,iCAAiC;YACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAElB,0CAA0C;YAC1C,IAAM,IAAI,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;SAChC;IACL,CAAC;IAED;;;;oHAIgH;IACxG,gCAAU,GAAlB;QAEI,IAAM,WAAW,GAAW,IAAI,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,EAAE,EAAE,CAAE,CAAE,CAAC;QAC3E,IAAM,WAAW,GAAW,IAAI,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,EAAE,EAAE,CAAE,CAAE,CAAC;QAE3E,IAAM,MAAM,GAAyB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAChE,IAAM,QAAQ,GAAuB,IAAI,OAAO,CAAC,OAAO,CAEpD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,EAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,EAC7B,GAAG,CACN,CAAC;QACF,IAAM,KAAK,GAAW,IAAI,CAAC;QAE3B,OAAO,IAAI,EAAE,CAAC,IAAI,CAEd,MAAM,EACN,QAAQ,EACR,KAAK,EACL,KAAK,EACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED;;oHAEgH;IACxG,yCAAmB,GAA3B;QAEI,yBAAyB;QACzB,IAAM,gBAAgB,GAAU,CAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAE,CAAC;QAErD,yBAAyB;QACzB,IAAM,oBAAoB,GAC1B,CACI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,gBAAgB,CAAE;cAC7C,EAAE,CAAC,kBAAkB,CAAC,oBAAoB,CAC/C,CAAC;QAEF,sFAAsF;QAClG;;;;;;;;;;;;;;;;;;;;WAoBG;IACK,CAAC;IAED;;;;oHAIgH;IACxG,yCAAmB,GAA3B,UAA6B,KAAY;QAErC,kCAAkC;QAClC,IAAI,CAAC,gBAAgB,IAAI,CAAE,KAAK,GAAG,EAAE,CAAC,kBAAkB,CAAC,gCAAgC,CAAE,CAAC;QAC5F,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAEnF,yGAAyG;QAEzG,gCAAgC;QAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED;;;;oHAIgH;IACxG,+BAAS,GAAjB;QAEI,OAAO,CACC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI;eACjC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,kBAAkB,CACjG,CAAC;IACN,CAAC;IAvuBD,0DAA0D;IAC1B,0BAAc,GAAoD,CAAC,CAAC;IACpG,0DAA0D;IAC1B,0BAAc,GAAoD,CAAC,CAAC;IACpG,+DAA+D;IAC/B,+BAAmB,GAA+C,CAAC,CAAC;IACpG,+DAA+D;IAC/B,gCAAoB,GAA8C,CAAC,CAAC;IAiuBxG,kBAAC;CAAA,CA1uBgC,EAAE,CAAC,MAAM,GA0uBzC;AA1uBY,kCAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLxB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAAqC,mCAAS;IAoC1C,gCAAgC;IAChC,0GAA0G;IAC1G,qCAAqC;IACrC,0GAA0G;IAC1G,sCAAsC;IACtC,0GAA0G;IAE1G;;;;;;;;oHAQgH;IAChH,yBAEI,KAAuB,EACvB,KAAuB,EACvB,QAA8B,EAC9B,IAAqB,EACrB,aAA6B;QANjC,YASI,kBAEI,KAAK,EACL,IAAI,EAAE,CAAC,KAAK,CAER;YACI,wBAAwB;YACxB,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,KAAK,EACL,EAAE,CAAC,SAAS,CAAC,KAAK,EAClB,QAAQ,CAAC,KAAK,EAAE,EAChB,EAAE,CAAC,MAAM,CAAC,gBAAgB,EAC1B,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC,OAAO,CAAE,CAAC,CAAE;SACjB,CACJ,EACD,EAAE,CAAC,UAAU,CAAC,WAAW,CAC5B,SAyCJ;QAnHD,0DAA0D;QAC1D,uGAAuG;QACvG,+DAA+D;QAC/D,uGAAuG;QACvG,+DAA+D;QAC/D,uGAAuG;QAEvG,4DAA4D;QAC5B,aAAO,GAA2D,GAAG,CAAC;QACtG,2DAA2D;QAC3B,gBAAU,GAAwD,KAAK,CAAC;QAExG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QACxG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QAExG,mDAAmD;QACnB,UAAI,GAA8D,KAAK,CAAC;QACxG,mEAAmE;QACnC,iBAAW,GAAuD,GAAG,CAAC;QAEtG,wBAAwB;QACQ,cAAQ,GAA0D,IAAI,CAAC;QACvG,8BAA8B;QACE,mBAAa,GAAqD,IAAI,CAAC;QACvG,0BAA0B;QACM,eAAS,GAAyD,IAAI,CAAC;QAEvG,gCAAgC;QACA,UAAI,GAA8D,IAAI,CAAC;QA8CnG,yDAAyD;QACzD,KAAI,CAAC,QAAQ,GAAQ,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;QAC3D,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC5C,KAAI,CAAC,SAAS,GAAO,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAE5C,mCAAmC;QACnC,KAAI,CAAC,IAAI,GAAQ,KAAI,CAAC,KAAK,CAAC,OAAO,CAAE,eAAe,CAAC,cAAc,CAAQ,CAAC;QACxF;;;;UAIE;QACU,0BAA0B;QACtC;;;;UAIE;QACU,YAAY;QACZ,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;QAE/B,qBAAqB;QACrB,KAAI,CAAC,OAAO,GAAO,EAAE,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;QAC3D,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;QAE1D,yBAAyB;QACzB,KAAI,CAAC,eAAe,EAAE,CAAC;;QACnC;;;;;;;;;;;UAWE;IACM,CAAC;IAED;;oHAEgH;IACzG,gCAAM,GAAb;QAEI,cAAc;QACd,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,iBAAiB;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,aAAa;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,WAAW;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED;;;;;oHAKgH;IACzG,wDAA8B,GAArC;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;;oHAKgH;IACzG,wDAA8B,GAArC;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;oHAEgH;IACxG,oCAAU,GAAlB;QAEI,IAAM,SAAS,GAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAE3D,+BAA+B;QAC/B,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAG;QAC5C,+CAA+C;UAEnD;YAEZ;;;;;;;;;;;;cAYE;YACc,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC,WAAW,CAAC;YACzE;;;;;;;;cAQE;SACW;QACD,IAEQ,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE;QAC5C,kDAAkD;UAEtD;YACI,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,sBAAsB,CAAC,WAAW,CAAC;YAC1E;;;;;;;;;cASE;SACW;QAED,SAAS;QACT,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAK;QAC9C,iDAAiD;UAErD;YACI,8DAA8D;YAC9D,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,sBAAsB,CAAC,YAAY,CAAC;SAC9D;QACD,IAEO,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAM;QAC/C,kDAAkD;UAEtD;YACI,8DAA8D;YAC9D,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,sBAAsB,CAAC,YAAY,CAAC;SAC9D;QAED,SAAS;QACrB;;;;;;;;;UASE;QACF;;;;;;;;;;UAUE;QACU,OAAO;QACP,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,EACrD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAE,CAAC;YAEvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;QACb;;;;;;;;;;;;;;;;UAgBE;QACU,OAAO;QACP,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;IACzD,CAAC;IAED;;oHAEgH;IACxG,oCAAU,GAAlB;QAEI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,sBAAsB,CAAC,aAAa,CAAC;QAEhE,iDAAiD;QAEjD,2BAA2B;QAC3B,IAEI,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG;eACrB,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG;eACxB,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,EAE/B;YACI,IAAI,YAAY,GAAW,CAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE,CAAC;YACvE,IAAK,YAAY,GAAG,GAAG,EACvB;gBACI,YAAY,GAAG,GAAG,CAAC;aACtB;YACD,IAAK,YAAY,GAAG,IAAI,EACxB;gBACI,YAAY,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC;YAEpC,IAAI,YAAY,GAAW,CAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE,CAAC;YACvE,IAAK,YAAY,GAAG,GAAG,EACvB;gBACI,YAAY,GAAG,GAAG,CAAC;aACtB;YACD,IAAK,YAAY,GAAG,IAAI,EACxB;gBACI,YAAY,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC;YAEpC,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SAC3C;IACL,CAAC;IAED;;oHAEgH;IACxG,8CAAoB,GAA5B;QAEI,IAAK,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,EACtC;YACI,sCAAsC;YACtC,kFAAkF;YAClF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAEvC,IAAI,OAAO,CAAC,OAAO,CAEf,GAAG,EACH,GAAG,EACH,GAAG,CACN,CACJ,CAAC;YAEF,yCAAyC;YACzC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAExC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CACzB,CAAC;SACL;IACL,CAAC;IAED;;oHAEgH;IACxG,yCAAe,GAAvB;QAEI,IAAK,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,EACjC;YACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAE,CAAC;YAC9F,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,CAAC;SAC9B;QAED,IAAK,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,EACjC;YACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EAC7D;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;aAC5D;iBACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EACnE;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;aAC7D;YAED,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,CAAC;SAC9B;QAED,cAAc;QACd,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAEtC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,CAAC,EACf,IAAI,CAAC,QAAQ,CAAC,CAAC,EACf,GAAG,CACN,CAAC;QACd;;;;;;;;;UASE;IACM,CAAC;IAED;;oHAEgH;IACxG,oCAAU,GAAlB;QAEI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAEvB,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,mBAAmB,GAAG,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,GAAG,CAAE,CAAC;IAC3E,CAAC;IAED;;oHAEgH;IACxG,gDAAsB,GAA9B;QAEI,IAAM,wBAAwB,GAAa,GAAG,CAAC;QAC/C,IAAM,0BAA0B,GAAW,IAAI,CAAC;QAEhD,IAAM,YAAY,GAAmB,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QAElE,IAAK,IAAI,CAAC,IAAI,EACd;YACI,IAAK,IAAI,CAAC,WAAW,GAAG,wBAAwB,EAChD;gBACI,IAAI,CAAC,WAAW,IAAI,0BAA0B,CAAC;gBAE/C,IAAK,IAAI,CAAC,WAAW,GAAG,wBAAwB,EAChD;oBACI,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;iBAC/C;gBAED,YAAY,CAAC,+BAA+B,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;aACpE;SACJ;aAED;YACI,IAAK,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAC9D;gBACI,IAAI,CAAC,WAAW,IAAI,0BAA0B,CAAC;gBAE/C,IAAK,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAC9D;oBACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC;iBAC7D;gBAED,YAAY,CAAC,+BAA+B,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;aACpE;SACJ;IACL,CAAC;IAED;;oHAEgH;IACxG,4CAAkB,GAA1B;QAEI,IAAK,IAAI,CAAC,UAAU,EACpB;YACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,EAC1B;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,yBAAyB,CAAC;gBAEnE,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,EAC3B;oBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;iBACzB;aACJ;iBACI,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,EAC/B;gBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,yBAAyB,CAAC;gBAEnE,IAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,EAC3B;oBACI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;iBACzB;aACJ;SACJ;IACL,CAAC;IAED;;oHAEgH;IACxG,mCAAS,GAAjB;QAEI,+BAA+B;QAC/B,IAAK,IAAI,CAAC,IAAI,EACd;YACI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACpB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,kBAAkB,CAAE,CAAC;YAExC,iCAAiC;YACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAElB,0CAA0C;YAC1C,IAAM,IAAI,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;SAChC;IACL,CAAC;IAED;;;;oHAIgH;IACxG,oCAAU,GAAlB;QAEI,IAAM,WAAW,GAAW,IAAI,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,EAAE,EAAE,CAAE,CAAE,CAAC;QAC3E,IAAM,WAAW,GAAW,IAAI,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,EAAE,EAAE,CAAE,CAAE,CAAC;QAE3E,IAAM,MAAM,GAAyB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAChE,IAAM,QAAQ,GAAuB,IAAI,OAAO,CAAC,OAAO,CAEpD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,EAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,EAC7B,GAAG,CACN,CAAC;QACF,IAAM,KAAK,GAAW,IAAI,CAAC;QAE3B,OAAO,IAAI,EAAE,CAAC,IAAI,CAEd,MAAM,EACN,QAAQ,EACR,KAAK,EACL,KAAK,EACL,CAAC,CACJ,CAAC;IACN,CAAC;IAthBD,0DAA0D;IAC1B,8BAAc,GAAoD,CAAC,CAAC;IAshBxG,sBAAC;CAAA,CAzhBoC,EAAE,CAAC,MAAM,GAyhB7C;AAzhBY,0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;ACL5B,uFAA4B;AAE5B;;oHAEoH;AACpH;IAiDI;;;;;;;;;;oHAUgH;IAChH,eAEI,KAAuB,EACvB,MAA8B,EAE9B,YAA6B,EAC7B,UAA6B,EAC7B,aAA4B;QAjEhC,4CAA4C;QACR,UAAK,GAA6D,IAAI,CAAC;QAC3G,oDAAoD;QAChB,WAAM,GAA4D,IAAI,CAAC;QAE3G,yGAAyG;QACrE,iBAAY,GAAsD,IAAI,CAAC;QAC3G,mFAAmF;QAC/C,eAAU,GAAwD,IAAI,CAAC;QAC3G,gDAAgD;QACZ,kBAAa,GAAqD,IAAI,CAAC;QAE3G,2BAA2B;QACS,WAAM,GAA4D,IAAI,CAAC;QAC3G,+CAA+C;QACX,UAAK,GAA6D,EAAE,CAAC;QACzG,+CAA+C;QACX,UAAK,GAA6D,EAAE,CAAC;QACzG,8CAA8C;QACV,SAAI,GAA8D,EAAE,CAAC;QAEzG,oBAAoB;QACgB,QAAG,GAA+D,IAAI,CAAC;QAC3G,wDAAwD;QACpB,iBAAY,GAAsD,IAAI,CAAC;QAE3G,+CAA+C;QACX,kBAAa,GAAqD,IAAI,CAAC;QAE3G,iDAAiD;QACb,WAAM,GAA4D,IAAI,CAAC;QAC3G,6DAA6D;QACzB,YAAO,GAA2D,EAAE,CAAC;QAEzG,4DAA4D;QACxB,WAAM,GAA4D,EAAE,CAAC;QACzG,sEAAsE;QAClC,qBAAgB,GAAkD,EAAE,CAAC;QAEzG,sDAAsD;QAClB,gBAAW,GAAuD,EAAE,CAAC;QACzG,sDAAsD;QAClB,gBAAW,GAAuD,EAAE,CAAC;QAEzG,6BAA6B;QACO,UAAK,GAA6D,KAAK,CAAC;QAuBxG,IAAI,CAAC,KAAK,GAAW,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAU,MAAM,CAAC;QAE5B,IAAI,CAAC,YAAY,GAAI,YAAY,CAAC;QAClC,IAAI,CAAC,UAAU,GAAM,UAAU,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAqGD;;oHAEgH;IACzG,oBAAI,GAAX;QAEI,uCAAuC;QACvC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7D,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,UAAU,GAAK,IAAI,CAAC,UAAU,CAAC;QAE3D,0BAA0B;QAC1B,IAAI,CAAC,MAAM,GAAU,IAAI,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAW,IAAI,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,GAAW,IAAI,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,GAAY,IAAI,CAAC,UAAU,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,GAAU,IAAI,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,GAAS,IAAI,CAAC,aAAa,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAa,IAAI,CAAC,SAAS,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAU,IAAI,CAAC,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAEhD,oBAAoB;QACpB,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAE3C,2BAA2B;QAC3B,IAAK,EAAE,CAAC,aAAa,CAAC,cAAc,EACpC;YACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACtD,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,wBAAwB;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,oBAAoB;QACpB,IAAK,EAAE,CAAC,YAAY,CAAC,6BAA6B,EAClD;YACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;QAED,kBAAkB;QAClB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,gCAAgC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED;;;;oHAIgH;IACzG,wBAAQ,GAAf,UAAiB,IAAiB;QAE9B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;IAC9B,CAAC;IAED;;;;oHAIgH;IACzG,yBAAS,GAAhB;QAEI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;;oHAIgH;IACzG,wBAAQ,GAAf;QAEI,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IACvC,CAAC;IAED;;;;oHAIgH;IACzG,+BAAe,GAAtB;QAEI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED;;oHAEgH;IACzG,sBAAM,GAAb;;QAEI,iBAAiB;QACjB,IAAK,CAAC,IAAI,CAAC,KAAK,EAChB;YACI,6BAA6B;YAC7B,IAAI,CAAC,eAAe,CAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAE,CAAC;YAEpD,gBAAgB;YAChB,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EACzB;gBACI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;aACxB;;gBAED,eAAe;gBACf,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;oBADM,IAAM,IAAI;oBAEZ,IAAI,CAAC,MAAM,EAAE,CAAC;iBACjB;;;;;;;;;;gBAED,eAAe;gBACf,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;oBADM,IAAM,IAAI;oBAEZ,IAAI,CAAC,MAAM,EAAE,CAAC;iBACjB;;;;;;;;;SACJ;QAED,aAAa;QACb,IAAI,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;IAClC,CAAC;IAED;;oHAEgH;IACzG,uBAAO,GAAd;;QAEI,iBAAiB;QACjB,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EACzB;YACI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACzB;;YAED,oBAAoB;YACpB,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;;;;;;;;;;YAED,oBAAoB;YACpB,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;;;;;;;;;;YAED,mBAAmB;YACnB,KAAmB,sBAAI,CAAC,IAAI,6CAC5B;gBADM,IAAM,GAAG;gBAEX,GAAG,CAAC,OAAO,EAAE,CAAC;aACjB;;;;;;;;;;YAED,2BAA2B;YAC3B,KAA0B,sBAAI,CAAC,WAAW,6CAC1C;gBADM,IAAM,UAAU;gBAElB,UAAU,CAAC,OAAO,EAAE,CAAC;aACxB;;;;;;;;;;YAED,2BAA2B;YAC3B,KAAyB,sBAAI,CAAC,WAAW,6CACzC;gBADM,IAAM,SAAS;gBAEjB,SAAS,CAAC,OAAO,EAAE,CAAC;aACvB;;;;;;;;;QAED,iBAAiB;QACjB,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EACzB;YACI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACzB;;YAED,kBAAkB;YAClB,KAAsB,sBAAI,CAAC,OAAO,6CAClC;gBADM,IAAM,MAAM;gBAEd,MAAM,CAAC,OAAO,EAAE,CAAC;aACpB;;;;;;;;;;YAED,iBAAiB;YACjB,KAAqB,sBAAI,CAAC,MAAM,6CAChC;gBADM,IAAM,KAAK;gBAEb,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB;;;;;;;;;;YAED,4BAA4B;YAC5B,KAA+B,sBAAI,CAAC,gBAAgB,6CACpD;gBADM,IAAM,eAAe;gBAEvB,eAAe,CAAC,OAAO,EAAE,CAAC;aAC7B;;;;;;;;;QAED,wBAAwB;QACxB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAE5B,cAAc;QACd,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED;;oHAEgH;IACzG,+BAAe,GAAtB,UAAwB,QAAsB;QAE1C,IAAI,CAAC,YAAY,CAAC,eAAe,CAE7B,QAAQ,EACR,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,GAAG,CACX,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACzG,yBAAS,GAAhB,UAAkB,IAAY;;QAE1B,iBAAiB;QACjB,IAAK,EAAE,CAAC,YAAY,CAAC,8BAA8B,EACnD;YACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAE,CAAC;SAChF;QAED,4DAA4D;QAC5D,IAAM,SAAS,GAAiB,IAAI,CAAC,qBAAqB,CAAE,IAAI,CAAE,CAAC;QACnE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,aAAa,GAAG,MAAM,CAAE,SAAS,CAAC,MAAM,CAAE,GAAG,cAAc,CAAE,CAAC;QAEjF,8BAA8B;QAC9B,IAAM,eAAe,GAAiB,KAAK,CAAC,wBAAwB,CAAE,SAAS,EAAE,IAAI,CAAE,CAAC;;YAExF,wBAAwB;YACxB,KAA8B,gDAAe,8HAC7C;gBADM,IAAM,cAAc;gBAEtB,IAAM,UAAU,GAAiB,cAAc,CAAC,WAAW,CAEvD,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,SAAS,EAAE,CACnB,CAAC;gBACF,IAAI,CAAC,aAAa,CAAE,UAAU,CAAE,CAAC;aACpC;;;;;;;;;IACL,CAAC;IAED;;oHAEgH;IACzG,yCAAyB,GAAhC;QAEI,IAAI,CAAC,GAAG,CAAC,UAAU,CAEf,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EACtB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAC1B,CAAC;IACN,CAAC;IAED;;oHAEgH;IACzG,2BAAW,GAAlB;QAEI,eAAe;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAEzB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,mBAAmB,GAAG,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,GAAG,GAAG,CAAC,CAAC;QAErE,gCAAgC;QAChC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;QAExC,+BAA+B;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,6CAA6C;QAC7C,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED;;;;oHAIgH;IACzG,iCAAiB,GAAxB;QAEI,OAAO,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;IACxC,CAAC;IAED;;;;oHAIgH;IACzG,iCAAiB,GAAxB,UAA0B,KAAY;QAElC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;IACxC,CAAC;IAED;;;;oHAIgH;IACxG,mCAAmB,GAA3B;QAEI,IAAI,CAAC,WAAW,CAAC,IAAI;QAEjB,SAAS;QACT,EAAE,CAAC,WAAW,CAAC,UAAU,CAErB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,YAAY,CAAC,4BAA4B,EAAE,GAAG,EAAE,GAAG,CAAE,EAC7E,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,YAAY,CAAC,qBAAqB,CACxC;QAED,SAAS;QACT,EAAE,CAAC,WAAW,CAAC,UAAU,CAErB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAG,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,4BAA4B,EAAE,GAAG,CAAE,EAC7E,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAC1C;QAED,SAAS;QACT,EAAE,CAAC,WAAW,CAAC,UAAU,CAErB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAG,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,4BAA4B,CAAE,EAC7E,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,YAAY,CAAC,sBAAsB,CACzC,CACJ,CAAC;IACN,CAAC;IAED;;;;;;;oHAOgH;IACxG,qCAAqB,GAA7B,UAA+B,IAAY;;QAEvC,wBAAwB;QACxB,IAAI,SAAS,GAAiB,EAAE,CAAC;QAEjC,6BAA6B;QAC7B,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,iCAAiC,GAAG,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,GAAG,SAAS,CAAE,CAAC;;YACjG,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;gBADM,IAAM,IAAI;gBAEZ,SAAS,GAAG,SAAS,CAAC,MAAM,CAAE,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAE,CAAE,CAAC;aACnE;;;;;;;;;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;oHAKgH;IACxG,6BAAa,GAArB,UAAuB,UAAwB;QAE3C,IAAK,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC,aAAa,CAAC,gBAAgB,EAChE;YACI,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC,OAAO,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC5B;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;IACxC,CAAC;IAED;;oHAEgH;IACxG,2BAAW,GAAnB;QAEI,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;IACjD,CAAC;IAED;;oHAEgH;IACxG,8BAAc,GAAtB;;;YAEI,KAAsB,sBAAI,CAAC,OAAO,6CAClC;gBADM,IAAM,MAAM;gBAEd,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;aACjC;;;;;;;;;IACL,CAAC;IAED;;;;;oHAKgH;IACjG,8BAAwB,GAAvC,UAAyC,SAAuB,EAAE,IAAY;QAE1E,IAAI,eAAe,GAAiB,EAAE,CAAC;QAEvC,IAAK,IAAI,CAAC,cAAc,EAAE,EAC1B;YACI,eAAe,GAAG,SAAS,CAAC;SAC/B;aAED;YACI,IAAM,eAAe,GAAe,EAAE,CAAC,QAAQ,CAAC,wBAAwB,CAAE,SAAS,CAAE,CAAC;YAEtF,IAAK,eAAe,KAAK,IAAI,EAC7B;gBACI,eAAe,CAAC,IAAI,CAAE,eAAe,CAAE,CAAC;aAC3C;SACJ;QAED,OAAO,eAAe,CAAC;IAC3B,CAAC;IACL,YAAC;AAAD,CAAC;AArlBqB,sBAAK;;;;;;;;;;;;;;;ACL3B;;oHAEoH;AACpH,IAAY,OAoBX;AApBD,WAAY,OAAO;IAEf,6BAA6B;IAC7B,mDAAW;IACX,sBAAsB;IACtB,iDAAU;IACV,2BAA2B;IAC3B,+CAAS;IAET,0BAA0B;IAC1B,+CAAS;IAET,uBAAuB;IACvB,mDAAW;IACX,gCAAgC;IAChC,qEAAoB;IACpB,mCAAmC;IACnC,iDAAU;IACV,iCAAiC;IACjC,uEAAqB;AACzB,CAAC,EApBW,OAAO,GAAP,eAAO,KAAP,eAAO,QAoBlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBD,0FAA+B;AAE/B;;oHAEoH;AACpH;IAA4B,0BAAQ;IAehC;;;;;oHAKgH;IAChH,gBAAoB,KAAc,EAAE,MAAsB;QAA1D,YAEI,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,eAAe,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,YAAY,CAC7B,SACJ;QA9BD,+BAA+B;QACK,iBAAW,GAAuD,IAAI,CAAC;QAC3G,+BAA+B;QACK,gBAAU,GAAwD,IAAI,CAAC;QAC3G,+BAA+B;QACK,uBAAiB,GAAiD,IAAI,CAAC;QAC3G,0CAA0C;QACN,qBAAe,GAAmD,IAAI,CAAC;QAC3G,sDAAsD;QACtD,0GAA0G;QAC1G,qCAAqC;QACD,eAAS,GAAyD,KAAK,CAAC;;IAmB5G,CAAC;IAED;;;;oHAIgH;IACtG,6BAAY,GAAtB;QAEI,OAAO,IAAI,EAAE,CAAC,WAAW,CAErB,IAAI,EACJ,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,IAAI,EACJ,IAAI,CAAC,YAAY,CACpB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,mCAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAG,IAAI,CAAE,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAG,GAAG,CAAG,EAEvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAG,GAAG,CAAG,EACvC,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,CAC/C,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,gCAAe,GAAzB,UAA2B,SAAsB;QAE7C,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,4DAA4D;YAE5D,2BAA2B;YAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAE,4BAA4B,GAAG,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,GAAG,GAAG,CAAE,CAAC;YACjG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;YAEvE,uBAAuB;YACvB,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAE,CAAC;YAEnC,8DAA8D;YAC9D,IAAI,CAAC,GAAG,CAAC,aAAa,CAAE,wBAAwB,GAAG,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,GAAG,GAAG,CAAE,CAAC;YAC7F,IAAI,CAAC,eAAe,EAAE,CAAC,qBAAqB,CAExC,EAAE,CAAC,UAAU,CAAC,UAAU,EACxB,CAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAE,EACrF,GAAG,EACH,IAAI,OAAO,CAAC,SAAS,EAAE,EACvB,cAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,oBAAoB,CAAE,EAAC,CAAC,CACxD,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;SACpC;IACL,CAAC;IAED;;;;oHAIgH;IACtG,4BAAW,GAArB;QAEI,oBAAoB;QACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAEjD,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAEhD,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,EAAE,CAAC,MAAM,CAAC,QAAQ,EAClB,EAAE,CAAC,iBAAiB,CAAC,0BAA0B,CAClD,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAEvD,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,yBAAyB,CACjD,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAErD,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,eAAe,EAC5B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,0BAA0B,CAClD,CAAC;QAEF,IAAM,EAAE,GAAgB,EAAE,CAAC,WAAW,CAAC,SAAS,CAE5C,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,CAAE,CAAC,GAAG,KAAK,CAAE,EAAE,CAAE,CAAC,GAAG,KAAK,CAAE,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC9E,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI;QACJ,oBAAoB;QACpB,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,IAAI,CAAC,YAAY,CACpB,CAAC;QAEF,OAAO;YAEH,yFAAyF;YACzF,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,eAAe,EAC5B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,uFAAuF;YACvF,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,eAAe,CACvB;YAED,QAAQ;YACR,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,KAAK,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,EACtC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,0BAA0B;YAC1B,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,WAAW,CACnB;YAED,KAAK;YACL,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,EAAE;aACL,CACJ,CACJ;YAED,6CAA6C;YAC7C,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,UAAU,EACf,CAAC,CACJ;YAED,iDAAiD;YACjD,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,iBAAiB,EACtB,CAAC,CACJ;YACjB;;;;;;;;;;;;;;;;;;;;;;;;cAwBE;YACc,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gBAAgB;gBAChB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAG,EACtC,EAAE,CAAC,eAAe,CAAC,IAAI,EACvB,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAE,EACxC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,kBAAkB;gBAClB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAG,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YACjB;;;;;;;;;;;;;;;;;;;;;;;;cAwBE;YACc,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,yBAAyB;gBACzB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAC5D,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAG,IAAI,CAAE,EAC7D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAE,EACtC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI;gBACJ,oBAAoB;gBACpB,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,4BAAW,GAArB;QAEI,OAAO;YAEH,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,MAAM,EACnB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,MAAM,EACnB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,MAAM,EACnB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,EACJ,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;SAEJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,2BAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,6BAAY,GAAtB;QAEI,OAAO,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAE,CAAC;IACpG,CAAC;IAED;;;;oHAIgH;IACtG,8BAAa,GAAvB;QAEI,8BAA8B;QAC9B,IAAM,kBAAkB,GAAa,IAAI,EAAE,CAAC,MAAM,CAE9C,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAG,EACvC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,kBAAkB,EACrC,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB,CAAC;QACF,kBAAkB,CAAC,OAAO,CAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAE,CAAC;QAE1C,OAAO;YAEH,kBAAkB;YAElB,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAG,EACvC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,kBAAkB,EACrC,EAAE,CAAC,gBAAgB,CAAC,GAAG,CAC1B;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,6BAAY,GAAtB;QAEI,mCAAmC;QAC/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA2CE;QACU,KAAK;QACjB;;;;;UAKE;QACU,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,uCAAsB,GAAhC;QAEI,uDAAuD;QACnE;;UAEE;QACU,KAAK;QACjB;;;UAGE;QACU,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,6BAAY,GAAtB;QAER;;;;;;;;;;;;;;;;;;;;UAoBE;IACM,CAAC;IAED;;oHAEgH;IACtG,yBAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,oCAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;IAClE,CAAC;IAED;;oHAEgH;IACtG,+BAAc,GAAxB;IAEA,CAAC;IAED;;oHAEgH;IACtG,0BAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IACL,aAAC;AAAD,CAAC,CAjmB2B,EAAE,CAAC,KAAK,GAimBnC;AAjmBY,wBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLnB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAAoC,kCAAQ;IAExC;;;;;oHAKgH;IAChH,wBAAoB,KAAc,EAAE,MAAsB;eAEtD,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,eAAe,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,MAAM,CACvB;IACL,CAAC;IAED;;;;oHAIgH;IACtG,qCAAY,GAAtB;QAEI,OAAO,IAAI,EAAE,CAAC,eAAe,CAEzB,IAAI,EACJ,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAE,EACtC,IAAI,EACJ,IAAI,CAAC,YAAY,CACpB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,2CAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAI,IAAI,EAAE,IAAI,CAAE,EACzC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAI,GAAG,EAAG,IAAI,CAAE,EACzC,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,KAAK,EAAE,GAAG,EAAG,IAAI,CAAE,EAEzC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAK,GAAG,EAAG,GAAG,CAAG,EACzC,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,CAC/C,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,wCAAe,GAAzB,UAA2B,SAAsB;QAE7C,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,2BAA2B;YAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAE,8BAA8B,CAAE,CAAC;SAC5D;IACL,CAAC;IAED;;;;oHAIgH;IACtG,oCAAW,GAArB;QAEI,OAAO;YACnB;;;;;;;;;;;;;;cAcE;YACc,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gBAAgB;gBAChB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAC5D,EAAE,CAAC,eAAe,CAAC,IAAI,EACvB,IAAI,OAAO,CAAC,OAAO,CAAE,MAAM,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAE,EAC9D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;SA8CJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,oCAAW,GAArB;QAEI,OAAO,EACN,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,mCAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,qCAAY,GAAtB;QAEI,OAAO,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAE,CAAC;IACvG,CAAC;IAED;;;;oHAIgH;IACtG,sCAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,qCAAY,GAAtB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,+CAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,qCAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,iCAAQ,GAAlB;QAEI,kFAAkF;IACtF,CAAC;IAED;;oHAEgH;IACtG,4CAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;IAClE,CAAC;IAED;;oHAEgH;IACtG,uCAAc,GAAxB;IAEA,CAAC;IAED;;oHAEgH;IACtG,kCAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IACL,qBAAC;AAAD,CAAC,CAhRmC,EAAE,CAAC,KAAK,GAgR3C;AAhRY,wCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL3B,0FAAgC;AAChC,4DAAgC;AAEhC;;oHAEoH;AACpH;IAA+B,6BAAQ;IAEnC;;;;;oHAKgH;IAChH,mBAAoB,KAAc,EAAE,MAAsB;eAEtD,kBAEI,KAAK,EACL,MAAM,EAEN,IAAI,GAAG,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,YAAY,CAC7B;IACL,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,OAAO,IAAI,EAAE,CAAC,WAAW,CAErB,IAAI,EACJ,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,KAAK,EACL,IAAI,CAAC,YAAY,CACpB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,sCAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAG,EAEtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAG,EACtC,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,CAC/C,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,+BAAW,GAArB;QAEI,OAAO;YAEH,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gBAAgB;gBAChB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAC5D,EAAE,CAAC,eAAe,CAAC,IAAI,EACvB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAG,IAAI,CAAE,EAC7D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,yBAAyB;gBACzB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAC5D,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAG,IAAI,CAAE,EAC7D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAE,EACtC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,4BAA4B;gBAC5B,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,IAAI,CAAI,EACxC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAI,EACtC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,IAAI,CAAI,EACxC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAI,EACxC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gCAAgC;gBAChC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAI,EACvC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAI,EAC7D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAI,EACvC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,qCAAqC;gBACrC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,CAAE,EACtC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YACD,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,sCAAsC;gBACtC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAClE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,iCAAiC;gBACjC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAChE,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gCAAgC;gBAChC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,8BAA8B;gBAC9B,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,6BAA6B;gBAC7B,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAE,EACtC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,qBAAqB;gBACrB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,IAAI,CAAI,EACxC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,CAAE,EAC1D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,KAAK,EAAE,GAAG,CAAI,EACzC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,WAAW;gBACX,EAAE,CAAC,WAAW,CAAC,aAAa,CAExB,IAAI,CAAC,KAAK,EACV;oBACI,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAG,IAAI,CAAK;oBAC1C,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAG,IAAI,CAAK;oBAC1C,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAG,GAAG,CAAM;iBAC7C,EACD,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAE,EACtC,EAAE,CAAC,YAAY,CAAC,aAAa,EAC7B,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,wBAAwB;gBACxB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAI,EACxC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,sBAAsB;gBACtB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,GAAG,EAAG,GAAG,EAAE,GAAG,CAAI,EACxC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,8CAA8C;gBAC9C,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAG,GAAG,EAAE,IAAI,CAAI,EACzC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,uBAAuB;gBACvB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAI,EACvC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAK,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,IAAI,EAAE,GAAG,CAAI,EACxC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,iCAAiC;gBACjC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,kCAAkC;gBAClC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,iCAAiC;gBACjC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,SAAS;gBACT,EAAE,CAAC,WAAW,CAAC,YAAY,CAEvB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,GAAG,EACH,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,EACvC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACxC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,cAAc,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACxC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,mCAAe,GAAzB,UAA2B,SAAsB;IAEjD,CAAC;IAED;;;;oHAIgH;IACtG,+BAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,8BAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,OAAO,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAE,CAAC;IACxG,CAAC;IAED;;;;oHAIgH;IACtG,iCAAa,GAAvB;QAEI,OAAO;YAEH,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAG,EACxC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB;YACD,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAG,EACxC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB;YACD,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAG,EACvC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB;YACD,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAG,EACvC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB;YACD,IAAI,EAAE,CAAC,MAAM,CAET,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,UAAU,CAAC,IAAI,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAG,EACxC,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,eAAe,CAAC,UAAU,EAC7B,EAAE,CAAC,gBAAgB,CAAC,EAAE,CACzB;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,mCAAmC;QAEnC,OAAO;YAEH,oBAAoB;YACpB,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAE7B,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,KAAK,CACR;YAED,oBAAoB;YACpB,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAE7B,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,GAAG,EACH,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,KAAK,CACR;YAED,aAAa;YACb,EAAE,CAAC,YAAY,CAAC,UAAU,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,EACJ,CAAC,EACD,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,EACJ,KAAK,CACR;YAED,cAAc;YACd,EAAE,CAAC,YAAY,CAAC,WAAW,CAEvB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAE,EACtC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,EACJ,GAAG,EACH,IAAI,CACP;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,0CAAsB,GAAhC;QAEI,IAAM,gBAAgB,GAA6B;YAC/C,IAAI,OAAO,CAAC,eAAe,CAAE,IAAI,EAAI,IAAI,CAAC,MAAM,CAAE,CAAC,CAAyB,CAAE;SACjF,CAAC;QAEF,gBAAgB,CAAE,CAAC,CAAE,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACrD,gBAAgB,CAAE,CAAC,CAAE,CAAC,kBAAkB,GAAQ,IAAI,CAAC;QAErD,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,gCAAY,GAAtB;;;YAEI,4BAA4B;YAC5B,KAAoB,sBAAI,CAAC,KAAK,6CAC9B;gBADM,IAAM,IAAI;gBAEZ,IAAI,CAAC,QAAQ,EAAE,CAAC,oBAAoB,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC,CAAE,CAAE,CAAC;aACtE;;;;;;;;;IACL,CAAC;IAED;;oHAEgH;IACtG,4BAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,uCAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;IAClE,CAAC;IAED;;;;oHAIgH;IACtG,6BAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;oHAEgH;IACtG,kCAAc,GAAxB;IAEA,CAAC;IACL,gBAAC;AAAD,CAAC,CAz0B8B,EAAE,CAAC,KAAK,GAy0BtC;AAz0BY,8BAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNtB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAA8B,4BAAQ;IAKlC;;;;;oHAKgH;IAChH,kBAAoB,KAAc,EAAE,MAAsB;QAA1D,YAEI,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,eAAe,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,YAAY,CAC7B,SACJ;QApBD,qCAAqC;QAC7B,eAAS,GAAY,IAAI,CAAC;;IAmBlC,CAAC;IAED;;;;oHAIgH;IACtG,+BAAY,GAAtB;QAEI,OAAO,IAAI,EAAE,CAAC,WAAW,CAErB,IAAI,EACJ,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE,EACrC,KAAK,EACL,IAAI,CAAC,YAAY,CACpB,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,qCAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAG,IAAI,CAAE,EACvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAG,GAAG,CAAG,EAEvC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAG,GAAG,EAAG,GAAG,CAAG,EACvC,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC5C,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,CAC/C,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,kCAAe,GAAzB,UAA2B,SAAsB;QAE7C,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,2BAA2B;YAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAE,oBAAoB,CAAE,CAAC;SAClD;IACL,CAAC;IAED;;;;oHAIgH;IACtG,8BAAW,GAArB;QAEI,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,CAAC,IAAI,CAExB,IAAI,EACJ,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE9B,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,KAAK,EAClB,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,MAAM,CAAC,UAAU,EACpB,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CACJ,CAAC;QAEF,OAAO;YAEH,QAAQ;YACR,IAAI,CAAC,SAAS;YAEd,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,gBAAgB;gBAChB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAC5D,EAAE,CAAC,eAAe,CAAC,IAAI,EACvB,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAE,EAC9D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,SAAS,EACpB,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,MAAM,EAChB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;YAED,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAER;gBACI,oBAAoB;gBACpB,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK;gBAC1C,8FAA8F;gBAC9D,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,GAAG,CAAG,EAE3D,EAAE,CAAC,eAAe,CAAC,UAAU;gBAC7D,0DAA0D;gBAE1B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,EACrC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EAEJ,EAAE,CAAC,MAAM,CAAC,MAAM;gBAChD,iDAAiD;gBAEjB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;gBAED,iCAAiC;gBACjC,EAAE,CAAC,WAAW,CAAC,SAAS,CAEpB,IAAI,CAAC,KAAK,EACV,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAEpC,EAAE,CAAC,eAAe,CAAC,UAAU,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,OAAO,CAAC,UAAU,EACrB,IAAI,EAEJ,EAAE,CAAC,MAAM,CAAC,UAAU;gBACpB,kBAAkB;gBAElB,GAAG,EACH,IAAI,CAAC,YAAY,CACpB;aACJ,CACJ,CACJ;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,8BAAW,GAArB;QAEI,OAAO,EACN,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,6BAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,+BAAY,GAAtB;QAEI,OAAO,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAE,CAAC;IACvG,CAAC;IAED;;;;oHAIgH;IACtG,gCAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,+BAAY,GAAtB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,yCAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,+BAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,2BAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QAExB,uFAAuF;IAC3F,CAAC;IAED;;oHAEgH;IACtG,sCAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;IAClE,CAAC;IAED;;oHAEgH;IACtG,iCAAc,GAAxB;IAEA,CAAC;IAED;;oHAEgH;IACtG,4BAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IACL,eAAC;AAAD,CAAC,CA7R6B,EAAE,CAAC,KAAK,GA6RrC;AA7RY,4BAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLrB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAA+B,6BAAQ;IAcnC;;;;;oHAKgH;IAChH,mBAAoB,KAAc,EAAE,MAAsB;QAA1D,YAEI,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,eAAe,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,UAAU,CAC3B,SAGJ;QA5BD,gCAAgC;QACA,UAAI,GAAkD,IAAI,CAAC;QAC3F,8BAA8B;QACE,gBAAU,GAA4C,IAAI,CAAC;QAC3F,+BAA+B;QACC,UAAI,GAAkD,GAAG,CAAC;QAC1F,8BAA8B;QACE,iBAAW,GAA2C,CAAC,CAAC;QAoBpF,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;;IACtB,CAAC;IAED;;oHAEgH;IACzG,0BAAM,GAAb;QAEI,uBAAuB;QACvB,iBAAM,MAAM,WAAE,CAAC;QAEf,cAAc;QACd,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAE5B,KAAK,EACL,IAAI,CAAC,IAAI,EACT,IAAI,CACP,CAAC;QAEF,yBAAyB;QACzB,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,cAAc,CAAC;QAEtC,4BAA4B;QAC5B,EAAE,IAAI,CAAC,WAAW,CAAC;QAC/B;;;;;;;;UAQE;QACU,IAAK,IAAI,CAAC,WAAW,GAAG,GAAG,EAC3B;YACI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,GAAG,CAAC;YAC7B,IAAK,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,EACjC;gBACI,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;aAChC;SACJ;aACI,IAAK,IAAI,CAAC,WAAW,GAAG,GAAG,EAChC;YACI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,GAAG,CAAC;YAC7B,IAAK,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,EAClC;gBACI,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;aACjC;SACJ;aACI,IAAK,IAAI,CAAC,WAAW,GAAG,GAAG,EAChC;YACI,sBAAsB;SACzB;aAED;YACI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,GAAG,CAAC;YAC7B,IAAK,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,EAAG;gBAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC;aAC/B;SACJ;IACL,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,sCAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EAEtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAG,EACvC,IAAI,EACJ,IAAI,CACP,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,mCAAe,GAAzB,UAA2B,SAAsB;IAEjD,CAAC;IAED;;;;oHAIgH;IACtG,+BAAW,GAArB;QAEI,cAAc;QACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE1C,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,OAAO,EACpB,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;QACd;;;;UAIE;QACU,OAAO;YACH,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,IAAI,CACZ;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,+BAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,8BAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,iCAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,gCAAY,GAAtB;QAEI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,CAEzC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAE,EACrC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,GAAG,EACH,GAAG,EACH,IAAI,CACP,CAAC;QAEF,OAAO,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;IAC/B,CAAC;IAED;;;;oHAIgH;IACtG,0CAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,gCAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,4BAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,uCAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;IACnE,CAAC;IAED;;oHAEgH;IACtG,kCAAc,GAAxB;IAEA,CAAC;IAED;;;;oHAIgH;IACtG,6BAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IApRD,0CAA0C;IACV,wBAAc,GAAwC,IAAI,CAAC;IAoR/F,gBAAC;CAAA,CAvR8B,EAAE,CAAC,KAAK,GAuRtC;AAvRY,8BAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLtB,0FAA+B;AAE/B;;oHAEoH;AACpH;IAAgC,8BAAQ;IAEpC;;;;;oHAKgH;IAChH,oBAAoB,KAAc,EAAE,MAAsB;eAEtD,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,eAAe,EAC/B,EAAE,CAAC,YAAY,CAAC,uBAAuB,EACvC,EAAE,CAAC,UAAU,CAAC,WAAW,CAC5B;IACL,CAAC;IAED;;;;oHAIgH;IACtG,iCAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,uCAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAEpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,gCAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,gCAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,+BAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,oCAAe,GAAzB,UAA2B,SAAsB;IAEjD,CAAC;IAED;;;;oHAIgH;IACtG,iCAAY,GAAtB;QAEI,OAAO,EAAE,CAAC,WAAW,CAAC,kBAAkB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAE,CAAC;IAC5G,CAAC;IAED;;;;oHAIgH;IACtG,kCAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,iCAAY,GAAtB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,2CAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,iCAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,6BAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,wCAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;IAClE,CAAC;IAED;;oHAEgH;IACtG,mCAAc,GAAxB;IAEA,CAAC;IAED;;;;oHAIgH;IACtG,8BAAS,GAAnB;QAEI,IAAM,GAAG,GAAc,IAAI,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACrE,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IACL,iBAAC;AAAD,CAAC,CA/K+B,EAAE,CAAC,KAAK,GA+KvC;AA/KY,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLvB,6FAAuC;AAEvC;;;oHAGoH;AACpH;IAAyC,uCAAQ;IAc7C;;;;;oHAKgH;IAChH,6BAAoB,KAAc,EAAE,MAAsB;QAA1D,YAEI,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,mBAAmB,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,EAC3C,EAAE,CAAC,UAAU,CAAC,UAAU,CAC3B,SACJ;QAxBD,oCAAoC;QACJ,yBAAmB,GAAmC,IAAI,CAAC;QAC3F,kCAAkC;QACF,WAAK,GAAiD,IAAI,CAAC;QAC3F,6CAA6C;QACb,sBAAgB,GAAsC,IAAI,CAAC;;IAmB3F,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,gDAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAEpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,EACJ,IAAI,CACP,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,6CAAe,GAAzB,UAA2B,SAAsB;QAE7C,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;SAEtD;IACL,CAAC;IAED;;;;oHAIgH;IACtG,yCAAW,GAArB;QAEI,oBAAoB;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE3C,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,UAAU,EACvB,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;QAEF,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,6BAA6B,GAAG,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAE,GAAG,UAAU,CAAE,CAAC;QAErG,OAAO;YAEH,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,KAAK,CACb;SACJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,yCAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,wCAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,oDAAoD;QACpD,IAAM,MAAM,GAAgB,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAEvD,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,EAAE,CAAC,UAAU,CAAC,QAAQ,EACtB,GAAG,CACN,CAAC;QACF,EAAE,CAAC,gBAAgB,CAAC,sBAAsB,CAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;QACrE,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAE1B,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;oHAIgH;IACtG,2CAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAErD,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,GAAG,EACH,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,CACP,CAAC;QAEF,mCAAmC;QACnC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAEvE,OAAO,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;IACrC,CAAC;IAED;;;;oHAIgH;IACtG,oDAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,0CAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,sCAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,iDAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;IAClE,CAAC;IAED;;;;oHAIgH;IACtG,uCAAS,GAAnB;QAEI,IAAM,GAAG,GAA6B,IAAI,EAAE,CAAC,sBAAsB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,IAAI,CAAE,CAAC;QACzG,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;oHAEgH;IACtG,4CAAc,GAAxB;QAAA,iBAyBC;QAvBG,6BAA6B;QAC7B,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,IAAI,CAAE,CAAC;QACjF,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,GAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAG,CAAC;QAEjF,wCAAwC;QACxC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,6BAA6B,CAAC,GAAG,CACpE;YAEM,KAAI,CAAC,GAAkC,CAAC,gBAAgB,CAAC,KAAK;gBAChE;gBACpB,qGAAqG;gBAC7E,KAAK,GAAG,KAAK,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC,MAAM,CACrE,CAAC;QACN,CAAC,CACJ,CAAC;QAEF,6CAA6C;QAC7C,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,uBAAuB,GAAG,IAAI,CAAC;QAEtE,+CAA+C;QAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,GAAG,UAAE,GAAgB,EAAE,UAA8B;YAC9E,KAAI,CAAC,aAAa,CAAE,GAAG,EAAE,UAAU,CAAE,CAAC;QAC1C,CAAC;IACL,CAAC;IAED;;;;;oHAKgH;IACxG,2CAAa,GAArB,UAAuB,GAAgB,EAAE,UAA8B;QAEnE,2BAA2B;QAC3B,wBAAwB;QACxB;YACI,qCAAqC;YACrC,IAAK,UAAU,CAAC,UAAU,EAC1B;gBACI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,eAAe,CAAE,CAAC;gBACpC,IAAI,CAAC,eAAe,CAAE,UAAU,CAAC,UAAU,CAAE,CAAC;aACjD;iBAED;gBACI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;gBACrC,IAAI,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;aAChC;SACJ;IACL,CAAC;IAAA,CAAC;IAEF;;;;oHAIgH;IACxG,6CAAe,GAAvB,UAAyB,eAAoC;QAEzD,gCAAgC;QAChC,IAAK,IAAI,CAAC,mBAAmB,KAAK,IAAI,EACtC;YACI,uBAAuB;YACvB,IAAM,WAAW,GACb,IAAI,CAAC,mBAAmB,CAAC,QAC5B,CAAC,KAAK,CAAE,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAE,CAAC;YACpD,WAAW,CAAC,YAAY,GAAI,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;YAC5D,WAAW,CAAC,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC;YAC5D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,WAAW,CAAC;SACnD;QAED,8EAA8E;QAC9E,IAAK,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,IAAI,CAAC,mBAAmB,EAC7E;YACI,wCAAwC;YACxC,IAAI,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;YAE3B,OAAO;SACV;QAED,oBAAoB;QACpB,KAAM,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,EAC1D;YACI,oBAAoB;YACpB,IAAM,IAAI,GAAwB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAE1D,2CAA2C;YAC3C,IAAK,IAAI,KAAK,eAAe,EAC7B;gBACI,sBAAsB;gBACtB,IAAM,WAAW,GACb,IAAI,CAAC,QACR,CAAC,KAAK,CAAE,EAAE,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAE,CAAC;gBAEpD,WAAW,CAAC,YAAY,GAAI,mBAAmB,CAAC,oBAAoB,CAAC;gBACrE,WAAW,CAAC,aAAa,GAAG,mBAAmB,CAAC,oBAAoB,CAAC;gBACrE,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;gBAE5B,+BAA+B;gBAC/B,IAAI,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;gBAE3B,OAAO;aACV;SACJ;IACL,CAAC;IAED;;;;oHAIgH;IACxG,2CAAa,GAArB,UAAuB,IAAyB;QAE5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAK,IAAI,CAAC,mBAAmB,KAAK,IAAI,EACtC;YACM,IAAI,CAAC,GAAkC,CAAC,cAAc,CAAC,sBAAsB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;SAClG;aAED;YACM,IAAI,CAAC,GAAkC,CAAC,cAAc,CAAC,sBAAsB,CAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;SACtG;IACL,CAAC;IAjWD,6CAA6C;IACb,wCAAoB,GAAkC,CAClF,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAChD,CAAC;IA+VN,0BAAC;CAAA,CApWwC,EAAE,CAAC,KAAK,GAoWhD;AApWY,kDAAmB;;;;;;;;;;;;;;;ACNhC;;oHAEoH;AACpH,IAAY,WAUX;AAVD,WAAY,WAAW;IAEnB,wDAAwD;IACxD,iDAAM;IACN,yDAAyD;IACzD,mDAAO;IACP,sDAAsD;IACtD,6CAAI;IACJ,yDAAyD;IACzD,mDAAO;AACX,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD,6FAAkC;AAElC;;;oHAGoH;AACpH;IAAyC,uCAAQ;IAiB7C;;;;;oHAKgH;IAChH,6BAAoB,KAAc,EAAE,MAAsB;QAA1D,YAEI,kBAEI,KAAK,EACL,MAAM,EAEN,EAAE,CAAC,YAAY,CAAC,sBAAsB,EACtC,IAAI,OAAO,CAAC,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,EAC3C,EAAE,CAAC,UAAU,CAAC,UAAU,CAC3B,SACJ;QAhCD,kCAAkC;QACF,WAAK,GAAiD,IAAI,CAAC;QAC3F,sCAAsC;QACN,WAAK,GAAiD,IAAI,CAAC;QAC3F,uCAAuC;QACP,YAAM,GAAgD,IAAI,CAAC;QAE3F,6CAA6C;QACb,sBAAgB,GAAsC,IAAI,CAAC;QAC3F,0DAA0D;QAC1B,oBAAc,GAAwC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC;QAE5G,qCAAqC;QACL,eAAS,GAA6C,KAAK,CAAC;;IAmB5F,CAAC;IAED;;;;oHAIgH;IACzG,qDAAuB,GAA9B,UAAgC,KAAoB;QAEhD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC;QAE1C,IAAM,kBAAkB,GAAyB,IAAI,CAAC,KAAK,CAAC,QAAiC,CAAC;QAC9F,IAAM,YAAY,GAAsB,kBAAkB,CAAC,YAAY,CAAC;QAExE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,2BAA2B,GAAG,MAAM,CAAE,YAAY,CAAC,MAAM,CAAE,GAAG,GAAG,CAAE,CAAC;QAEvF,uBAAuB;QACvB,IAAM,aAAa,GAA4B,YAAY,CAAE,EAAE,CAA8B,CAAC;QAE9F,aAAa,CAAC,YAAY,GAAI,KAAK,CAAC;IACxC,CAAC;IAED;;;;oHAIgH;IACzG,sDAAwB,GAA/B,UAAiC,KAAoB;QAEjD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,qBAAqB,CAAE,CAAC;QAE3C,IAAM,mBAAmB,GAAyB,IAAI,CAAC,MAAM,CAAC,QAAiC,CAAC;QAChG,IAAM,YAAY,GAAsB,mBAAmB,CAAC,YAAY,CAAC;QAEzE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,6BAA6B,GAAG,MAAM,CAAE,YAAY,CAAC,MAAM,CAAE,GAAG,GAAG,CAAE,CAAC;QAEzF,6BAA6B;QAC7B,IAAM,cAAc,GAA6B,YAAY,CAAE,CAAC,CAA8B,CAAC;QAC/F,IAAM,aAAa,GAA8B,YAAY,CAAE,CAAC,CAA8B,CAAC;QAC/F,IAAM,cAAc,GAA6B,YAAY,CAAE,CAAC,CAA8B,CAAC;QAE/F,cAAc,CAAC,YAAY,GAAG,KAAK,CAAC;QACpC,aAAa,CAAC,YAAY,GAAI,KAAK,CAAC;QACpC,cAAc,CAAC,YAAY,GAAG,KAAK,CAAC;IACxC,CAAC;IAED;;;oHAGgH;IACzG,yDAA2B,GAAlC;QAAA,iBAoEC;QAlEG,QAAS,IAAI,CAAC,cAAc,EAC5B;YACI,KAAK,EAAE,CAAC,WAAW,CAAC,MAAM;gBAC1B;oBACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC;oBAC7C,EAAE,CAAC,UAAU,CAAC,wBAAwB,CAEhC,IAAI,CAAC,GAAkC,CAAC,iBAAiB,EAC3D,aAAa,CAChB,CAAC;oBAEF,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAEhC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,KAAK,EACV,CAAC,EACD,EAAE,EACF,KAAK,EACL;wBAEI,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;wBAE1C,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAEhC,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,KAAI,CAAC,KAAK,EACV,EAAE,EACF,EAAE,EACF,IAAI,EACJ,cAAO,CAAC,CACX,CAAC;oBACN,CAAC,CACJ,CAAC;oBACF,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;gBACxB;oBACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC;oBAC7C,EAAE,CAAC,UAAU,CAAC,wBAAwB,CAEhC,IAAI,CAAC,GAAkC,CAAC,iBAAiB,EAC3D,YAAY,CACf,CAAC;oBAEF,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAEhC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,KAAK,EACV,EAAE,EACF,CAAC,EACD,KAAK,EACL;wBACI,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC;oBAChD,CAAC,CACJ,CAAC;oBACF,MAAM;iBACT;YAED,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC;YAC5B,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO;gBAC3B;oBACI,mDAAmD;oBACnD,MAAM;iBACT;SACJ;IACL,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,gDAAkB,GAA5B;QAEI,OAAO,IAAI,EAAE,CAAC,YAAY,CAEtB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAE7B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EAEtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAE,EACtC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAI,GAAG,EAAE,GAAG,CAAG,EACvC,IAAI,EACJ,IAAI,CACP,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,6CAAe,GAAzB,UAA2B,SAAsB;QAE7C,IAAK,SAAS,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,EACjD;YACI,SAAS,CAAC,eAAe,CAAE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAEnD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAE,gBAAgB,GAAG,EAAE,CAAC,UAAU,CAAC,iBAAiB,EAAE,GAAG,GAAG,CAAE,CAAC;YAErF,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACnD;;;;;;;;cAQE;SACW;IACL,CAAC;IAED;;;;oHAIgH;IACtG,yCAAW,GAArB;QAEI,oBAAoB;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAE3C,IAAI,CAAC,KAAK,EACV,EAAE,CAAC,SAAS,CAAC,iBAAiB,EAC9B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAC5B,CAAC;QAEF,0BAA0B;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;QACtC,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;QAEtC,OAAO;YAEH,IAAI,EAAE,CAAC,IAAI,CAEP,IAAI,EACJ,IAAI,CAAC,KAAK,CACb;SAEJ,CAAC;IACN,CAAC;IAED;;;;oHAIgH;IACtG,yCAAW,GAArB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,wCAAU,GAApB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;oHAIgH;IACtG,2CAAa,GAAvB;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;oHAIgH;IACtG,0CAAY,GAAtB;QAEI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAErD,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAC3B,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACpC,GAAG,EACH,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,OAAO,CAAC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EACnC,IAAI,CACP,CAAC;QAEF,mCAAmC;QACnC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAEvE,OAAO,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;IACrC,CAAC;IAED;;;;oHAIgH;IACtG,oDAAsB,GAAhC;QAEI,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;oHAEgH;IACtG,0CAAY,GAAtB;IAEA,CAAC;IAED;;oHAEgH;IACtG,sCAAQ,GAAlB;QAEI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED;;oHAEgH;IACtG,iDAAmB,GAA7B;QAEI,OAAO,IAAI,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;IACnE,CAAC;IAED;;;;oHAIgH;IACtG,uCAAS,GAAnB;QAEI,IAAM,GAAG,GAA6B,IAAI,EAAE,CAAC,sBAAsB,CAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,IAAI,CAAE,CAAC;QACzG,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;oHAEgH;IACtG,4CAAc,GAAxB;QAAA,iBAoBC;QAlBG,6BAA6B;QAC7B,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,KAAK,CAAE,CAAC;QAClF,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,GAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAI,CAAC;QAElF,wCAAwC;QACxC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,6BAA6B,CAAC,GAAG,CACpE;YAEM,KAAI,CAAC,GAAkC,CAAC,gBAAgB,CAAC,KAAK;gBAChE;gBACpB,qGAAqG;gBAC7E,KAAK,GAAG,KAAK,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC,kBAAkB,EAAE,CAAC,MAAM,CACrE,CAAC;QACN,CAAC,CACJ,CAAC;QAEF,6CAA6C;QAC7C,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,uBAAuB,GAAG,IAAI,CAAC;IAC1E,CAAC;IACL,0BAAC;AAAD,CAAC,CA3XwC,EAAE,CAAC,KAAK,GA2XhD;AA3XY,kDAAmB;;;;;;;;;;;;;;;;;;ACNhC,oGAA6B;AAC7B,wGAA+B;AAC/B,kGAA4B;AAE5B,gJAAmD;AACnD,8IAAkD;AAClD,0IAAgD;AAEhD,oHAAqC;AAErC,4HAAyC;AACzC,0IAAgD;AAChD,8IAAkD;AAElD,kIAA4C;AAC5C,kIAA4C;AAC5C,oIAA6C;AAC7C,8HAA0C;AAC1C,8IAAkD;AAClD,sJAAsD;AACtD,wIAA+C;AAC/C,kIAA4C;AAE5C,oHAAqC;AACrC,gHAAmC;AAEnC,sIAA8C;AAC9C,oJAAqD;AACrD,8IAAkD;AAElD,kJAAoD;AACpD,8IAAkD;AAClD,sJAAsD;AAEtD,0JAAwD;AACxD,wKAA+D;AAE/D,4HAAyC;AACzC,0IAAgD;AAChD,oIAA6C;AAC7C,sIAA8C;AAC9C,kKAA4D;AAC5D,8KAAkE;AAClE,kKAA4D;AAE5D,sIAA8C;AAC9C,sIAA8C;AAC9C,wIAA+C;AAE/C,sIAA8C;AAC9C,kIAA4C;AAC5C,0HAAwC;AAExC,gIAA2C;AAC3C,kIAA4C;AAC5C,0IAAgD;AAEhD,8HAA0C;AAE1C,kKAA4D;AAC5D,oKAA6D;AAC7D,4JAAyD;AACzD,wJAAuD;AAEvD,0IAAgD;AAChD,kKAA4D;AAC5D,sJAAsD;AAEtD,sJAAsD;AAEtD,8IAAkD;AAClD,kKAA4D;AAC5D,0JAAwD;AAExD,wIAA+C;AAC/C,kJAAoD;AACpD,gJAAmD;AAEnD,gJAAmD;AACnD,kJAAoD;AACpD,8JAA0D;AAC1D,wJAAuD;AACvD,4IAAiD;AACjD,kIAA4C;AAE5C,4HAAyC;AACzC,8GAAkC;AAClC,gHAAmC;AACnC,gHAAmC;AAEnC,kIAA4C;AAC5C,4IAAiD;AACjD,oJAAqD;AAErD,4GAAiC;AACjC,8GAAkC;AAClC,4GAAiC;AACjC,8GAAkC;AAClC,wGAA+B;AAE/B,0GAAgC;AAChC,0GAAgC;AAChC,8GAAkC;AAElC,gHAAmC;AAEnC,8HAA0C;AAC1C,8IAAkD;AAClD,oIAA6C;AAC7C,kIAA4C;AAE5C,kJAAoD;AACpD,oJAAqD;AAErD,8KAAkE;AAElE,gKAA2D;AAC3D,gLAAmE;;;;;;;;;;;;;;;ACrHnE;;oHAEoH;AACpH;IAAA;IAyBA,CAAC;IAvBG;;;;oHAIgH;IAClG,iBAAQ,GAAtB,UAAwB,KAAY;QAEhC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED;;;;oHAIgH;IAClG,mBAAU,GAAxB,UAA0B,IAAW;QAEjC,IAAM,IAAI,GAAmB,QAAQ,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC;QAC9D,IAAI,CAAC,GAAG,GAAI,eAAe,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC;IACtC,CAAC;IACL,eAAC;AAAD,CAAC;AAzBY,4BAAQ;;;;;;;;;;;;;;;ACHrB;;oHAEoH;AACpH;IAAA;IA8JA,CAAC;IA5JG;;;;;;;oHAOgH;IAClG,qBAAY,GAA1B,UAA4B,cAAqB;QAE7C,OAAO,OAAO,CAAC,KAAK,CAAC,WAAW,CAAE,cAAc,CAAE,CAAC,OAAO,EAAE,CAAC;IACjE,CAAC;IAED;;;;;;;oHAOgH;IAClG,qBAAY,GAA1B,UAA4B,UAAiB;QAEzC,OAAO,OAAO,CAAC,KAAK,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC,OAAO,EAAE,CAAC;IAC7D,CAAC;IAED;;;;;;;oHAOgH;IAClG,qBAAY,GAA1B,UAA4B,GAAU,EAAE,GAAU;QAE9C,OAAO,IAAI,CAAC,KAAK,CAAE,CAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAE,CAAE,GAAG,GAAG,CAAE,CAAC;IACrE,CAAC;IAED;;;;;;oHAMgH;IAClG,8BAAqB,GAAnC,UAAqC,YAAmB;QAEpD,OAAQ,YAAY,GAAG,KAAK,EAC5B;YACI,YAAY,IAAI,KAAK,CAAC;SACzB;QACD,OAAQ,YAAY,GAAG,GAAG,EAC1B;YACI,YAAY,IAAI,KAAK,CAAC;SACzB;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED;;;;;;oHAMgH;IAClG,mBAAU,GAAxB,UAA0B,cAAqB;QAE3C,OAAO,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,YAAY,CAAE,cAAc,CAAE,CAAE,CAAC;IAC/D,CAAC;IAED;;;;;;oHAMgH;IAClG,mBAAU,GAAxB,UAA0B,cAAqB;QAE3C,OAAO,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,YAAY,CAAE,cAAc,CAAE,CAAE,CAAC;IAC/D,CAAC;IAED;;;;;;;;oHAQgH;IAClG,sBAAa,GAA3B,UAA6B,KAAY,EAAE,MAAa,EAAE,KAAY;QAElE,OAAO,CAAE,KAAK,GAAG,MAAM,GAAG,KAAK,CAAE,CAAC;IACtC,CAAC;IAED;;;;;;;oHAOgH;IAClG,0BAAiB,GAA/B,UAAiC,QAAe,EAAE,MAAa;QAE3D,OAAO,CAAE,CAAE,IAAI,CAAC,GAAG,CAAE,CAAE,QAAQ,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAE,GAAG,MAAM,CAAE,CAAC;IACtE,CAAC;IAED;;;;;;oHAMgH;IAClG,wBAAe,GAA7B,UAA+B,QAAe;QAE1C,OAAO,CAAE,CAAE,IAAI,CAAC,GAAG,CAAE,CAAE,QAAQ,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;IACrE,CAAC;IAED;;;;;;;;oHAQgH;IAClG,qBAAY,GAA1B,UAEI,MAAyB,EACzB,QAAyB,EACzB,QAAgB;QAIhB,IAAM,aAAa,GAAqB,IAAI,OAAO,CAAC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAE,CAAC;QAClF,IAAM,cAAc,GAAoB,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAEvE,QAAQ,CAAC,YAAY,CAAE,QAAQ,CAAC,CAAC,CAAE,EACnC,QAAQ,CAAC,YAAY,CAAE,QAAQ,CAAC,CAAC,CAAE,EACnC,QAAQ,CAAC,YAAY,CAAE,QAAQ,CAAC,CAAC,CAAE,CACtC,CAAC;QAEF,IAAM,oBAAoB,GAAmB,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAE7E,aAAa,EACb,cAAc,CACjB,CAAC;QAEF,OAAO,MAAM,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC;IAC9C,CAAC;IACL,eAAC;AAAD,CAAC;AA9JY,4BAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrB,oCAAoC;AACpC,IAAM,MAAM,GAAO,mBAAO,CAAC,+CAAQ,CAAC,CAAC;AAErC;;oHAEoH;AACpH;IAAA;IAqCA,CAAC;IAnCG;;;;oHAIgH;IAClG,4BAAiB,GAA/B;QAEI,OAAO,IAAI,MAAM,EAAE,CAAC,MAAM,CAAE,qBAAqB,CAAE,CAAC;IACxD,CAAC;IAED;;;;;;;;;oHASgH;IAClG,sBAAW,GAAzB,UAA2B,OAAc,EAAE,KAAY;;QAEnD,IAAM,OAAO,GAAoB,KAAK,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QACvD,IAAM,GAAG,GAAwB,EAAE,CAAC;QAEpC,IAAK,OAAO,KAAK,IAAI,EACrB;;gBACI,KAAsB,gCAAO,sFAC7B;oBADM,IAAM,MAAM;oBAEd,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;iBACtB;;;;;;;;;SACJ;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IACL,iBAAC;AAAD,CAAC;AArCY,gCAAU;;;;;;;;;;;;;;;ACNvB,mGAAwC;AAC5C;;;;EAIE;AACE;;oHAEoH;AACpH,MAAM,CAAC,MAAM,GAAG;IAEZ,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACnB,CAAC,CAAC;AAEF;;oHAEoH;AACpH,MAAM,CAAC,QAAQ,GAAG;AAElB,CAAC,CAAC;;;;;;;;;;;;ACpBN,yB;;;;;;;;;;;ACAA,6B","file":"babylon-zero-v0.0.10.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/typescript/index.ts\");\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  background: #ffffff;\\n  margin: 0;\\n  padding: 0;\\n  text-align: center;\\n  overflow-x: hidden;\\n  overflow-y: hidden;\\n}\\ndiv#loading {\\n  width: 100%;\\n  height: 100%;\\n  background: #ffffff no-repeat center center;\\n  position: absolute;\\n  -webkit-animation: pulse 2s ease-in-out infinite;\\n  -moz-animation: pulse 2s ease-in-out infinite;\\n  animation: pulse 2s ease-in-out infinite;\\n  /*\\n        transition:             transform 1s;\\n        transform-style:        preserve-3d;\\n*/\\n}\\n@keyframes spin {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n@keyframes pulse {\\n  0% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0.5;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var af = moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM : function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            ss : '%d sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n\n    return af;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arDz = moment.defineLocale('ar-dz', {\n        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arDz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arKw = moment.defineLocale('ar-kw', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arKw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '0': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var arLy = moment.defineLocale('ar-ly', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arLy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arMa = moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return arMa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    var arSa = moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return arSa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var arTn = moment.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss : '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arTn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var ar = moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return ar;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n\n    var az = moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyə',\n            ss : '%d saniyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM : function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return az;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    var be = moment.defineLocale('be', {\n        months : {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n        },\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM : function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return be;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bg = moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[В изминалата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return bg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var bm = moment.defineLocale('bm', {\n        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'MMMM [tile] D [san] YYYY',\n            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bi lɛrɛ] LT',\n            nextDay : '[Sini lɛrɛ] LT',\n            nextWeek : 'dddd [don lɛrɛ] LT',\n            lastDay : '[Kunu lɛrɛ] LT',\n            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s kɔnɔ',\n            past : 'a bɛ %s bɔ',\n            s : 'sanga dama dama',\n            ss : 'sekondi %d',\n            m : 'miniti kelen',\n            mm : 'miniti %d',\n            h : 'lɛrɛ kelen',\n            hh : 'lɛrɛ %d',\n            d : 'tile kelen',\n            dd : 'tile %d',\n            M : 'kalo kelen',\n            MM : 'kalo %d',\n            y : 'san kelen',\n            yy : 'san %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return bm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    var bn = moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm সময়',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কয়েক সেকেন্ড',\n            ss : '%d সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'রাত' && hour >= 4) ||\n                    (meridiem === 'দুপুর' && hour < 5) ||\n                    meridiem === 'বিকাল') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return bn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    var bo = moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            ss : '%d སྐར་ཆ།',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                    (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                    meridiem === 'དགོང་དག') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return bo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var br = moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            ss : '%d eilenn',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return br;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var bs = moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return bs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ca = moment.defineLocale('ca', {\n        months : {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n            format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n            isFormat: /D[oD]?(\\s)+MMMM/\n        },\n        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [de] YYYY',\n            ll : 'D MMM YYYY',\n            LLL : 'D MMMM [de] YYYY [a les] H:mm',\n            lll : 'D MMM YYYY, H:mm',\n            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll : 'ddd D MMM YYYY, H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'd\\'aquí %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            ss : '%d segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ca;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n                break;\n        }\n    }\n\n    var cs = moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm',\n            l : 'D. M. YYYY'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cv = moment.defineLocale('cv', {\n        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пӗр-ик ҫеккунт',\n            ss : '%d ҫеккунт',\n            m : 'пӗр минут',\n            mm : '%d минут',\n            h : 'пӗр сехет',\n            hh : '%d сехет',\n            d : 'пӗр кун',\n            dd : '%d кун',\n            M : 'пӗр уйӑх',\n            MM : '%d уйӑх',\n            y : 'пӗр ҫул',\n            yy : '%d ҫул'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal : '%d-мӗш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return cv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var cy = moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var da = moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay : '[i dag kl.] LT',\n            nextDay : '[i morgen kl.] LT',\n            nextWeek : 'på dddd [kl.] LT',\n            lastDay : '[i går kl.] LT',\n            lastWeek : '[i] dddd[s kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            ss : '%d sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return da;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deAt = moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deAt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deCh = moment.defineLocale('de-ch', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'ޖެނުއަރީ',\n        'ފެބްރުއަރީ',\n        'މާރިޗު',\n        'އޭޕްރީލު',\n        'މޭ',\n        'ޖޫން',\n        'ޖުލައި',\n        'އޯގަސްޓު',\n        'ސެޕްޓެމްބަރު',\n        'އޮކްޓޯބަރު',\n        'ނޮވެމްބަރު',\n        'ޑިސެމްބަރު'\n    ], weekdays = [\n        'އާދިއްތަ',\n        'ހޯމަ',\n        'އަންގާރަ',\n        'ބުދަ',\n        'ބުރާސްފަތި',\n        'ހުކުރު',\n        'ހޮނިހިރު'\n    ];\n\n    var dv = moment.defineLocale('dv', {\n        months : months,\n        monthsShort : months,\n        weekdays : weekdays,\n        weekdaysShort : weekdays,\n        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat : {\n\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/M/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM : function (input) {\n            return 'މފ' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar : {\n            sameDay : '[މިއަދު] LT',\n            nextDay : '[މާދަމާ] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[އިއްޔެ] LT',\n            lastWeek : '[ފާއިތުވި] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ތެރޭގައި %s',\n            past : 'ކުރިން %s',\n            s : 'ސިކުންތުކޮޅެއް',\n            ss : 'd% ސިކުންތު',\n            m : 'މިނިޓެއް',\n            mm : 'މިނިޓު %d',\n            h : 'ގަޑިއިރެއް',\n            hh : 'ގަޑިއިރު %d',\n            d : 'ދުވަހެއް',\n            dd : 'ދުވަސް %d',\n            M : 'މަހެއް',\n            MM : 'މަސް %d',\n            y : 'އަހަރެއް',\n            yy : 'އަހަރު %d'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 7,  // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return dv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n\n    var el = moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    return el;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enSG = moment.defineLocale('en-SG', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enSG;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enAu = moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enAu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enCa = moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY h:mm A',\n            LLLL : 'dddd, MMMM D, YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enGb = moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enGb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIe = moment.defineLocale('en-ie', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enIe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enIl = moment.defineLocale('en-il', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enIl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var enNz = moment.defineLocale('en-nz', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enNz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eo = moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-a de] MMMM, YYYY',\n            LLL : 'D[-a de] MMMM, YYYY HH:mm',\n            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'post %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            ss : '%d sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return eo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esDo = moment.defineLocale('es-do', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return esDo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esUs = moment.defineLocale('es-us', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'MM/DD/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return esUs;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var es = moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return es;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'ss': [number + 'sekundi', number + 'sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    var et = moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'H:mm:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return et;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var eu = moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] HH:mm',\n            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            ss : '%d segundo',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return eu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    var fa = moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چند ثانیه',\n            ss : 'ثانیه d%',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return fa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                return isFuture ? 'sekunnin' : 'sekuntia';\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    var fi = moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] HH.mm',\n            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fo = moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D. MMMM, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            ss : '%d sekundir',\n            m : 'ein minuttur',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaður',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCa = moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        }\n    });\n\n    return frCa;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var frCh = moment.defineLocale('fr-ch', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return frCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var fr = moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    var fy = moment.defineLocale('fy', {\n        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'oer %s',\n            past : '%s lyn',\n            s : 'in pear sekonden',\n            ss : '%d sekonden',\n            m : 'ien minút',\n            mm : '%d minuten',\n            h : 'ien oere',\n            hh : '%d oeren',\n            d : 'ien dei',\n            dd : '%d dagen',\n            M : 'ien moanne',\n            MM : '%d moannen',\n            y : 'ien jier',\n            yy : '%d jierren'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n\n    var months = [\n        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'\n    ];\n\n    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];\n\n    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];\n\n    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];\n\n    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];\n\n    var ga = moment.defineLocale('ga', {\n        months: months,\n        monthsShort: monthsShort,\n        monthsParseExact: true,\n        weekdays: weekdays,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné aig] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d mí',\n            y: 'bliain',\n            yy: '%d bliain'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ga;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n    ];\n\n    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\n    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\n    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\n    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    var gd = moment.defineLocale('gd', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParseExact : true,\n        weekdays : weekdays,\n        weekdaysShort : weekdaysShort,\n        weekdaysMin : weekdaysMin,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[An-diugh aig] LT',\n            nextDay : '[A-màireach aig] LT',\n            nextWeek : 'dddd [aig] LT',\n            lastDay : '[An-dè aig] LT',\n            lastWeek : 'dddd [seo chaidh] [aig] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ann an %s',\n            past : 'bho chionn %s',\n            s : 'beagan diogan',\n            ss : '%d diogan',\n            m : 'mionaid',\n            mm : '%d mionaidean',\n            h : 'uair',\n            hh : '%d uairean',\n            d : 'latha',\n            dd : '%d latha',\n            M : 'mìos',\n            MM : '%d mìosan',\n            y : 'bliadhna',\n            yy : '%d bliadhna'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n        ordinal : function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var gl = moment.defineLocale('gl', {\n        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['thodde secondanim', 'thodde second'],\n            'ss': [number + ' secondanim', number + ' second'],\n            'm': ['eka mintan', 'ek minute'],\n            'mm': [number + ' mintanim', number + ' mintam'],\n            'h': ['eka voran', 'ek vor'],\n            'hh': [number + ' voranim', number + ' voram'],\n            'd': ['eka disan', 'ek dis'],\n            'dd': [number + ' disanim', number + ' dis'],\n            'M': ['eka mhoinean', 'ek mhoino'],\n            'MM': [number + ' mhoineanim', number + ' mhoine'],\n            'y': ['eka vorsan', 'ek voros'],\n            'yy': [number + ' vorsanim', number + ' vorsam']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var gomLatn = moment.defineLocale('gom-latn', {\n        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'A h:mm [vazta]',\n            LTS : 'A h:mm:ss [vazta]',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY A h:mm [vazta]',\n            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n        },\n        calendar : {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Ieta to] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fatlo] dddd[,] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s',\n            past : '%s adim',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /rati|sokalli|donparam|sanje/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokalli') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokalli';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        }\n    });\n\n    return gomLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n            '1': '૧',\n            '2': '૨',\n            '3': '૩',\n            '4': '૪',\n            '5': '૫',\n            '6': '૬',\n            '7': '૭',\n            '8': '૮',\n            '9': '૯',\n            '0': '૦'\n        },\n        numberMap = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0'\n        };\n\n    var gu = moment.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પેહલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ'\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6 // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return gu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var he = moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY HH:mm',\n            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            ss : '%d שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            }\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM : function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        }\n    });\n\n    return he;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var hi = moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            ss : '%d सेकंड',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return hi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var hr = moment.defineLocale('hr', {\n        months : {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n        },\n        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return hr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    var hu = moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D. H:mm',\n            LLLL : 'YYYY. MMMM D., dddd H:mm'\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return hu;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var hyAm = moment.defineLocale('hy-am', {\n        months : {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n        },\n        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            ss : '%d վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return hyAm;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var id = moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            ss : '%d detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return id;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    var is = moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return is;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var itCh = moment.defineLocale('it-ch', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return itCh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var it = moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return it;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ja = moment.defineLocale('ja', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日 dddd HH:mm',\n            l : 'YYYY/MM/DD',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日(ddd) HH:mm'\n        },\n        meridiemParse: /午前|午後/i,\n        isPM : function (input) {\n            return input === '午後';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : function (now) {\n                if (now.week() < this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay : '[昨日] LT',\n            lastWeek : function (now) {\n                if (this.week() < now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}日/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            ss : '%d秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n\n    return ja;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var jv = moment.defineLocale('jv', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar : {\n            sameDay : '[Dinten puniko pukul] LT',\n            nextDay : '[Mbenjang pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kala wingi pukul] LT',\n            lastWeek : 'dddd [kepengker pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'wonten ing %s',\n            past : '%s ingkang kepengker',\n            s : 'sawetawis detik',\n            ss : '%d detik',\n            m : 'setunggal menit',\n            mm : '%d menit',\n            h : 'setunggal jam',\n            hh : '%d jam',\n            d : 'sedinten',\n            dd : '%d dinten',\n            M : 'sewulan',\n            MM : '%d wulan',\n            y : 'setaun',\n            yy : '%d taun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return jv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ka = moment.defineLocale('ka', {\n        months : {\n            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n            isFormat: /(წინა|შემდეგ)/\n        },\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            ss : '%d წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n\n    return ka;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші'\n    };\n\n    var kk = moment.defineLocale('kk', {\n        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгін сағат] LT',\n            nextDay : '[Ертең сағат] LT',\n            nextWeek : 'dddd [сағат] LT',\n            lastDay : '[Кеше сағат] LT',\n            lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ішінде',\n            past : '%s бұрын',\n            s : 'бірнеше секунд',\n            ss : '%d секунд',\n            m : 'бір минут',\n            mm : '%d минут',\n            h : 'бір сағат',\n            hh : '%d сағат',\n            d : 'бір күн',\n            dd : '%d күн',\n            M : 'бір ай',\n            MM : '%d ай',\n            y : 'бір жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return kk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '១',\n        '2': '២',\n        '3': '៣',\n        '4': '៤',\n        '5': '៥',\n        '6': '៦',\n        '7': '៧',\n        '8': '៨',\n        '9': '៩',\n        '0': '០'\n    }, numberMap = {\n        '១': '1',\n        '២': '2',\n        '៣': '3',\n        '៤': '4',\n        '៥': '5',\n        '៦': '6',\n        '៧': '7',\n        '៨': '8',\n        '៩': '9',\n        '០': '0'\n    };\n\n    var km = moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        dayOfMonthOrdinalParse : /ទី\\d{1,2}/,\n        ordinal : 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return km;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '೧',\n        '2': '೨',\n        '3': '೩',\n        '4': '೪',\n        '5': '೫',\n        '6': '೬',\n        '7': '೭',\n        '8': '೮',\n        '9': '೯',\n        '0': '೦'\n    },\n    numberMap = {\n        '೧': '1',\n        '೨': '2',\n        '೩': '3',\n        '೪': '4',\n        '೫': '5',\n        '೬': '6',\n        '೭': '7',\n        '೮': '8',\n        '೯': '9',\n        '೦': '0'\n    };\n\n    var kn = moment.defineLocale('kn', {\n        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[ಇಂದು] LT',\n            nextDay : '[ನಾಳೆ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ನಿನ್ನೆ] LT',\n            lastWeek : '[ಕೊನೆಯ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ನಂತರ',\n            past : '%s ಹಿಂದೆ',\n            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss : '%d ಸೆಕೆಂಡುಗಳು',\n            m : 'ಒಂದು ನಿಮಿಷ',\n            mm : '%d ನಿಮಿಷ',\n            h : 'ಒಂದು ಗಂಟೆ',\n            hh : '%d ಗಂಟೆ',\n            d : 'ಒಂದು ದಿನ',\n            dd : '%d ದಿನ',\n            M : 'ಒಂದು ತಿಂಗಳು',\n            MM : '%d ತಿಂಗಳು',\n            y : 'ಒಂದು ವರ್ಷ',\n            yy : '%d ವರ್ಷ'\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal : function (number) {\n            return number + 'ನೇ';\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return kn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ko = moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 A h:mm',\n            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n            l : 'YYYY.MM.DD.',\n            ll : 'YYYY년 MMMM D일',\n            lll : 'YYYY년 MMMM D일 A h:mm',\n            llll : 'YYYY년 MMMM D일 dddd A h:mm'\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇 초',\n            ss : '%d초',\n            m : '1분',\n            mm : '%d분',\n            h : '한 시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한 달',\n            MM : '%d달',\n            y : '일 년',\n            yy : '%d년'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse : /오전|오후/,\n        isPM : function (token) {\n            return token === '오후';\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        }\n    });\n\n    return ko;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    },\n    months = [\n        'کانونی دووەم',\n        'شوبات',\n        'ئازار',\n        'نیسان',\n        'ئایار',\n        'حوزەیران',\n        'تەمموز',\n        'ئاب',\n        'ئەیلوول',\n        'تشرینی یەكەم',\n        'تشرینی دووەم',\n        'كانونی یەکەم'\n    ];\n\n\n    var ku = moment.defineLocale('ku', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar : {\n            sameDay : '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay : '[به‌یانی كاتژمێر] LT',\n            nextWeek : 'dddd [كاتژمێر] LT',\n            lastDay : '[دوێنێ كاتژمێر] LT',\n            lastWeek : 'dddd [كاتژمێر] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'له‌ %s',\n            past : '%s',\n            s : 'چه‌ند چركه‌یه‌ك',\n            ss : 'چركه‌ %d',\n            m : 'یه‌ك خوله‌ك',\n            mm : '%d خوله‌ك',\n            h : 'یه‌ك كاتژمێر',\n            hh : '%d كاتژمێر',\n            d : 'یه‌ك ڕۆژ',\n            dd : '%d ڕۆژ',\n            M : 'یه‌ك مانگ',\n            MM : '%d مانگ',\n            y : 'یه‌ك ساڵ',\n            yy : '%d ساڵ'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return ku;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү'\n    };\n\n    var ky = moment.defineLocale('ky', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгүн саат] LT',\n            nextDay : '[Эртең саат] LT',\n            nextWeek : 'dddd [саат] LT',\n            lastDay : '[Кечээ саат] LT',\n            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ичинде',\n            past : '%s мурун',\n            s : 'бирнече секунд',\n            ss : '%d секунд',\n            m : 'бир мүнөт',\n            mm : '%d мүнөт',\n            h : 'бир саат',\n            hh : '%d саат',\n            d : 'бир күн',\n            dd : '%d күн',\n            M : 'бир ай',\n            MM : '%d ай',\n            y : 'бир жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ky;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    var lb = moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            ss : '%d Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var lo = moment.defineLocale('lo', {\n        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar : {\n            sameDay : '[ມື້ນີ້ເວລາ] LT',\n            nextDay : '[ມື້ອື່ນເວລາ] LT',\n            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ອີກ %s',\n            past : '%sຜ່ານມາ',\n            s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss : '%d ວິນາທີ' ,\n            m : '1 ນາທີ',\n            mm : '%d ນາທີ',\n            h : '1 ຊົ່ວໂມງ',\n            hh : '%d ຊົ່ວໂມງ',\n            d : '1 ມື້',\n            dd : '%d ມື້',\n            M : '1 ເດືອນ',\n            MM : '%d ເດືອນ',\n            y : '1 ປີ',\n            yy : '%d ປີ'\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal : function (number) {\n            return 'ທີ່' + number;\n        }\n    });\n\n    return lo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss' : 'sekundė_sekundžių_sekundes',\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    var lt = moment.defineLocale('lt', {\n        months : {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n        },\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n            isFormat: /dddd HH:mm/\n        },\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            ss : translate,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'h': 'stundas_stundām_stunda_stundas'.split('_'),\n        'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n        'd': 'dienas_dienām_diena_dienas'.split('_'),\n        'dd': 'dienas_dienām_diena_dienas'.split('_'),\n        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'y': 'gada_gadiem_gads_gadi'.split('_'),\n        'yy': 'gada_gadiem_gads_gadi'.split('_')\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format(units[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    var lv = moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY.',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'pēc %s',\n            past : 'pirms %s',\n            s : relativeSeconds,\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithSingular,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithSingular,\n            hh : relativeTimeWithPlural,\n            d : relativeTimeWithSingular,\n            dd : relativeTimeWithPlural,\n            M : relativeTimeWithSingular,\n            MM : relativeTimeWithPlural,\n            y : relativeTimeWithSingular,\n            yy : relativeTimeWithPlural\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var me = moment.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mjesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return me;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mi = moment.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mk = moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : '[Во] dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return mk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ml = moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm -നു',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            ss : '%d സെക്കൻഡ്',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                    meridiem === 'വൈകുന്നേരം') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n\n    return ml;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    var mn = moment.defineLocale('mn', {\n        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY оны MMMMын D',\n            LLL : 'YYYY оны MMMMын D HH:mm',\n            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM : function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar : {\n            sameDay : '[Өнөөдөр] LT',\n            nextDay : '[Маргааш] LT',\n            nextWeek : '[Ирэх] dddd LT',\n            lastDay : '[Өчигдөр] LT',\n            lastWeek : '[Өнгөрсөн] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s дараа',\n            past : '%s өмнө',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        }\n    });\n\n    return mn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture)\n    {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's': output = 'काही सेकंद'; break;\n                case 'ss': output = '%d सेकंद'; break;\n                case 'm': output = 'एक मिनिट'; break;\n                case 'mm': output = '%d मिनिटे'; break;\n                case 'h': output = 'एक तास'; break;\n                case 'hh': output = '%d तास'; break;\n                case 'd': output = 'एक दिवस'; break;\n                case 'dd': output = '%d दिवस'; break;\n                case 'M': output = 'एक महिना'; break;\n                case 'MM': output = '%d महिने'; break;\n                case 'y': output = 'एक वर्ष'; break;\n                case 'yy': output = '%d वर्षे'; break;\n            }\n        }\n        else {\n            switch (string) {\n                case 's': output = 'काही सेकंदां'; break;\n                case 'ss': output = '%d सेकंदां'; break;\n                case 'm': output = 'एका मिनिटा'; break;\n                case 'mm': output = '%d मिनिटां'; break;\n                case 'h': output = 'एका तासा'; break;\n                case 'hh': output = '%d तासां'; break;\n                case 'd': output = 'एका दिवसा'; break;\n                case 'dd': output = '%d दिवसां'; break;\n                case 'M': output = 'एका महिन्या'; break;\n                case 'MM': output = '%d महिन्यां'; break;\n                case 'y': output = 'एका वर्षा'; break;\n                case 'yy': output = '%d वर्षां'; break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    var mr = moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm वाजता',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात्री') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळी') {\n                return hour;\n            } else if (meridiem === 'दुपारी') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'सायंकाळी') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return mr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var msMy = moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return msMy;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ms = moment.defineLocale('ms', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ms;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var mt = moment.defineLocale('mt', {\n        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Illum fil-]LT',\n            nextDay : '[Għada fil-]LT',\n            nextWeek : 'dddd [fil-]LT',\n            lastDay : '[Il-bieraħ fil-]LT',\n            lastWeek : 'dddd [li għadda] [fil-]LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'f’ %s',\n            past : '%s ilu',\n            s : 'ftit sekondi',\n            ss : '%d sekondi',\n            m : 'minuta',\n            mm : '%d minuti',\n            h : 'siegħa',\n            hh : '%d siegħat',\n            d : 'ġurnata',\n            dd : '%d ġranet',\n            M : 'xahar',\n            MM : '%d xhur',\n            y : 'sena',\n            yy : '%d sni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n\n    var my = moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss : '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return my;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nb = moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'noen sekunder',\n            ss : '%d sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nb;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var ne = moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोलि] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडि',\n            s : 'केही क्षण',\n            ss : '%d सेकेण्ड',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return ne;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nlBe = moment.defineLocale('nl-be', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nlBe;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nl = moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var nn = moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s sidan',\n            s : 'nokre sekund',\n            ss : '%d sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '੧',\n        '2': '੨',\n        '3': '੩',\n        '4': '੪',\n        '5': '੫',\n        '6': '੬',\n        '7': '੭',\n        '8': '੮',\n        '9': '੯',\n        '0': '੦'\n    },\n    numberMap = {\n        '੧': '1',\n        '੨': '2',\n        '੩': '3',\n        '੪': '4',\n        '੫': '5',\n        '੬': '6',\n        '੭': '7',\n        '੮': '8',\n        '੯': '9',\n        '੦': '0'\n    };\n\n    var paIn = moment.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm ਵਜੇ',\n            LTS : 'A h:mm:ss ਵਜੇ',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n        },\n        calendar : {\n            sameDay : '[ਅਜ] LT',\n            nextDay : '[ਕਲ] LT',\n            nextWeek : '[ਅਗਲਾ] dddd, LT',\n            lastDay : '[ਕਲ] LT',\n            lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ਵਿੱਚ',\n            past : '%s ਪਿਛਲੇ',\n            s : 'ਕੁਝ ਸਕਿੰਟ',\n            ss : '%d ਸਕਿੰਟ',\n            m : 'ਇਕ ਮਿੰਟ',\n            mm : '%d ਮਿੰਟ',\n            h : 'ਇੱਕ ਘੰਟਾ',\n            hh : '%d ਘੰਟੇ',\n            d : 'ਇੱਕ ਦਿਨ',\n            dd : '%d ਦਿਨ',\n            M : 'ਇੱਕ ਮਹੀਨਾ',\n            MM : '%d ਮਹੀਨੇ',\n            y : 'ਇੱਕ ਸਾਲ',\n            yy : '%d ਸਾਲ'\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return paIn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\n            case 'hh':\n                return result + (plural(number) ? 'godziny' : 'godzin');\n            case 'MM':\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    var pl = moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (format === '') {\n                // Hack: if format empty we know this is used to generate\n                // RegExp by moment. Give then back both valid forms of months\n                // in RegExp ready format.\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ptBr = moment.defineLocale('pt-br', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'poucos segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n\n    return ptBr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var pt = moment.defineLocale('pt', {\n        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pt;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'ss': 'secunde',\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    var ro = moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            ss : relativeTimeWithPlural,\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return ro;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    var ru = moment.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ru;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوري',\n        'فيبروري',\n        'مارچ',\n        'اپريل',\n        'مئي',\n        'جون',\n        'جولاءِ',\n        'آگسٽ',\n        'سيپٽمبر',\n        'آڪٽوبر',\n        'نومبر',\n        'ڊسمبر'\n    ];\n    var days = [\n        'آچر',\n        'سومر',\n        'اڱارو',\n        'اربع',\n        'خميس',\n        'جمع',\n        'ڇنڇر'\n    ];\n\n    var sd = moment.defineLocale('sd', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[اڄ] LT',\n            nextDay : '[سڀاڻي] LT',\n            nextWeek : 'dddd [اڳين هفتي تي] LT',\n            lastDay : '[ڪالهه] LT',\n            lastWeek : '[گزريل هفتي] dddd [تي] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s پوء',\n            past : '%s اڳ',\n            s : 'چند سيڪنڊ',\n            ss : '%d سيڪنڊ',\n            m : 'هڪ منٽ',\n            mm : '%d منٽ',\n            h : 'هڪ ڪلاڪ',\n            hh : '%d ڪلاڪ',\n            d : 'هڪ ڏينهن',\n            dd : '%d ڏينهن',\n            M : 'هڪ مهينو',\n            MM : '%d مهينا',\n            y : 'هڪ سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sd;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var se = moment.defineLocale('se', {\n        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'MMMM D. [b.] YYYY',\n            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s geažes',\n            past : 'maŋit %s',\n            s : 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m : 'okta minuhta',\n            mm : '%d minuhtat',\n            h : 'okta diimmu',\n            hh : '%d diimmut',\n            d : 'okta beaivi',\n            dd : '%d beaivvit',\n            M : 'okta mánnu',\n            MM : '%d mánut',\n            y : 'okta jahki',\n            yy : '%d jagit'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return se;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    /*jshint -W100*/\n    var si = moment.defineLocale('si', {\n        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'a h:mm',\n            LTS : 'a h:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY MMMM D',\n            LLL : 'YYYY MMMM D, a h:mm',\n            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n        },\n        calendar : {\n            sameDay : '[අද] LT[ට]',\n            nextDay : '[හෙට] LT[ට]',\n            nextWeek : 'dddd LT[ට]',\n            lastDay : '[ඊයේ] LT[ට]',\n            lastWeek : '[පසුගිය] dddd LT[ට]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sකින්',\n            past : '%sකට පෙර',\n            s : 'තත්පර කිහිපය',\n            ss : 'තත්පර %d',\n            m : 'මිනිත්තුව',\n            mm : 'මිනිත්තු %d',\n            h : 'පැය',\n            hh : 'පැය %d',\n            d : 'දිනය',\n            dd : 'දින %d',\n            M : 'මාසය',\n            MM : 'මාස %d',\n            y : 'වසර',\n            yy : 'වසර %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal : function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM : function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        }\n    });\n\n    return si;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n                break;\n        }\n    }\n\n    var sk = moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    var sl = moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : 'pred %s',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : processRelativeTime,\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sq = moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            ss : '%d sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sq;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var srCyrl = moment.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return srCyrl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var sr = moment.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ss = moment.defineLocale('ss', {\n        months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Namuhla nga] LT',\n            nextDay : '[Kusasa nga] LT',\n            nextWeek : 'dddd [nga] LT',\n            lastDay : '[Itolo nga] LT',\n            lastWeek : 'dddd [leliphelile] [nga] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'nga %s',\n            past : 'wenteka nga %s',\n            s : 'emizuzwana lomcane',\n            ss : '%d mzuzwana',\n            m : 'umzuzu',\n            mm : '%d emizuzu',\n            h : 'lihora',\n            hh : '%d emahora',\n            d : 'lilanga',\n            dd : '%d emalanga',\n            M : 'inyanga',\n            MM : '%d tinyanga',\n            y : 'umnyaka',\n            yy : '%d iminyaka'\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : '%d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ss;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sv = moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            ss : '%d sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sv;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var sw = moment.defineLocale('sw', {\n        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[leo saa] LT',\n            nextDay : '[kesho saa] LT',\n            nextWeek : '[wiki ijayo] dddd [saat] LT',\n            lastDay : '[jana] LT',\n            lastWeek : '[wiki iliyopita] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s baadaye',\n            past : 'tokea %s',\n            s : 'hivi punde',\n            ss : 'sekunde %d',\n            m : 'dakika moja',\n            mm : 'dakika %d',\n            h : 'saa limoja',\n            hh : 'masaa %d',\n            d : 'siku moja',\n            dd : 'masiku %d',\n            M : 'mwezi mmoja',\n            MM : 'miezi %d',\n            y : 'mwaka mmoja',\n            yy : 'miaka %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return sw;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '௧',\n        '2': '௨',\n        '3': '௩',\n        '4': '௪',\n        '5': '௫',\n        '6': '௬',\n        '7': '௭',\n        '8': '௮',\n        '9': '௯',\n        '0': '௦'\n    }, numberMap = {\n        '௧': '1',\n        '௨': '2',\n        '௩': '3',\n        '௪': '4',\n        '௫': '5',\n        '௬': '6',\n        '௭': '7',\n        '௮': '8',\n        '௯': '9',\n        '௦': '0'\n    };\n\n    var ta = moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, HH:mm',\n            LLLL : 'dddd, D MMMM YYYY, HH:mm'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            ss : '%d விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை';  // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return ta;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var te = moment.defineLocale('te', {\n        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[నేడు] LT',\n            nextDay : '[రేపు] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[నిన్న] LT',\n            lastWeek : '[గత] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s లో',\n            past : '%s క్రితం',\n            s : 'కొన్ని క్షణాలు',\n            ss : '%d సెకన్లు',\n            m : 'ఒక నిమిషం',\n            mm : '%d నిమిషాలు',\n            h : 'ఒక గంట',\n            hh : '%d గంటలు',\n            d : 'ఒక రోజు',\n            dd : '%d రోజులు',\n            M : 'ఒక నెల',\n            MM : '%d నెలలు',\n            y : 'ఒక సంవత్సరం',\n            yy : '%d సంవత్సరాలు'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n        ordinal : '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 6th is the first week of the year.\n        }\n    });\n\n    return te;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tet = moment.defineLocale('tet', {\n        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'iha %s',\n            past : '%s liuba',\n            s : 'minutu balun',\n            ss : 'minutu %d',\n            m : 'minutu ida',\n            mm : 'minutu %d',\n            h : 'oras ida',\n            hh : 'oras %d',\n            d : 'loron ida',\n            dd : 'loron %d',\n            M : 'fulan ida',\n            MM : 'fulan %d',\n            y : 'tinan ida',\n            yy : 'tinan %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tet;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум'\n    };\n\n    var tg = moment.defineLocale('tg', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Имрӯз соати] LT',\n            nextDay : '[Пагоҳ соати] LT',\n            lastDay : '[Дирӯз соати] LT',\n            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'баъди %s',\n            past : '%s пеш',\n            s : 'якчанд сония',\n            m : 'як дақиқа',\n            mm : '%d дақиқа',\n            h : 'як соат',\n            hh : '%d соат',\n            d : 'як рӯз',\n            dd : '%d рӯз',\n            M : 'як моҳ',\n            MM : '%d моҳ',\n            y : 'як сол',\n            yy : '%d сол'\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1th is the first week of the year.\n        }\n    });\n\n    return tg;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var th = moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา H:mm',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            ss : '%d วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n\n    return th;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tlPh = moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY HH:mm',\n            LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            ss : '%d segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlPh;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'leS' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'waQ' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'nem' :\n        time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'Hu’' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'wen' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'ben' :\n        time + ' ret';\n        return time;\n    }\n\n    function translate(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n        }\n        return (word === '') ? 'pagh' : word;\n    }\n\n    var tlh = moment.defineLocale('tlh', {\n        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : translateFuture,\n            past : translatePast,\n            s : 'puS lup',\n            ss : translate,\n            m : 'wa’ tup',\n            mm : translate,\n            h : 'wa’ rep',\n            hh : translate,\n            d : 'wa’ jaj',\n            dd : translate,\n            M : 'wa’ jar',\n            MM : translate,\n            y : 'wa’ DIS',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlh;\n\n})));\n","\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n        6: '\\'ncı',\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    var tr = moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[gelecek] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            ss : '%d saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {  // special case for zero\n                        return number + '\\'ıncı';\n                    }\n                    var a = number % 10,\n                        b = number % 100 - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return tr;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    var tzl = moment.defineLocale('tzl', {\n        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM [dallas] YYYY',\n            LLL : 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM : function (input) {\n            return 'd\\'o' === input.toLowerCase();\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'd\\'o' : 'D\\'O';\n            } else {\n                return isLower ? 'd\\'a' : 'D\\'A';\n            }\n        },\n        calendar : {\n            sameDay : '[oxhi à] LT',\n            nextDay : '[demà à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[ieiri à] LT',\n            lastWeek : '[sür el] dddd [lasteu à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'osprei %s',\n            past : 'ja%s',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['viensas secunds', '\\'iensas secunds'],\n            'ss': [number + ' secunds', '' + number + ' secunds'],\n            'm': ['\\'n míut', '\\'iens míut'],\n            'mm': [number + ' míuts', '' + number + ' míuts'],\n            'h': ['\\'n þora', '\\'iensa þora'],\n            'hh': [number + ' þoras', '' + number + ' þoras'],\n            'd': ['\\'n ziua', '\\'iensa ziua'],\n            'dd': [number + ' ziuas', '' + number + ' ziuas'],\n            'M': ['\\'n mes', '\\'iens mes'],\n            'MM': [number + ' mesen', '' + number + ' mesen'],\n            'y': ['\\'n ar', '\\'iens ar'],\n            'yy': [number + ' ars', '' + number + ' ars']\n        };\n        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n    }\n\n    return tzl;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzmLatn = moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            ss : '%d imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return tzmLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var tzm = moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            ss : '%d ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 12th is the first week of the year.\n        }\n    });\n\n    return tzm;\n\n})));\n","//! moment.js language configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var ugCn = moment.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل'\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ugCn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (m === true) {\n            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return uk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر'\n    ];\n    var days = [\n        'اتوار',\n        'پیر',\n        'منگل',\n        'بدھ',\n        'جمعرات',\n        'جمعہ',\n        'ہفتہ'\n    ];\n\n    var ur = moment.defineLocale('ur', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[آج بوقت] LT',\n            nextDay : '[کل بوقت] LT',\n            nextWeek : 'dddd [بوقت] LT',\n            lastDay : '[گذشتہ روز بوقت] LT',\n            lastWeek : '[گذشتہ] dddd [بوقت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s بعد',\n            past : '%s قبل',\n            s : 'چند سیکنڈ',\n            ss : '%d سیکنڈ',\n            m : 'ایک منٹ',\n            mm : '%d منٹ',\n            h : 'ایک گھنٹہ',\n            hh : '%d گھنٹے',\n            d : 'ایک دن',\n            dd : '%d دن',\n            M : 'ایک ماہ',\n            MM : '%d ماہ',\n            y : 'ایک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ur;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uzLatn = moment.defineLocale('uz-latn', {\n        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bugun soat] LT [da]',\n            nextDay : '[Ertaga] LT [da]',\n            nextWeek : 'dddd [kuni soat] LT [da]',\n            lastDay : '[Kecha soat] LT [da]',\n            lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Yaqin %s ichida',\n            past : 'Bir necha %s oldin',\n            s : 'soniya',\n            ss : '%d soniya',\n            m : 'bir daqiqa',\n            mm : '%d daqiqa',\n            h : 'bir soat',\n            hh : '%d soat',\n            d : 'bir kun',\n            dd : '%d kun',\n            M : 'bir oy',\n            MM : '%d oy',\n            y : 'bir yil',\n            yy : '%d yil'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 7th is the first week of the year.\n        }\n    });\n\n    return uzLatn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var uz = moment.defineLocale('uz', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            ss : '%d фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return uz;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var vi = moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /sa|ch/i,\n        isPM : function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY HH:mm',\n            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            ss : '%d giây' ,\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return vi;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var xPseudo = moment.defineLocale('x-pseudo', {\n        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[T~ódá~ý át] LT',\n            nextDay : '[T~ómó~rró~w át] LT',\n            nextWeek : 'dddd [át] LT',\n            lastDay : '[Ý~ést~érdá~ý át] LT',\n            lastWeek : '[L~ást] dddd [át] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'í~ñ %s',\n            past : '%s á~gó',\n            s : 'á ~féw ~sécó~ñds',\n            ss : '%d s~écóñ~ds',\n            m : 'á ~míñ~úté',\n            mm : '%d m~íñú~tés',\n            h : 'á~ñ hó~úr',\n            hh : '%d h~óúrs',\n            d : 'á ~dáý',\n            dd : '%d d~áýs',\n            M : 'á ~móñ~th',\n            MM : '%d m~óñt~hs',\n            y : 'á ~ýéár',\n            yy : '%d ý~éárs'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return xPseudo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var yo = moment.defineLocale('yo', {\n        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Ònì ni] LT',\n            nextDay : '[Ọ̀la ni] LT',\n            nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n            lastDay : '[Àna ni] LT',\n            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ní %s',\n            past : '%s kọjá',\n            s : 'ìsẹjú aayá die',\n            ss :'aayá %d',\n            m : 'ìsẹjú kan',\n            mm : 'ìsẹjú %d',\n            h : 'wákati kan',\n            hh : 'wákati %d',\n            d : 'ọjọ́ kan',\n            dd : 'ọjọ́ %d',\n            M : 'osù kan',\n            MM : 'osù %d',\n            y : 'ọdún kan',\n            yy : 'ọdún %d'\n        },\n        dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n        ordinal : 'ọjọ́ %d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return yo;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhCn = moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日Ah点mm分',\n            LLLL : 'YYYY年M月D日ddddAh点mm分',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            ss : '%d 秒',\n            m : '1 分钟',\n            mm : '%d 分钟',\n            h : '1 小时',\n            hh : '%d 小时',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 个月',\n            MM : '%d 个月',\n            y : '1 年',\n            yy : '%d 年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return zhCn;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhHk = moment.defineLocale('zh-hk', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhHk;\n\n})));\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    var zhTw = moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天] LT',\n            nextDay : '[明天] LT',\n            nextWeek : '[下]dddd LT',\n            lastDay : '[昨天] LT',\n            lastWeek : '[上]dddd LT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhTw;\n\n})));\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n    import * as bz from '..';\n\n    /** ****************************************************************************************************************\n    *   Represents a debug group whose logging can be enabled or disabled.\n    *******************************************************************************************************************/\n    export class Debug\n    {\n        /** Debugs startup process. */\n        public      static      readonly    acclaim             :Debug              = new Debug( true  );\n        /** Debugs initialization process. */\n        public      static      readonly    init                :Debug              = new Debug( true  );\n        /** Debugs game states. */\n        public      static      readonly    game                :Debug              = new Debug( true  );\n        /** Debugs canvas setup and resizing. */\n        public      static      readonly    canvas              :Debug              = new Debug( false );\n        /** Debugs sound system. */\n        public      static      readonly    sound               :Debug              = new Debug( false );\n        /** Debugs stage system. */\n        public      static      readonly    stage               :Debug              = new Debug( true  );\n        /** Debugs concernings for the 3D product configurator. */\n        public      static      readonly    pc3d                :Debug              = new Debug( false );\n        /** Debugs key system. */\n        public      static      readonly    key                 :Debug              = new Debug( false );\n        /** Debugs pointer system. */\n        public      static      readonly    pointer             :Debug              = new Debug( true  );\n        /** Debugs the game items. */\n        public      static      readonly    item                :Debug              = new Debug( true  );\n        /** Debugs player fire. */\n        public      static      readonly    fire                :Debug              = new Debug( true  );\n        /** Debugs player move, rotate, ducking. */\n        public      static      readonly    player              :Debug              = new Debug( true  );\n        /** Debugs physic calculations. */\n        public      static      readonly    physic              :Debug              = new Debug( false );\n        /** Debugs camera behaviours and journeys. */\n        public      static      readonly    camera              :Debug              = new Debug( true  );\n        /** Debugs Human Body Partitions. */\n        public      static      readonly    hbp                 :Debug              = new Debug( true  );\n\n        /** Flags if logging for this debug group is enabled. */\n        private                 readonly    debugEnabled        :boolean            = false;\n\n        /** ************************************************************************************************************\n        *   Constructs a new debug group.\n        *\n        *   @param debugEnabled Flags if this debug group should log messages.\n        ***************************************************************************************************************/\n        public constructor( debugEnabled:boolean )\n        {\n            this.debugEnabled = debugEnabled;\n        }\n\n        /** ************************************************************************************************************\n        *   Logs a line of output to the default console. Will only generate output\n        *   if the debug for this debug group is enabled.\n        *\n        *   @param msg The message to log to the output console. Defaults to an empty string.\n        ***************************************************************************************************************/\n        public log( msg:string = '' ) : void\n        {\n            if ( bz.SettingDebug.DEBUG_MODE && this.debugEnabled )\n            {\n                /* eslint-disable no-console */\n                console.log( '[' + bz.StringUtil.getDateTimeString() + '] ' + msg );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Logs a line of output to the error console. Will only generate output\n        *   if the debug for this debug group is enabled.\n        *\n        *   @param msg The message to log to the error console. Defaults to an empty string.\n        ***************************************************************************************************************/\n        public err( msg:string = '' ) : void\n        {\n            if ( bz.SettingDebug.DEBUG_MODE && this.debugEnabled )\n            {\n                /* eslint-disable no-console */\n                console.error( '[' + bz.StringUtil.getDateTimeString() + '] ' + msg );\n            }\n        }\n    }\n","\n    require( '../css/global.less' );\n\n    import * as bz from '..';\n\n    /** ****************************************************************************************************************\n    *   The main class containing the point of entry and a single game instance.\n    *\n    *   =====================\n    *   TODO Primal\n    *   =====================\n    *   TODO Introduce ESLint and fix all issues.\n    *   TODO Prune _ASSETS\n    *   TODO Reset Git Repository?\n    *   TODO Check compiled webpack bundle ..\n    *   TODO Change player back from Box to Cylinder?\n    *   TODO Fix gui-font resize bug on resizing the canvas?\n    *\n    *   TODO Implement mouse movements and controls!\n    *   TODO Move key reation to Stage.init analog to PointerSystem?\n    *   TODO Player may not jump in air.\n    *   TODO Enable fullscreen toggle via main menu ..? FullScreenChangeListener and ESC reassignment ..\n    *   TODO Connect Main Menu items to Stages?\n    *\n    *   TODO Try different player objects: physics for car!\n    *   TODO Create external corsshair for player 3rd view (spaceship).\n    *   TODO Try to map a 3d point to a 2d point?\n    *   TODO Fix/Create! exploding models?\n    *   TODO Create 3D space shooting engine.\n    *\n    *   TODO Create 'The Office' - version MVP 1.0.\n    *\n    *   =====================\n    *   TODO Refactorings\n    *   =====================\n    *   TODO Parameter for stage fog/smoke color/enabled?\n    *   TODO Move 'createGUI' to bz.Stage and make it final. Create GUIType enum.\n    *   TODO Remove global references to Main.game: pass Interface getFps and KeySystem to Stage and GUI.\n    *   TODO group values and invocations in Stage to different functions and classes?\n    *   TODO Minimize access to bz.Scene.getNativeScene()\n    *   TODO Suppress errors for missing babylon.manifest files? Check solution in banylonjs 4\n    *\n    *   =====================\n    *   TODO New Stuff\n    *   =====================\n    *   TODO Try reflecting mirrored textures! https://babylonjsguide.github.io/advanced/Reflect\n    *   TODO Try morphing one mesh/model into another (crate to broken crate / chair to broken chair).\n    *   TODO Videos (\"Intro Logo\") with exploding(paused physics and camera movements/animations?\n    *   TODO Try to keep ORIGINAL physic imposter parameters AFTER the compound has been set?!\n    *   TODO Create alternate lower cylinder for player that toggles on ducking?\n    *\n    *   TODO HID: Add slower panning on aiming/zooming with wearpon.\n    *   TODO Also zoom the wearpon in the GUI on zooming with the wearpon. ( anchor 2d img left top )\n    *   TODO Set emissive color for all imported models/materials explicitly? Try model in TestLevel!\n    *\n    *   =====================\n    *   TODO Sounds\n    *   =====================\n    *   TODO Create and test spatial sounds [radio etc.] (shot, bullet hit).\n    *        https://doc.babylonjs.com/how_to/playing_sounds_and_music\n    *   TODO Sounds for shot, bullet hit and bullet drop.\n    *\n    *   =====================\n    *   TODO Issues\n    *   =====================\n    *   TODO deny jumping if player has no contact to the ground! (or simply block re-jump for X ticks!)\n    *   TODO Enable loading of only required resources for the current scene?\n    *   TODO Solution to fix screen shaking on collisions?\n    *   TODO Fix setting the pivot for meshes and objects.\n    *\n    *   =====================\n    *   TODO Wearpons\n    *   =====================\n    *   TODO Enable wearpon system with different wearpons and attributes: magazine size, shoot angles, range, zoom ..\n    *   TODO Enable wearpon items (wearpons and ammo) to be picked up - Create wearpon collection system.\n    *   TODO Create wearpons with projectiles (exploding or non-exploding)..\n    *   TODO Create explosive wearpons etc.\n    *\n    *   =====================\n    *   TODO Fx\n    *   =====================\n    *   TODO Add physically correct bullet drop out after fire.\n    *   TODO Try particle system (fx, non-physicsl) for bullet holes' wall rubble.\n    *   TODO Particle FX (physical) for wall rubble!\n    *   TODO Quick fire animation in bullet hole (for certain materials..)?\n    *   TODO Add explosion sprites.\n    *   TODO Create 3d gun as 2nd scene in front?\n    *   TODO Add muzzle flash to gun on firing.\n    *\n    *   =====================\n    *   TODO Complete MVP Tech-Demo 'Office '92', 1st minor, still life etc.\n    *   =====================\n    *   TODO Create realistic models, lights and spacial sounds.\n    *   TODO Update babylon.js and all other npm packages.\n    *\n    *   =====================\n    *   TODO Characters\n    *   =====================\n    *   TODO Create (different?) characters from primitives or mesh objects??\n    *   TODO Create class Character, the abstract class of Player and Bot.\n    *   TODO Checkout babylon.JS bones and skeletons?\n    *   TODO Check cannonJs examples ? (human.js .. bones etc.)\n    *   TODO Create class Bot that represents an enemy with one field for attitude.\n    *\n    *   =====================\n    *   TODO Human Body Partitions\n    *   =====================\n    *   TODO Control for camera rotation?\n    *   TODO Limit camera (y axis) (alpha).\n    *   TODO Fade Body Part Description in and out.\n    *   TODO Improve color effect.\n    *   TODO Change model.\n    *\n    *   =====================\n    *   TODO The Lab\n    *   =====================\n    *   TODO Try soft bodies.\n    *   TODO Try babylon 101 scenes.\n    *   TODO Try height maps ('mountain grounds')\n    *   TODO Try 'worker thread collisions'? seems obsolete.\n    *   TODO Try fur.\n    *   TODO Try Impossible?: Show a video texture in the GUI.\n    *   TODO Try 3D GUI again? ( requires babylon.JS 3.3 )?\n    *   TODO Try water effects?\n    *   TODO Try 'gamelets' in the babylon.JS docs.\n    *   TODO Try 360 Photodome? http://doc.babylonjs.com/how_to/360photodome\n    *   TODO Try more babylon.JS tutorials and gamelets, features and playgrounds for gathering new features.\n    *******************************************************************************************************************/\n    export class Main\n    {\n        /** The singleton instance of the game. */\n        public      static          game                    :bz.Game                    = null;\n\n        /** ************************************************************************************************************\n        *   This method is invoked when the application starts.\n        ***************************************************************************************************************/\n        public static main() : void\n        {\n            bz.HtmlUtil.setTitle(   bz.SettingEngine.BRANDING.getTitle()   );\n            bz.HtmlUtil.setFavicon( bz.SettingEngine.BRANDING.getFavicon() );\n\n            Main.acclaim();\n\n            Main.game = new bz.Game();\n            Main.game.init();\n        }\n\n        /** ************************************************************************************************************\n        *   Acclaims the debug console.\n        ***************************************************************************************************************/\n        private static acclaim() : void\n        {\n            bz.Debug.acclaim.log( bz.SettingEngine.BRANDING.getTitle()  );\n            bz.Debug.acclaim.log( bz.Version.getCurrent() );\n            bz.Debug.acclaim.log();\n        }\n    }\n","\n    /* eslint-disable max-len */\n\n    /** ****************************************************************************************************************\n    *   Contains the project history with all current and completed version information.\n    *******************************************************************************************************************/\n    export class Version\n    {\n        /** The project's version v.0.0.1. */\n        private     static  readonly    V_0_0_1                 :Version            = new Version( '0.0.1',  'BABYLON ZERO',             '17.04.2018, 09:42:16 GMT+1' );\n        /** The project's version v.0.0.2. */\n        private     static  readonly    V_0_0_2                 :Version            = new Version( '0.0.2',  'BABYLON.JS TAKE OFF',      '18.05.2018, 07:10:41 GMT+1' );\n        /** The project's version v.0.0.3. */\n        private     static  readonly    V_0_0_3                 :Version            = new Version( '0.0.3',  'BABYLON.JS DEEP DIVE',     '10.06.2018, 00:42:10 GMT+1' );\n        /** The project's version v.0.0.4. */\n        private     static  readonly    V_0_0_4                 :Version            = new Version( '0.0.4',  '3D PRODUCT CONFIGURATOR',  '15.06.2018, 10:55:12 GMT+1' );\n        /** The project's version v.0.0.5. */\n        private     static  readonly    V_0_0_5                 :Version            = new Version( '0.0.5',  'CREATIVITY UNLEASHED',     '29.06.2018, 09:37:52 GMT+1' );\n        /** The project's version v.0.0.6. */\n        private     static  readonly    V_0_0_6                 :Version            = new Version( '0.0.6',  'TWISTED DREAMS',           '04.07.2018, 07:10:11 GMT+1' );\n        /** The project's version v.0.0.7. */\n        private     static  readonly    V_0_0_7                 :Version            = new Version( '0.0.7',  'ROCK AND ROLL',            '25.07.2018, 06:39:41 GMT+1' );\n        /** The project's version v.0.0.8. */\n        private     static  readonly    V_0_0_8                 :Version            = new Version( '0.0.8',  'HUMAN BODY PARTITIONS',    '24.11.2018, 14:15:12 GMT+1' );\n        /** The project's version v.0.0.9. */\n        private     static  readonly    V_0_0_9                 :Version            = new Version( '0.0.9',  'BABYLON.JS 4.0',           '25.05.2019, 18:22:41 GMT+1' );\n        /** The project's version v.0.0.10. */\n        private     static  readonly    V_0_0_10                :Version            = new Version( '0.0.10', 'NEXT LEVEL',               '17.05.2020, 12:05:12 GMT+1' );\n\n        /** The project's current version. */\n        private     static  readonly    CURRENT_VERSION         :Version            = Version.V_0_0_10;\n\n        /** This version's specifier. */\n        private             readonly    version                 :string             = null;\n        /** This version's internal codename. */\n        private             readonly    codename                :string             = null;\n        /** This version's completion date. */\n        private             readonly    date                    :string             = null;\n\n        /** ************************************************************************************************************\n        *   Creates a project version.\n        *\n        *   @param version      The version specifier.\n        *   @param codename     The internal codename.\n        *   @param date         The completion date.\n        ***************************************************************************************************************/\n        private constructor( version:string, codename:string, date:string )\n        {\n            this.version  = version;\n            this.codename = codename;\n            this.date     = date;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a representation of the current project version and it's date.\n        *\n        *   @return A representation of the current project's version with it's timestamp.\n        ***************************************************************************************************************/\n        public static getCurrent() : string\n        {\n            return ( 'v. ' + Version.CURRENT_VERSION.version + ' ' + Version.CURRENT_VERSION.codename );\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   The abstract superclass for all branding confgurations.\n    *******************************************************************************************************************/\n    export abstract class Branding\n    {\n        /** ************************************************************************************************************\n        *   Returns the HTML page title.\n        *\n        *   @return The HTML page title.\n        ***************************************************************************************************************/\n        public abstract getTitle() : string;\n\n        /** ************************************************************************************************************\n        *   Returns the loading screen logo.\n        *\n        *   @return The logo for the loading screen.\n        ***************************************************************************************************************/\n        public abstract getLoadingLogo() : string;\n\n        /** ************************************************************************************************************\n        *   Returns the favicon.\n        *\n        *   @return The path to the favicon.\n        ***************************************************************************************************************/\n        public abstract getFavicon() : string;\n\n        /** ************************************************************************************************************\n        *   Returns the primal css color value.\n        *\n        *   @return The primal css color value.\n        ***************************************************************************************************************/\n        public abstract getPrimalColorCss() : string;\n\n        /** ************************************************************************************************************\n        *   Returns the primal RGB color value.\n        *\n        *   @return The primal RGB color value.\n        ***************************************************************************************************************/\n        public abstract getPrimalColorRgb() : BABYLON.Color3;\n\n        /** ************************************************************************************************************\n        *   Returns the path to the HBP GUI logo.\n        *\n        *   @return The relative path to the HBP GUI logo.\n        ***************************************************************************************************************/\n        public abstract getHbpGuiLogo() : string;\n\n        /** ************************************************************************************************************\n        *   Returns the path to the PC GUI logo.\n        *\n        *   @return The relative path to the PC GUI logo.\n        ***************************************************************************************************************/\n        public abstract getPcGuiLogo() : string;\n    }\n","\n    import * as bz      from '../..';\n\n    /** ****************************************************************************************************************\n    *   The branding class for 'Computy' branding.\n    *******************************************************************************************************************/\n    export class BrandingComputy extends bz.Branding\n    {\n        /** ************************************************************************************************************\n        *   Returns the HTML page title.\n        *\n        *   @return The HTML page title.\n        ***************************************************************************************************************/\n        public getTitle() : string\n        {\n            return 'Human Body Partitions, (c) 2018 Computy GmbH';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the loading screen logo.\n        *\n        *   @return The logo for the loading screen.\n        ***************************************************************************************************************/\n        public getLoadingLogo() : string\n        {\n            return 'loadingComp.png';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the favicon.\n        *\n        *   @return The path to the favicon.\n        ***************************************************************************************************************/\n        public getFavicon() : string\n        {\n            return bz.SettingResource.PATH_IMAGE_FAVICON + 'computy.ico';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the primal css color value.\n        *\n        *   @return The primal css color value.\n        ***************************************************************************************************************/\n        public getPrimalColorCss() : string\n        {\n            return bz.SettingColor.COLOR_CSS_COMPUTY_GREEN_OPAQUE;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the primal RGB color value.\n        *\n        *   @return The primal RGB color value.\n        ***************************************************************************************************************/\n        public getPrimalColorRgb() : BABYLON.Color3\n        {\n            return bz.SettingColor.COLOR_RGB_COMPUTY_GREEN;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the path to the HBP GUI logo.\n        *\n        *   @return The relative path to the HBP GUI logo.\n        ***************************************************************************************************************/\n        public getHbpGuiLogo() : string\n        {\n            return 'hbp/compLogo.png';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the path to the PC GUI logo.\n        *\n        *   @return The relative path to the PC GUI logo.\n        ***************************************************************************************************************/\n        public getPcGuiLogo() : string\n        {\n            return 'pc3d/compLogo.png';\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   The branding class for 'Mayflower' branding.\n    *******************************************************************************************************************/\n    export class BrandingMayflower extends bz.Branding\n    {\n        /** ************************************************************************************************************\n        *   Returns the HTML page title.\n        *\n        *   @return The HTML page title.\n        ***************************************************************************************************************/\n        public getTitle() : string\n        {\n            return 'babylon-zero, (c) 2019 Mayflower GmbH';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the loading screen logo.\n        *\n        *   @return The logo for the loading screen.\n        ***************************************************************************************************************/\n        public getLoadingLogo() : string\n        {\n            return 'loadingMf.png';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the favicon.\n        *\n        *   @return The path to the favicon.\n        ***************************************************************************************************************/\n        public getFavicon() : string\n        {\n            return bz.SettingResource.PATH_IMAGE_FAVICON + 'mayflower.ico';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the primal css color value.\n        *\n        *   @return The primal css color value.\n        ***************************************************************************************************************/\n        public getPrimalColorCss() : string\n        {\n            return bz.SettingColor.COLOR_CSS_MAYFLOWER_ORANGE_OPAQUE;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the primal RGB color value.\n        *\n        *   @return The primal RGB color value.\n        ***************************************************************************************************************/\n        public getPrimalColorRgb() : BABYLON.Color3\n        {\n            return bz.SettingColor.COLOR_RGB_MAYFLOWER_ORANGE;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the path to the HBP GUI logo.\n        *\n        *   @return The relative path to the HBP GUI logo.\n        ***************************************************************************************************************/\n        public getHbpGuiLogo() : string\n        {\n            return 'hbp/mfLogo.png';\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the path to the PC GUI logo.\n        *\n        *   @return The relative path to the PC GUI logo.\n        ***************************************************************************************************************/\n        public getPcGuiLogo() : string\n        {\n            return 'pc3d/mfLogo.png';\n        }\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bjs from 'babylonjs'\n\n    /** ****************************************************************************************************************\n    *   Specifies all colors the application makes use of.\n    *******************************************************************************************************************/\n    export class SettingColor\n    {\n        /** The CSS color 'transparent'. */\n        public  static  readonly    COLOR_CSS_TRANSPARENT                       :string             = 'rgba( 0,   0,   0,   0.0 )';\n        /** The CSS color 'white' with full opacity. */\n        public  static  readonly    COLOR_CSS_WHITE_OPAQUE                      :string             = 'rgba( 255, 255, 255, 1.0 )';\n        /** The CSS color 'red' with full opacity. */\n        public  static  readonly    COLOR_CSS_RED_OPAQUE                        :string             = 'rgba( 255, 0,   0,   1.0 )';\n        /** The CSS color 'black' with full opacity. */\n        public  static  readonly    COLOR_CSS_BLACK_OPAQUE                      :string             = 'rgba( 0,   0,   0,   1.0 )';\n        /** The CSS color 'mayflower orange' with full opacity. */\n        public  static  readonly    COLOR_CSS_MAYFLOWER_ORANGE_OPAQUE           :string             = 'rgba( 237, 115, 4,   1.0 )';\n        /** The CSS color 'computy green' with full opacity. */\n        public  static  readonly    COLOR_CSS_COMPUTY_GREEN_OPAQUE              :string             = 'rgba( 148, 194, 61,  1.0 )';\n        /** The CSS color 'computy gray' with full opacity. */\n        public  static  readonly    COLOR_CSS_COMPUTY_GRAY_OPAQUE               :string             = 'rgba( 121, 120, 119, 1.0 )';\n\n        /** The RGB color 'white' without alpha information. */\n        public  static  readonly    COLOR_RGB_WHITE                             :BABYLON.Color3     = new bjs.Color3( 1.0, 1.0, 1.0 );\n        /** The RGB color 'grey 0.75' without alpha information. */\n        public  static  readonly    COLOR_RGB_GREY_THREE_QUARTERS               :BABYLON.Color3     = new BABYLON.Color3( 0.75, 0.75, 0.75 );\n        /** The RGB color 'grey 0.5' without alpha information. */\n        public  static  readonly    COLOR_RGB_GREY_HALF                         :BABYLON.Color3     = new BABYLON.Color3( 0.5, 0.5, 0.5 );\n        /** The RGB color 'grey 0.25' without alpha information. */\n        public  static  readonly    COLOR_RGB_GREY_QUARTER                      :BABYLON.Color3     = new BABYLON.Color3( 0.25, 0.25, 0.25 );\n        /** The RGB color 'red' without alpha information. */\n        public  static  readonly    COLOR_RGB_RED                               :BABYLON.Color3     = new BABYLON.Color3( 1.0, 0.0, 0.0 );\n        /** The RGB color 'green' without alpha information. */\n        public  static  readonly    COLOR_RGB_GREEN                             :BABYLON.Color3     = new BABYLON.Color3( 0.0, 1.0, 0.0 );\n        /** The RGB color 'blue' without alpha information. */\n        public  static  readonly    COLOR_RGB_BLUE                              :BABYLON.Color3     = new BABYLON.Color3( 0.0, 0.0, 1.0 );\n        /** The RGB color 'yellow' without alpha information. */\n        public  static  readonly    COLOR_RGB_YELLOW                            :BABYLON.Color3     = new BABYLON.Color3( 1.0, 1.0, 0.0 );\n        /** The RGB color 'orange' without alpha information. */\n        public  static  readonly    COLOR_RGB_ORANGE                            :BABYLON.Color3     = new BABYLON.Color3( 1.0, 0.5, 0.0 );\n        /** The RGB color 'black' without alpha information. */\n        public  static  readonly    COLOR_RGB_BLACK                             :BABYLON.Color3     = new BABYLON.Color3( 0.0, 0.0, 0.0 );\n        /** The RGB color 'computy green' without alpha information. */\n        public  static  readonly    COLOR_RGB_COMPUTY_GREEN                     :BABYLON.Color3     = new BABYLON.Color3( 0.58, 0.76, 0.23 );\n        /** The RGB color 'mayflower orange' without alpha information. */\n        public  static  readonly    COLOR_RGB_MAYFLOWER_ORANGE                  :BABYLON.Color3     = new BABYLON.Color3( 0.92, 0.45, 0.01 );\n\n        /** The RGBA color 'transparent'. */\n        public  static  readonly    COLOR_RGBA_TRANSPARENT                      :BABYLON.Color4     = new BABYLON.Color4( 0.0, 0.0, 0.0, 0.0 );\n        /** The RGBA color 'dark grey' with full opacity. */\n        public  static  readonly    COLOR_RGBA_DARK_GREY_OPAQUE                 :BABYLON.Color4     = new BABYLON.Color4( 0.33, 0.33, 0.33, 1.0 );\n        /** The RGBA color 'mayflower orange' with full opacity. */\n        public  static  readonly    COLOR_RGBA_ORANGE_MAYFLOWER_OPAQUE          :BABYLON.Color4     = new BABYLON.Color4( 0.92, 0.45, 0.01, 1.0 );\n        /** The RGBA color 'black' with full opacity. */\n        public  static  readonly    COLOR_RGBA_BLACK_OPAQUE                     :BABYLON.Color4     = new BABYLON.Color4( 0.0, 0.0, 0.0, 1.0 );\n        /** The RGBA color 'red' with full opacity. */\n        public  static  readonly    COLOR_RGBA_RED_OPAQUE                       :BABYLON.Color4     = new BABYLON.Color4( 1.0, 0.0, 0.0, 1.0 );\n        /** The RGBA color 'green' with full opacity. */\n        public  static  readonly    COLOR_RGBA_GREEN_OPAQUE                     :BABYLON.Color4     = new BABYLON.Color4( 0.0, 1.0, 0.0, 1.0 );\n        /** The RGBA color 'blue' with full opacity. */\n        public  static  readonly    COLOR_RGBA_BLUE_OPAQUE                      :BABYLON.Color4     = new BABYLON.Color4( 0.0, 0.0, 1.0, 1.0 );\n        /** The RGBA color 'yellow' with full opacity. */\n        public  static  readonly    COLOR_RGBA_YELLOW_OPAQUE                    :BABYLON.Color4     = new BABYLON.Color4( 1.0, 1.0, 0.0, 1.0 );\n        /** The RGBA color 'white' with full opacity. */\n        public  static  readonly    COLOR_RGBA_WHITE_OPAQUE                     :BABYLON.Color4     = new BABYLON.Color4( 1.0, 1.0, 1.0, 1.0 );\n    }\n","\n    /* eslint-disable max-len */\n\n    /** ****************************************************************************************************************\n    *   Specifies all debug adjustments for the application.\n    *******************************************************************************************************************/\n    export class SettingDebug\n    {\n        /** The global switch for the debug mode. */\n        public  static  readonly    DEBUG_MODE                              :boolean            = true;\n\n        /** Show FPS counter. */\n        public  static  readonly    SHOW_FPS                                :boolean            = ( true && SettingDebug.DEBUG_MODE );\n\n        /** Disables all sounds. */\n        public  static  readonly    DISABLE_SOUND                           :boolean            = true;\n        /** Enabled menu debug keys for switching camera and stages. */\n        public  static  readonly    ENABLE_DEBUG_KEYS                       :boolean            = ( true  && SettingDebug.DEBUG_MODE );\n\n        /** The ellipsoid for the free debug camera (only when collisions are active). */\n        public  static  readonly    DEBUG_CAMERA_ELLIPSOID                  :BABYLON.Vector3    = new BABYLON.Vector3( 2.0, 2.0, 2.0 );\n        /** Enabled collisions for the free debug camera. */\n        public  static  readonly    DEBUG_CAMERA_ENABLE_COLLISIONS          :boolean            = ( false && SettingDebug.DEBUG_MODE );\n\n        /** Show the bounding boxes for all meshes. */\n        public  static  readonly    SHOW_MESH_BOUNDING_BOXES                :boolean            = ( false && SettingDebug.DEBUG_MODE );\n        /** Show the babylon.JS scene debug panel. */\n        public  static  readonly    SHOW_SCENE_DEBUG_PANEL                  :boolean            = ( false && SettingDebug.DEBUG_MODE );\n        /** Show the shot debug lines. */\n        public  static  readonly    SHOW_SHOT_LINES_AND_COLLISIONS          :boolean            = ( false && SettingDebug.DEBUG_MODE );\n        /** Show the shot debug bullet holes. */\n        public  static  readonly    SHOW_DEBUG_BULLET_HOLES                 :boolean            = ( false && SettingDebug.DEBUG_MODE );\n        /** Show the shot debug bullet hole normal line. */\n        public  static  readonly    SHOW_DEBUG_BULLET_HOLE_NORMAL           :boolean            = ( true  && SettingDebug.DEBUG_MODE );\n\n        /** Show the world coordinate axis. */\n        public  static  readonly    DEBUG_COORDINATE_AXIS_ENABLED           :boolean            = ( true && SettingDebug.DEBUG_MODE );\n        /** The length of the world coordinate axis. */\n        public  static  readonly    DEBUG_COORDINATE_AXIS_LENGTH            :number             = 25.0;\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies all settings for the engine.\n    *******************************************************************************************************************/\n    export class SettingEngine\n    {\n        /** The branding. */\n        public  static  readonly    BRANDING                                :bz.Branding        = new bz.BrandingMayflower();\n\n        /** The minimum canvas width. */\n        public  static  readonly    CANVAS_MIN_WIDTH                        :number             = 800;\n        /** The minimum canvas height. */\n        public  static  readonly    CANVAS_MIN_HEIGHT                       :number             = 600;\n\n        /** Follow camera height offset. */\n        public  static  readonly    CAMERA_FOLLOW_HEIGHT_OFFSET             :number             = 0.0; // 6.0;\n        /** How far from the object to follow. */\n        public  static  readonly    CAMERA_FOLLOW_RADIUS                    :number             = 15.0;\n        /** Offset rotation (for front following etc.). */\n        public  static  readonly    CAMERA_FOLLOW_ROTATION_OFFSET           :number             = 180.0;\n        /** Camera acceleration after target change. defaults to 0.05 */\n        public  static  readonly    CAMERA_FOLLOW_ACCELERATION_SPEED        :number             = 0.03;\n        /** Max camera moving speed. defaults to 20. */\n        public  static  readonly    CAMERA_FOLLOW_MAX_SPEED                 :number             = 10.0;\n        /** The default speed for camera animations. */\n        public  static  readonly    CAMERA_ANIMATION_FRAMES_PER_SECOND      :number             = 50;\n\n        /** Specifies if shadow rendering shall be enabled. */\n        public  static  readonly    ENABLE_SHADOWS                          :boolean            = true;\n\n        /** Specifies if the custom loading screen shall be used. */\n        public  static  readonly    CUSTOM_LOADING_SCREEN                   :boolean            = true;\n\n        /** The multiplier from the hit damage to the physical impact force to apply. */\n        public  static  readonly    DAMAGE_IMPULSE_MULTIPLIER               :number             = 10;\n\n        /** The delay between each sprite animation frame change in ms. */\n        public  static  readonly    SPRITE_FRAME_DELAY                      :number             = 100;\n\n        // TODO extract physics to SettingPhysics\n\n        /** The physics engine iteration count per render cycle. */\n        public  static  readonly    PHYSICS_ENGINE_ITERATIONS               :number             = 5;       // 5000 = no shaking\n        /** The diameter of the collison epsilon used for all collision detections. */\n        public  static  readonly    PHYSICS_COLLISION_EPSILON_SIZE          :number             = 500.0;    // no effect?\n        /** The calculating time step amount for one tick of the physical engine. */\n        public  static  readonly    PHYSICS_TIME_STEP_DEFAULT               :number             = ( 1 / 60 );\n        /** The calculating time step amount for one paused tick of the physical engine. 0 is not working! */\n        // TODO try 0 again ??\n        public  static  readonly    PHYSICS_TIME_STEP_PAUSED                :number             = 0.00000000000000000000000000000000000001;\n\n        /** Maximum instances of concurrent sprites. */\n        public  static  readonly    MAX_SPRITE_INSTANCES                    :number             = 255;\n        /** Maximum instances of bullet holes in one stage. */\n        public  static  readonly    MAX_BULLET_HOLES                        :number             = 255;\n\n        /** The default field of view of the 1st person camera. */\n        public  static  readonly    DEFAULT_FIELD_OF_VIEW                   :number             = 1.0;\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all adjustments and balancings for the Graohical User Interface.\n    *******************************************************************************************************************/\n    export class SettingGUI\n    {\n        /** The number of ticks for a GUI message to be displayed. */\n        public      static  readonly        GUI_MESSAGE_LIFETIME                :number         = 100;\n        /** The number of ticks of a GUI message's lifetime to fade out. */\n        public      static  readonly        GUI_MESSAGE_FADE_OUT_TICKS          :number         = 5;\n        /** The offset Y between message lines. */\n        public      static  readonly        GUI_MESSAGE_LINES_DISTANCE_Y        :number         = 7;\n\n        /** The number of ticks for a GUI effect to be displayed. */\n        public      static  readonly        GUI_FX_LIFETIME                     :number         = 30;\n        /** The initial alpha value for GUI effects. */\n        public      static  readonly        GUI_FX_INITIAL_ALPHA                :number         = 0.8;\n\n        /** The width of the horizontal border for all GUI elements. */\n        public      static  readonly        GUI_BORDER_X                        :number         = 50.0;\n        /** The height of the horizontal border for all GUI elements. */\n        public      static  readonly        GUI_BORDER_Y                        :number         = 50.0;\n\n        /** The default font size for GUI texts. */\n        public      static  readonly        GUI_FONT_SIZE_DEFAULT               :number         = 20.0;\n\n        /** The medium font size for GUI texts. */\n        public      static  readonly        GUI_FONT_SIZE_MEDIUM                :number         = 15.0;\n\n        /** If navigation through pause menu items is wrapped before first and after last item. */\n        public      static  readonly        WRAP_PAUSE_MENU_ITEMS               :boolean        = true;\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all adjustments and balancings for the human player.\n    *******************************************************************************************************************/\n    export class SettingPlayerHuman\n    {\n        /** The player's diameter on the XZ axis. */\n        public  static  readonly    DIAMETER_BODY_XZ                        :number             = 3.0;\n        /** The player's head diameter on all axis. */\n        public  static  readonly    DIAMETER_HEAD                           :number             = 1.0;\n\n        /** The player's height on the Y axis. */\n        public  static  readonly    HEIGHT_Y_STANDING                       :number             = 4.0;\n        /** The player's height on ducking. */\n        public  static  readonly    HEIGHT_Y_DUCKED                         :number             = 2.0;\n\n        /** The player's physical mass. */\n        public  static  readonly    MASS                                    :number             = 50.0;\n\n        /** The player's physical force downscale multiplier for horizontal movements. */\n        public  static  readonly    MOVE_VELOCITY_MULTIPLIER                :number             = 0.5;\n        /** The player's physical force upscale multiplier descending. */\n        public  static  readonly    FALLING_VELOCITY_MULTIPLIER             :number             = 1.05;\n        /** The player's physical force ascend impulse for jumping. */\n        public  static  readonly    JUMP_ASCEND_IMPULSE_Y                   :number             = 300.0;\n\n        /** The player's physical force horizontal impulse for moving. */\n        public  static  readonly    MOVE_IMPULSE                            :number             = 300.0;\n        /** The player's physical force horizontal impulse for running. */\n        public  static  readonly    RUN_IMPULSE                             :number             = 450.0;\n        /** The player's physical force horizontal impulse for straving. */\n        public  static  readonly    SPEED_STRAVE                            :number             = 325.0;\n        /** The player's physical velocity y that determines falling. */\n        public  static  readonly    FALLING_VELOCITY_Y                      :number             = -1.0;\n\n        /** The player's turning speed in degrees per tick. */\n        public  static  readonly    SPEED_TURN                              :number             = 2.5;\n        /** The player's looking up/down speed in degrees per tick. */\n        public  static  readonly    SPEED_LOOK_UP_DOWN                      :number             = 2.0;\n        /** The player's speed for rapidly centering the up/down view aim in degrees per tick. */\n        public  static  readonly    SPEED_CENTER_LOOK_UP_DOWN               :number             = 1.0;\n        /** The player's speed for ducking in world coordinates per tick. */\n        public  static  readonly    SPEED_DUCKING                           :number             = 0.4;\n        /** The player's speed for standing up in world coordinates per tick. */\n        public  static  readonly    SPEED_STANDING_UP                       :number             = 0.25;\n\n        /** Enable player head shaking. */\n        public  static  readonly    HEAD_SHAKING_ENABLED                    :boolean            = true;\n        /** The player's head shaking velocity multiplier. */\n        public  static  readonly    HEAD_SHAKING_VELOCITY_MULTIPLIER        :number             = 0.04;\n        /** The player's head shaking range Y. */\n        public  static  readonly    HEAD_SHAKING_RANGE_Y                    :number             = 0.1;\n\n        /** The player's maximum looking up/down in degrees. */\n        public  static  readonly    MAX_LOOK_UP_DOWN                        :number             = 60.0;\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all adjustments and balancings for the spaceship player.\n    *******************************************************************************************************************/\n    export class SettingPlayerSpaceship\n    {\n        /** The player's default speed without explicit controls. */\n        public  static  readonly    SPEED_DEFAULT                           :number             = 0.1;\n\n        /** The player's physical force horizontal impulse for straving. */\n        public  static  readonly    SPEED_STRAVE                            :number             = 0.3;\n\n        /** The player's physical force vertical impulse for straving. */\n        public  static  readonly    SPEED_RAISE                             :number             = 0.3;\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all settings for any file and memory resources the application imports.\n    *******************************************************************************************************************/\n    export class SettingResource\n    {\n        /** Relative path from index.html where all loading images reside. */\n        public  static  readonly    PATH_IMAGE_LOADING                      :string             = 'res/image/loading/';\n        /** Relative path from index.html where all sprite images reside. */\n        public  static  readonly    PATH_IMAGE_SPRITE                       :string             = 'res/image/sprite/';\n        /** Relative path from index.html where all skybox images reside. */\n        public  static  readonly    PATH_IMAGE_SKYBOX                       :string             = 'res/image/skybox/';\n        /** Relative path from index.html where all GUI images reside. */\n        public  static  readonly    PATH_IMAGE_GUI                          :string             = 'res/image/gui/';\n        /** Relative path from index.html where all favicons reside. */\n        public  static  readonly    PATH_IMAGE_FAVICON                      :string             = 'res/image/favicon/';\n\n        /** Relative path from index.html where all effect sounds reside. */\n        public  static  readonly    PATH_SOUND_FX                           :string             = 'res/sound/fx/';\n        /** Relative path from index.html where all background sounds reside. */\n        public  static  readonly    PATH_SOUND_BG                           :string             = 'res/sound/bg/';\n\n        /** Relative path from index.html where all 3d models reside. */\n        public  static  readonly    PATH_MODEL                              :string             = 'res/model/';\n\n        /** Relative path from index.html where all texture images reside. */\n        public  static  readonly    PATH_IMAGE_TEXTURE                      :string             = 'res/image/texture/';\n        /** Relative path from index.html where all video textures reside. */\n        public  static  readonly    PATH_VIDEO_TEXTURE                      :string             = 'res/video/texture/';\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bz from '../../index';\n\n    /** ****************************************************************************************************************\n    *   Specifies all global settings for the stages.\n    *******************************************************************************************************************/\n    export class SettingStage\n    {\n        /** The stage the application starts up with. */\n        public  static  readonly    STAGE_STARTUP                           :bz.StageId         = bz.StageId.TEST_LEVEL;\n\n        /** The global scene gravity. */\n        public  static  readonly    STAGE_GRAVITY_GLOBAL                    :BABYLON.Vector3    = new BABYLON.Vector3( 0, -7.5, 0 );\n    }\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/less-loader/dist/cjs.js??ref--7-2!./global.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/less-loader/dist/cjs.js??ref--7-2!./global.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js??ref--7-1!../../../../../../node_modules/less-loader/dist/cjs.js??ref--7-2!./global.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\n    /* eslint-disable max-len */\n\n    /** ****************************************************************************************************************\n    *   Specifies the filenames of all model files to import.\n    *******************************************************************************************************************/\n    export abstract class ModelFile\n    {\n        /** The model 'office chair'. */\n        public      static  readonly    OFFICE_CHAIR_1          :string                 = 'furniture/officeChair1.babylon';\n        /** The model 'office chair 2'. */\n        public      static  readonly    OFFICE_CHAIR_2          :string                 = 'furniture/officeChair2.babylon';\n        /** The model 'office chair 3'. */\n        public      static  readonly    OFFICE_CHAIR_3          :string                 = 'furniture/officeChair3.babylon';\n        /** The model 'office chair'. */\n        public      static  readonly    SHELVES                 :string                 = 'furniture/shelves.babylon';\n        /** The model 'sphere 1'. */\n        public      static  readonly    SPHERE_1                :string                 = 'furniture/sphere1.babylon';\n        /** The model 'double sphere 1'. */\n        public      static  readonly    DOUBLE_SPHERE_1         :string                 = 'furniture/doubleSphere1.babylon';\n        /** The model 'crate'. */\n        public      static  readonly    CRATE                   :string                 = 'furniture/crate1.babylon';\n\n        /** The model 'shells'. */\n        public      static  readonly    SHELLS                  :string                 = 'item/shells.babylon';\n\n        /** The model 'Mayflower Logo'. */\n        public      static  readonly    MF_LOGO                 :string                 = 'presentation/mfLogo.babylon';\n        /** The model 'motorcycle helmet'. */\n        public      static  readonly    MOTORCYCLE_HELMET       :string                 = 'presentation/motorcycleHelmet.babylon';\n        /** The model 'human body'. */\n        public      static  readonly    HUMAN_BODY              :string                 = 'presentation/man1.babylon';\n\n        /** All filenames for all meshes. */\n        public      static  readonly    ALL_MESH_FILES          :string[]               =\n        [\n            ModelFile.OFFICE_CHAIR_1,\n            ModelFile.OFFICE_CHAIR_2,\n            ModelFile.OFFICE_CHAIR_3,\n            ModelFile.SHELVES,\n            ModelFile.SPHERE_1,\n            ModelFile.DOUBLE_SPHERE_1,\n            ModelFile.CRATE,\n\n            ModelFile.SHELLS,\n\n            ModelFile.MF_LOGO,\n            ModelFile.MOTORCYCLE_HELMET,\n            ModelFile.HUMAN_BODY,\n        ];\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all skyboxes that can be used by stages.\n    *******************************************************************************************************************/\n    export enum SkyBoxFile\n    {\n        /** The skybox 'blue sky'. */\n        BLUE_SKY                        = 'blueSky',\n        /** The skybox 'dark sky'. */\n        DARK_SKY                        = 'darkSky',\n        /** The skybox 'dining room'. */\n        DINING_ROOM                     = 'diningRoom',\n        /** The skybox 'harbour'. */\n        HARBOUR                         = 'harbour',\n        /** The skybox 'outside'. */\n        OUTSIDE                         = 'outside',\n        /** The skybox 'storm'. */\n        STORM                           = 'storm',\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bz from '..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the filenames of all sounds to load.\n    *******************************************************************************************************************/\n    export abstract class SoundFile\n    {\n        /** The fx sound 'test 1'. */\n        public      static  readonly    TEST_FX_1                               :string     = bz.SettingResource.PATH_SOUND_FX + 'test1.mp3';\n        /** The bg sound 'test 1'. */\n        public      static  readonly    TEST_BG_1                               :string     = bz.SettingResource.PATH_SOUND_BG + 'test1.mp3';\n        /** The bg sound 'Stone Age - The golden valley'. */\n        public      static  readonly    TEST_BG_STONE_AGE_THE_GOLDEN_VALLEY     :string     = bz.SettingResource.PATH_SOUND_BG + 'stoneAgeTheGoldenValley.mp3';\n\n        /** All filenames of all sounds to load. */\n        public      static  readonly    ALL_SOUND_FILES                         :string[]   =\n        [\n            SoundFile.TEST_FX_1,\n            SoundFile.TEST_BG_1,\n            SoundFile.TEST_BG_STONE_AGE_THE_GOLDEN_VALLEY,\n        ];\n    }\n","\n    /* eslint-disable max-len */\n\n    /** ****************************************************************************************************************\n    *   Specifies all sprite files to load with their according frame size information.\n    *******************************************************************************************************************/\n    export class SpriteFile\n    {\n        /** The sprite 'tree'. */\n        public      static  readonly    TREE                    :SpriteFile             = new SpriteFile( 'tree.png',       357 );\n        /** The sprite 'tree white'. */\n        public      static  readonly    TREE_WHITE              :SpriteFile             = new SpriteFile( 'treeWhite.png',  357 );\n        /** The sprite 'test'. */\n        public      static  readonly    TEST                    :SpriteFile             = new SpriteFile( 'test.png',       64  );\n\n        /** Lists all sprite files in an array. */\n        public      static  readonly    ALL_SPRITE_FILES        :SpriteFile[]           =\n        [\n            SpriteFile.TREE,\n            SpriteFile.TREE_WHITE,\n            SpriteFile.TEST,\n        ];\n\n        /** The filename of this texture's image. */\n        public              readonly    fileName                :string             = null;\n        /** Specifies the width and height of one square frame inside this sprite. */\n        public              readonly    frameSize               :number             = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a sprite configuration.\n        *\n        *   @param fileName  The filename of the image to load for this material.\n        *   @param frameSize The size of a square frame in pixels.\n        ***************************************************************************************************************/\n        public constructor( fileName:string, frameSize:number )\n        {\n            this.fileName  = fileName;\n            this.frameSize = frameSize;\n        }\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bz from '..';\n\n    /** ****************************************************************************************************************\n    *   Specifies all textures to load.\n    *******************************************************************************************************************/\n    export class Texture\n    {\n        /** The texture 'bullet hole concreate'. */\n        public      static  readonly    BULLET_HOLE_CONCRETE        :Texture                = new Texture( 'bulletHole/concrete.png',   bz.TextureHasAlpha.YES, bz.TextureUV.ALL_TO_ONE,    null,                           bz.TextureType.WALL     );\n        /** The texture 'bullet hole wood'. */\n        public      static  readonly    BULLET_HOLE_WOOD            :Texture                = new Texture( 'bulletHole/wood.png',       bz.TextureHasAlpha.YES, bz.TextureUV.ALL_TO_ONE,    null,                           bz.TextureType.WALL     );\n        /** The texture 'bullet hole glass'. */\n        public      static  readonly    BULLET_HOLE_GLASS           :Texture                = new Texture( 'bulletHole/glass.png',      bz.TextureHasAlpha.YES, bz.TextureUV.ALL_TO_ONE,    null,                           bz.TextureType.WALL     );\n\n        /** The texture 'wall test'. */\n        public      static  readonly    WALL_TEST                   :Texture                = new Texture( 'wall/test.jpg',             bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_CONCRETE,   bz.TextureType.WALL     );\n        /** The texture 'wall mayflower logo'. */\n        public      static  readonly    WALL_MAYFLOWER_LOGO         :Texture                = new Texture( 'wall/mfLogo.jpg',           bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n        /** The texture 'wall amiga'. */\n        public      static  readonly    WALL_AMIGA                  :Texture                = new Texture( 'wall/amiga.jpg',            bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n        /** The texture 'wall wood'. */\n        public      static  readonly    WALL_WOOD                   :Texture                = new Texture( 'wall/wood.jpg',             bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n        /** The texture 'wall grass'. */\n        public      static  readonly    WALL_GRASS                  :Texture                = new Texture( 'wall/grass.jpg',            bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n        /** The texture 'wall glas'. */\n        public      static  readonly    WALL_GLASS                  :Texture                = new Texture( 'wall/glass.jpg',            bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_GLASS,      bz.TextureType.WALL     );\n        /** The texture 'wall tree'. */\n        public      static  readonly    WALL_TREE                   :Texture                = new Texture( 'wall/tree.png',             bz.TextureHasAlpha.YES, bz.TextureUV.ALL_TO_ONE,    Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n        /** The texture 'wall skin rosé'. */\n        public      static  readonly    WALL_SKIN_ROSE              :Texture                = new Texture( 'wall/skinRose.jpg',         bz.TextureHasAlpha.NO,  bz.TextureUV.TILED_BY_SIZE, Texture.BULLET_HOLE_WOOD,       bz.TextureType.WALL     );\n\n        /** The video texture 'wall test'. */\n        public      static  readonly    VIDEO_TEST                  :Texture                = new Texture( 'test.mp4',                  bz.TextureHasAlpha.NO,  bz.TextureUV.ALL_TO_ONE,    Texture.BULLET_HOLE_GLASS,      bz.TextureType.VIDEO    );\n\n        /** The model texture 'crate'. */\n        public      static  readonly    MODEL_CRATE                 :Texture                = new Texture( 'crate1.jpg',                bz.TextureHasAlpha.NO,  bz.TextureUV.ALL_TO_ONE,    Texture.BULLET_HOLE_WOOD,       bz.TextureType.MODEL    );\n\n        /** Contains all texture data objects. */\n        public      static  readonly    ALL_TEXTURES                :Texture[]              =\n        [\n            Texture.BULLET_HOLE_CONCRETE,\n            Texture.BULLET_HOLE_WOOD,\n            Texture.BULLET_HOLE_GLASS,\n\n            Texture.WALL_TEST,\n            Texture.WALL_MAYFLOWER_LOGO,\n            Texture.WALL_AMIGA,\n            Texture.WALL_WOOD,\n            Texture.WALL_GRASS,\n            Texture.WALL_GLASS,\n            Texture.WALL_TREE,\n            Texture.WALL_SKIN_ROSE,\n\n            Texture.VIDEO_TEST,\n\n            Texture.MODEL_CRATE,\n        ];\n\n        /** The filename of this texture's image. */\n        private             readonly    fileName                    :string                 = null;\n        /** The according bullet hole texture for this texture. */\n        private             readonly    bulletHoleTexture           :bz.Texture             = null;\n        /** Specifies if this texture has an alpha channel. */\n        private             readonly    textureHasAlpha             :bz.TextureHasAlpha     = null;\n        /** The UV tiling strategy to apply for this texture. */\n        private             readonly    strategyUV                  :bz.TextureUV           = null;\n        /** Specifies the type of texture. */\n        private             readonly    textureType                 :bz.TextureType         = null;\n\n        /** The babylon.JS texture data. */\n        private                         nativeTexture               :BABYLON.Texture        = null;\n\n        /** ************************************************************************************************************\n        *   Creates a texture configuration.\n        *\n        *   @param fileName          The filename of the image to load for this material.\n        *   @param textureHasAlpha   Specifies alpha occurance in texture image.\n        *   @param strategyUV        The UV tiling strategy for this texture.\n        *   @param bulletHoleTexture The texture for bullet holes that occur onto this texture.\n        *   @param textureType       The type of this texture.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            fileName          :string,\n            textureHasAlpha   :bz.TextureHasAlpha,\n            strategyUV        :bz.TextureUV,\n            bulletHoleTexture :bz.Texture,\n            textureType       :bz.TextureType\n        )\n        {\n            this.textureType       = textureType;\n\n            this.fileName          = this.getFileName( fileName );\n            this.textureHasAlpha   = textureHasAlpha;\n            this.strategyUV        = strategyUV;\n            this.bulletHoleTexture = bulletHoleTexture;\n        }\n\n        /** ************************************************************************************************************\n        *   Loads the texture image.\n        *\n        *   @param scene The babylon.JS scene to append all textures to.\n        ***************************************************************************************************************/\n        public loadTexture( scene:BABYLON.Scene ) : void\n        {\n            switch ( this.textureType )\n            {\n                case bz.TextureType.WALL:\n                {\n                    // create default texture\n                    this.nativeTexture = new BABYLON.Texture( this.fileName, scene );\n                    break;\n                }\n\n                case bz.TextureType.VIDEO:\n                {\n                    // create video texture and mute audio\n                    const videoTexture:BABYLON.VideoTexture = new BABYLON.VideoTexture(\n                        this.fileName,\n                        this.fileName,\n                        scene,\n                        true\n                    );\n                    videoTexture.video.muted    = true;\n                    videoTexture.video.autoplay = true;\n                    videoTexture.video.play().then(\n                        () :void => {\n                            // no need to handle this promise fullfillment\n                        } )\n                        .catch( () :void => {\n                            // no need to catch this promise error\n                        }\n                    );\n\n                    this.nativeTexture = videoTexture;\n                    break;\n                }\n\n                case bz.TextureType.MODEL:\n                {\n                    // do not load model textures explicitly\n                    break;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a clone of this texture's babylon.JS data.\n        *\n        *   @return A clone of this texture's native texture data.\n        ***************************************************************************************************************/\n        public cloneNativeTexture() : BABYLON.Texture\n        {\n            return this.nativeTexture.clone();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the texture's babylon.JS data.\n        *\n        *   @return The texture's native texture data.\n        ***************************************************************************************************************/\n        public getNativeTexture() : BABYLON.Texture\n        {\n            return this.nativeTexture;\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if this texture is a video texture.\n        *\n        *   @return <code>true</code> if this texture is a video texture.\n        ***************************************************************************************************************/\n        public getIsVideoTexture() : boolean\n        {\n            return this.textureType === bz.TextureType.VIDEO;\n        }\n\n        /** ************************************************************************************************************\n        *   Determines if this texture uses an alpha channel.\n        *\n        *   @return <code>true</code> if this texture makes use of an alpha channel.\n        ***************************************************************************************************************/\n        public hasAlpha() : boolean\n        {\n            return ( this.textureHasAlpha === bz.TextureHasAlpha.YES );\n        }\n\n        /** ************************************************************************************************************\n        *   Determines this texture's UV strategy.\n        *\n        *   @return The UV strategy of this texture.\n        ***************************************************************************************************************/\n        public getStrategyUV() : bz.TextureUV\n        {\n            return this.strategyUV;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the full qualified filename to this texture resource file.\n        *\n        *   @param fileName The partial filename to this texture resource file.\n        *\n        *   @return The full qualified filename to this texture resource file.\n        ***************************************************************************************************************/\n        private getFileName( fileName:string ) : string\n        {\n            switch ( this.textureType )\n            {\n                case bz.TextureType.WALL:\n                {\n                    return bz.SettingResource.PATH_IMAGE_TEXTURE + fileName;\n                }\n\n                case bz.TextureType.VIDEO:\n                {\n                    return bz.SettingResource.PATH_VIDEO_TEXTURE + fileName;\n                }\n\n                case bz.TextureType.MODEL:\n                {\n                    return fileName;\n                }\n            }\n\n            return '';\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the according bullet hole for the given native mesh.\n        *\n        *   @param mesh The mesh to determine the Bullet Hole Texture for.\n        *\n        *   @return The according bullet hole texture.\n        ***************************************************************************************************************/\n        public static getAccordingBulletHoleTextureForMesh( mesh:BABYLON.AbstractMesh ) : bz.Texture\n        {\n            const DEFAULT_BULLET_HOLE_TEXTURE:Texture = Texture.BULLET_HOLE_CONCRETE;\n\n            // try to pick the texture filename\n            if\n            (\n                mesh != null\n                && mesh.material != null\n                && mesh.material.getActiveTextures() != null\n                && mesh.material.getActiveTextures().length > 0\n            )\n            {\n                // pick texture filename\n                const meshTextureFileName:string = mesh.material.getActiveTextures()[ 0 ].name;\n\n                // compare with all existent textures\n                for ( const texture of Texture.ALL_TEXTURES )\n                {\n                    if ( texture.fileName === meshTextureFileName )\n                    {\n                        if ( texture.bulletHoleTexture !== null )\n                        {\n                            return texture.bulletHoleTexture;\n                        }\n                    }\n                }\n            }\n\n            return DEFAULT_BULLET_HOLE_TEXTURE;\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Manages all game engine components.\n    *******************************************************************************************************************/\n    export class Engine\n    {\n        /** The canvas system. */\n        private                     canvasSystem                :bz.CanvasSystem                    = null;\n        /** The key system. */\n        private                     keySystem                   :bz.KeySystem                       = null;\n        /** The babylon.JS engine. */\n        private                     babylonEngine               :BABYLON.Engine                     = null;\n        /** The custom loading screen. */\n        private                     loadingScreen               :bz.LoadingScreen                   = null;\n\n        /** ************************************************************************************************************\n        *   Inits all components of the game engine.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            bz.Debug.init.log( 'Init canvas' );\n            this.canvasSystem = new bz.CanvasSystem();\n            this.canvasSystem.updateDimensions();\n\n            // create custom loading screen\n            this.loadingScreen = new bz.LoadingScreen( this.canvasSystem.getNativeCanvas() );\n\n            // init babylon.JS engine, set and show custom loading screen\n            bz.Debug.init.log( 'Init babylon.JS engine' );\n            this.babylonEngine = new BABYLON.Engine( this.canvasSystem.getNativeCanvas(), true );\n            if ( bz.SettingEngine.CUSTOM_LOADING_SCREEN )\n            {\n                this.babylonEngine.loadingScreen = this.loadingScreen;\n            }\n            this.babylonEngine.displayLoadingUI();\n\n            // set collision epsilon .. this effects collision detection\n            BABYLON.Engine.CollisionsEpsilon = bz.SettingEngine.PHYSICS_COLLISION_EPSILON_SIZE;\n\n            // add resize event listener\n            bz.Debug.init.log( 'Init window resize handler' );\n            window.addEventListener( 'resize', () => { this.onWindowResize(); } );\n\n            // create key and pointer system\n            this.keySystem = new bz.KeySystem();\n\n            // set the window blur handler\n            bz.Debug.init.log( 'Initing window blur handler' );\n            window.addEventListener( 'blur', () => { this.onWindowBlur(); } );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the current FPS of the babylon.JS engine.\n        *\n        *   @return The current Frames Per Second as a floating number.\n        ***************************************************************************************************************/\n        public getFps() : number\n        {\n            return this.babylonEngine.getFps();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the visibility for the babylon.JS engine's loading UI.\n        *\n        *   @param visible Whether to show or to hide the loading UI.\n        ***************************************************************************************************************/\n        public setLoadingUiVisibility( visible:boolean ) : void\n        {\n            if ( visible )\n            {\n                bz.Debug.stage.log( 'Showing loading UI' );\n\n                this.babylonEngine.displayLoadingUI();\n            }\n            else\n            {\n                bz.Debug.init.log( 'Hiding loading UI' );\n\n                this.babylonEngine.hideLoadingUI();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the execution for the babylon.JS engine's render loop.\n        *\n        *   @param active     Whether to start or to stop the render loop.\n        *   @param renderLoop The method to execute as the render loop.\n        ***************************************************************************************************************/\n        public setRenderLoopExecution( active:boolean, renderLoop:() => void ) : void\n        {\n            if ( active )\n            {\n                bz.Debug.init.log( 'Starting render loop' );\n\n                this.babylonEngine.runRenderLoop( renderLoop );\n            }\n            else\n            {\n                bz.Debug.stage.log( 'Stopping render loop' );\n\n                this.babylonEngine.stopRenderLoop( renderLoop );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a new babylon.JS native scene.\n        *\n        *   @return The native babylon.JS scene created from the native babylon.JS engine.\n        ***************************************************************************************************************/\n        public createNewScene() : BABYLON.Scene\n        {\n            return new BABYLON.Scene( this.babylonEngine );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the canvas system.\n        *\n        *   @return The canvas system.\n        ***************************************************************************************************************/\n        public getCanvasSystem() : bz.CanvasSystem\n        {\n            return this.canvasSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the key system.\n        *\n        *   @return The key system.\n        ***************************************************************************************************************/\n        public getKeySystem() : bz.KeySystem\n        {\n            return this.keySystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the size of the browser window is changed.\n        ***************************************************************************************************************/\n        private onWindowResize() : void\n        {\n            // resize loading screen\n            this.loadingScreen.resizeLoadingDivToCanvasDimensions();\n\n            // update canvas dimensions and check if they actually changed\n            const dimensionsChanged:boolean = this.canvasSystem.updateDimensions();\n\n            if ( dimensionsChanged )\n            {\n                // resize GUIs\n                bz.Main.game.adjustGameSizeToCanvasSize();\n\n                // resize babylon.JS\n                this.babylonEngine.resize();\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Being invoked when the browser window loses the application focue.\n        ***************************************************************************************************************/\n        private onWindowBlur() : void\n        {\n            bz.Debug.canvas.log( 'Detected window focus lost - Releasing all keys' );\n            this.keySystem.releaseAllKeys();\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Manages the game logic.\n    *******************************************************************************************************************/\n    export class Game\n    {\n        /** The game engine. */\n        private                     engine                      :bz.Engine                  = null;\n        /** The current stage. */\n        private                     stage                       :bz.Stage                   = null;\n        /** The current game scene. */\n        private                     scene                       :bz.Scene                   = null;\n\n        /** ************************************************************************************************************\n        *   Inits the game from scratch.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            bz.Debug.init.log( 'Init game engine' );\n\n            // init the engine\n            this.engine = new bz.Engine();\n            this.engine.init();\n\n            // init the scene\n            bz.Debug.init.log( 'Init scene' );\n            this.scene = new bz.Scene();\n            this.scene.init( this.engine, () => { this.onInitGameEngineCompleted(); } );\n        }\n\n        /** ************************************************************************************************************\n        *   Switches the current stage to the specified target stage.\n        *\n        *   @param targetStage The target stage to switch to.\n        ***************************************************************************************************************/\n        public switchStage( targetStage:bz.StageId ) : void\n        {\n            bz.Debug.stage.log( '' );\n            bz.Debug.stage.log( 'Switching to target stage [' + String( targetStage ) + ']' );\n\n            // stop physics engine immediately\n            this.scene.enablePhysics( false );\n\n            // remember last pause menu item\n            let lastPauseMenuItem:number = 0;\n\n            // check existent stage unload\n            if ( this.stage !== null )\n            {\n                this.engine.setLoadingUiVisibility( true );\n                this.engine.setRenderLoopExecution( false, () => { this.render(); } );\n\n                // remember last pause menu index\n                lastPauseMenuItem = this.stage.getPauseMenuIndex();\n\n                // dispose existent stage\n                bz.Debug.stage.log( 'Disposing the current stage' );\n                this.stage.dispose();\n            }\n\n            // assign the new stage\n            switch ( targetStage )\n            {\n                case bz.StageId.TEST_OFFICE:\n                {\n                    this.stage = new bz.Office( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.TEST_LEVEL:\n                {\n                    this.stage = new bz.TestLevel( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.TEST_SITE:\n                {\n                    this.stage = new bz.TestSite( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.ROOM_VIEWER:\n                {\n                    this.stage = new bz.RoomViewer( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.PRODUCT_CONFIGURATOR:\n                {\n                    this.stage = new bz.ProductConfigurator( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.INTRO_LOGO:\n                {\n                    this.stage = new bz.IntroLogo( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.HUMAN_BODY_PARTITIONS:\n                {\n                    this.stage = new bz.HumanBodyPartitions( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n\n                case bz.StageId.SPACESHIP:\n                {\n                    this.stage = new bz.SpaceshipScene( this.scene, this.engine.getCanvasSystem() );\n                    break;\n                }\n            }\n\n            // init the new stage\n            bz.Debug.stage.log( ' Initializing target stage [' + String( targetStage ) + ']' );\n            this.stage.init();\n\n            // assign remembered pause menu index\n            this.stage.setPauseMenuIndex( lastPauseMenuItem );\n\n            // specify callback to invoke when the scene is fully loaded\n            this.scene.getNativeScene().executeWhenReady( () => { this.initSceneCompleted(); } );\n        }\n\n        /** ************************************************************************************************************\n        *   Toggles the pause state for the current stage.\n        ***************************************************************************************************************/\n        public togglePause() : void\n        {\n            this.stage.togglePause();\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the game engine's key system.\n        *\n        *   @return The key system.\n        ***************************************************************************************************************/\n        public getKeySystem() : bz.KeySystem\n        {\n            return this.engine.getKeySystem();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the current FPS of the babylon.JS engine.\n        *\n        *   @return The current Frames Per Second as a floating number.\n        ***************************************************************************************************************/\n        public getFps() : number\n        {\n            return this.engine.getFps();\n        }\n\n        /** ************************************************************************************************************\n        *   Adjusts all game elements to the current canvas size.\n        ***************************************************************************************************************/\n        public adjustGameSizeToCanvasSize() : void\n        {\n            if ( this.stage !== null )\n            {\n                this.stage.adjustGuiSizeToCanvasSize();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the game engine is completely initialized.\n        ***************************************************************************************************************/\n        private onInitGameEngineCompleted() : void\n        {\n            bz.Debug.init.log( 'onInitGameEngineCompleted being invoked' );\n\n            this.switchStage( bz.SettingStage.STAGE_STARTUP );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the scene is set up.\n        ***************************************************************************************************************/\n        private initSceneCompleted() : void\n        {\n            bz.Debug.init.log( 'System callback: Scene initialization completed' );\n\n            this.engine.setLoadingUiVisibility( false );\n            this.engine.setRenderLoopExecution( true, () => { this.render(); } );\n\n            // start physics engine not before now in order to prevent unwanted physical startup impulses! :)\n            this.scene.enablePhysics( true );\n        };\n\n        /** ************************************************************************************************************\n        *   The render loop being invoked each game tick.\n        ***************************************************************************************************************/\n        private render() : void\n        {\n            // render stage\n            this.stage.render();\n\n            // render scene\n            this.scene.render();\n\n            // handle global keys ( pause, camera changes, level switches etc. )\n            this.handleGlobalKeys( this.engine.getKeySystem() );\n        };\n\n        /** ************************************************************************************************************\n        *   Handles all keys for the menu.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        private handleGlobalKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( bz.SettingDebug.ENABLE_DEBUG_KEYS )\n            {\n                this.handleDebugKeys( keySystem );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Handles all debug keys in the menu state.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        private handleDebugKeys( keySystem:bz.KeySystem ) : void\n        {\n            // camera switches\n\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_1 ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_1 );\n                this.stage.setActiveCamera( bz.CameraType.FREE_CAMERA );\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_2 ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_2 );\n                this.stage.setActiveCamera( bz.CameraType.STATIONARY );\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_3 ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_3 );\n                this.stage.setActiveCamera( bz.CameraType.FOLLOW );\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_4 ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_4 );\n                this.stage.setActiveCamera( bz.CameraType.FIRST_PERSON );\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_5 ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_5 );\n                this.stage.setActiveCamera( bz.CameraType.ARC_ROTATE );\n            }\n\n            // toggle pause menu\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ESCAPE ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ESCAPE );\n                this.stage.togglePause();\n            }\n\n            // toggle physics\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_P ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_P );\n                this.scene.togglePhysics();\n            }\n        }\n    }\n","\n    import * as bz  from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Creates instances for all scene cameras.\n    *******************************************************************************************************************/\n    export abstract class CameraFactory\n    {\n        /** The ID for the next created camera to assign. */\n        private     static              nextCameraId                    :number                         = 0;\n\n        /** ************************************************************************************************************\n        *   Creates the free debug camera.\n        *\n        *   @param scene           The babylon.JS scene.\n        *   @param startupPosition The camera startup position.\n        *   @param startupTarget   The camera startup target.\n        ***************************************************************************************************************/\n        public static createFreeCamera\n        (\n            scene           :BABYLON.Scene,\n            startupPosition :BABYLON.Vector3,\n            startupTarget   :BABYLON.Vector3\n        )\n        : BABYLON.FreeCamera\n        {\n            const freeCamera:BABYLON.FreeCamera = new BABYLON.FreeCamera\n            (\n                bz.CameraFactory.getNextCameraId(),\n                startupPosition,\n                scene\n            );\n\n            // set startup direction\n            freeCamera.setTarget( startupTarget );\n\n            // disable collisions and gravity\n            freeCamera.checkCollisions = bz.SettingDebug.DEBUG_CAMERA_ENABLE_COLLISIONS;\n            freeCamera.applyGravity    = bz.SettingDebug.DEBUG_CAMERA_ENABLE_COLLISIONS;\n\n            // set the ellipsoid around the camera (the collision area if collisions are enabled)\n            freeCamera.ellipsoid       = bz.SettingDebug.DEBUG_CAMERA_ELLIPSOID;\n            freeCamera.ellipsoidOffset = BABYLON.Vector3.Zero();\n\n            freeCamera.keysUp    = [ 38 ];\n            freeCamera.keysDown  = [ 40 ];\n            freeCamera.keysLeft  = [ 37 ];\n            freeCamera.keysRight = [ 39 ];\n\n            return freeCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the stationary camera.\n        *\n        *   @param scene           The babylon.JS scene.\n        *   @param startupPosition The camera startup position.\n        ***************************************************************************************************************/\n        public static createStationaryTargetCamera\n        (\n            scene           :BABYLON.Scene,\n            startupPosition :BABYLON.Vector3\n        )\n        : BABYLON.TargetCamera\n        {\n            return new BABYLON.TargetCamera\n            (\n                bz.CameraFactory.getNextCameraId(),\n                startupPosition,\n                scene\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the follow camera.\n        *\n        *   @param scene           The babylon.JS scene.\n        *   @param startupPosition The camera startup position.\n        *\n        *   @return The follow camera.\n        ***************************************************************************************************************/\n        public static createFollowCamera( scene:BABYLON.Scene, startupPosition:BABYLON.Vector3 ) : BABYLON.FollowCamera\n        {\n            const followCamera:BABYLON.FollowCamera = new BABYLON.FollowCamera\n            (\n                bz.CameraFactory.getNextCameraId(),\n                startupPosition,\n                scene\n            );\n\n            followCamera.heightOffset       = bz.SettingEngine.CAMERA_FOLLOW_HEIGHT_OFFSET;\n            followCamera.radius             = bz.SettingEngine.CAMERA_FOLLOW_RADIUS;\n            followCamera.rotationOffset     = bz.SettingEngine.CAMERA_FOLLOW_ROTATION_OFFSET;\n            followCamera.cameraAcceleration = bz.SettingEngine.CAMERA_FOLLOW_ACCELERATION_SPEED;\n            followCamera.maxCameraSpeed     = bz.SettingEngine.CAMERA_FOLLOW_MAX_SPEED;\n\n            return followCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the first person camera.\n        *\n        *   @param scene       The babylon.JS scene.\n        *   @param fieldOfView The initial field of view for the camera.\n        *\n        *   @return A free camera.\n        ***************************************************************************************************************/\n        public static createFirstPersonCamera( scene:BABYLON.Scene, fieldOfView:number ) : BABYLON.FreeCamera\n        {\n            const freeCamera:BABYLON.FreeCamera = new BABYLON.FreeCamera\n            (\n                bz.CameraFactory.getNextCameraId(),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                scene\n            );\n            freeCamera.fov = fieldOfView;\n\n            return freeCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the arc rotation camera.\n        *\n        *   @param scene            The babylon.JS scene.\n        *   @param rotX             Initial rotation X of the camera in degrees.\n        *   @param rotY             Initial rotation Y of the camera in degrees.\n        *   @param distance         The distance of the camera from the center point.\n        *   @param center           The center point for the camera to rotate around.\n        *   @param lowerRadiusLimit The minimum distance from the camera to the center.\n        *   @param upperRadiusLimit The maximum distance from the camera to the center.\n        *\n        *   @return An arc rotation camera.\n        ***************************************************************************************************************/\n        public static createArcRotateCamera\n        (\n            scene            :BABYLON.Scene,\n            rotX             :number,\n            rotY             :number,\n            distance         :number,\n            center           :BABYLON.Vector3,\n            lowerRadiusLimit :number,\n            upperRadiusLimit :number\n        )\n        : BABYLON.ArcRotateCamera\n        {\n            const arcRotateCamera:BABYLON.ArcRotateCamera = new BABYLON.ArcRotateCamera\n            (\n                bz.CameraFactory.getNextCameraId(),\n                bz.MathUtil.degreesToRad( rotY ),\n                bz.MathUtil.degreesToRad( rotX ),\n                distance,\n                center,\n                scene\n            );\n\n            arcRotateCamera.lowerRadiusLimit = lowerRadiusLimit;\n            arcRotateCamera.upperRadiusLimit = upperRadiusLimit;\n\n            arcRotateCamera.lowerAlphaLimit  = null;\n            arcRotateCamera.upperAlphaLimit  = null;\n/*\n            arcRotateCamera.lowerBetaLimit   = null;\n            arcRotateCamera.upperBetaLimit   = null;\n*/\n            arcRotateCamera.keysUp    = [ 40 ];\n            arcRotateCamera.keysDown  = [ 38 ];\n            arcRotateCamera.keysLeft  = [ 39 ];\n            arcRotateCamera.keysRight = [ 37 ];\n\n            return arcRotateCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new camera to create.\n        *\n        *   @return The next free unique id for a new camera to create.\n        ***************************************************************************************************************/\n        private static getNextCameraId() : string\n        {\n            return 'camera' + String( CameraFactory.nextCameraId++ );\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Offers different scene cameras.\n    *******************************************************************************************************************/\n    export class CameraSystem\n    {\n        /** Next ID to assign for animation creation. */\n        private     static              nextCameraAnimationId           :number                                 = 0;\n\n        /** The currently active camera type. */\n        private                         activeCameraType                :bz.CameraType                          = null;\n\n        /** The native babylon.JS scene these cameras belong to. */\n        private             readonly    scene                           :BABYLON.Scene                          = null;\n        /** The canvas this camera system is connected with. */\n        private             readonly    canvas                          :HTMLCanvasElement                      = null;\n\n        /** The free controllable babylon.JS (debug) camera. */\n        private             readonly    freeCamera                      :BABYLON.FreeCamera                     = null;\n        /** The stationary and targeted babylon.JS camera. */\n        private             readonly    stationaryCamera                :BABYLON.TargetCamera                   = null;\n        /** The follow babylon.JS camera. */\n        private             readonly    followCamera                    :BABYLON.FollowCamera                   = null;\n        /** The first person babylon.JS camera. */\n        private             readonly    firstPersonCamera               :BABYLON.FreeCamera                     = null;\n        /** The babylon.JS axis camera. */\n        private             readonly    arcRotateCamera                 :BABYLON.ArcRotateCamera                = null;\n\n        /** ************************************************************************************************************\n        *   Sets up all scene cameras.\n        *\n        *   @param scene                    The babylon.JS scene to create these cameras for.\n        *   @param canvas                   The canvas this camera system is linked to.\n        *\n        *   @param positionFreeCamera       The startup position for the free camera.\n        *   @param positionStationaryCamera The startup position for the stationary camera.\n        *   @param positionFollowCamera     The startup position for the follow camera.\n        *\n        *   @param targetFreeCamera         The target position for the free camera.\n        *   @param targetStationaryCamera   The target node     for the starionary camera.\n        *   @param targetFollowCamera       The target node     for the follow camera.\n        *   @param targetFirstPersonCamera  The target mesh     for the first person camera.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            scene                    :BABYLON.Scene,\n            canvas                   :HTMLCanvasElement,\n\n            positionFreeCamera       :BABYLON.Vector3,\n            positionStationaryCamera :BABYLON.Vector3,\n            positionFollowCamera     :BABYLON.Vector3,\n\n            targetFreeCamera         :BABYLON.Vector3,\n            targetStationaryCamera   :any,\n            targetFollowCamera       :any,\n            targetFirstPersonCamera  :BABYLON.AbstractMesh\n        )\n        {\n            this.scene  = scene;\n            this.canvas = canvas;\n\n            this.freeCamera        = bz.CameraFactory.createFreeCamera\n            (\n                this.scene,\n                positionFreeCamera,\n                targetFreeCamera\n            );\n            this.stationaryCamera  = bz.CameraFactory.createStationaryTargetCamera\n            (\n                this.scene,\n                positionStationaryCamera\n            );\n            this.followCamera      = bz.CameraFactory.createFollowCamera\n            (\n                this.scene,\n                positionFollowCamera\n            );\n            this.firstPersonCamera = bz.CameraFactory.createFirstPersonCamera\n            (\n                this.scene,\n                bz.SettingEngine.DEFAULT_FIELD_OF_VIEW\n            );\n            this.arcRotateCamera   = bz.CameraFactory.createArcRotateCamera\n            (\n                this.scene,\n                0.0,\n                0.0,\n                200,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                100.0,\n                400.0\n            );\n\n            // assign camera targets\n            if ( targetStationaryCamera !== null )\n            {\n                this.lockStationaryTargetCameraTo( targetStationaryCamera );\n            }\n            if ( targetFollowCamera !== null )\n            {\n                this.lockFollowCameraTo( targetFollowCamera );\n            }\n            if ( targetFirstPersonCamera !== null )\n            {\n                this.setFirstPersonCameraTo( targetFirstPersonCamera );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the active babylon.JS camera.\n        *\n        *   @return The currently active native camera.\n        ***************************************************************************************************************/\n        public getActiveCamera() : BABYLON.Camera\n        {\n            return this.scene.activeCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the specified camera as the scene's active camera.\n        *\n        *   @param cameraType The type of camera to set as the scene's active camera.\n        *   @param player     The player instance that will show or hide according to the currently set camera.\n        *   @param gui        The stage GUI that may be shown or hidden according to the selected camera.\n        ***************************************************************************************************************/\n        public setActiveCamera\n        (\n            cameraType :bz.CameraType,\n            player     :bz.Player,\n            gui        :bz.GUI\n        )\n        : void\n        {\n            this.activeCameraType   = cameraType;\n            this.scene.activeCamera = this.getCameraFromType( cameraType );\n\n            switch ( cameraType )\n            {\n                case bz.CameraType.FREE_CAMERA:\n                {\n                    this.setCameraControlsEnabled( this.freeCamera,      true  );\n                    this.setCameraControlsEnabled( this.arcRotateCamera, false );\n\n                    if ( player !== null )\n                    {\n                        player.setVisible( true );\n                    }\n                    if ( gui    !== null )\n                    {\n                        gui.setFirstPlayerViewComponentsVisibility( false );\n                    }\n                    break;\n                }\n\n                case bz.CameraType.STATIONARY:\n                {\n                    this.setCameraControlsEnabled( this.freeCamera,      false );\n                    this.setCameraControlsEnabled( this.arcRotateCamera, false );\n\n                    if ( player !== null )\n                    {\n                        player.setVisible( true );\n                    }\n                    if ( gui    !== null )\n                    {\n                        gui.setFirstPlayerViewComponentsVisibility( false );\n                    }\n                    break;\n                }\n\n                case bz.CameraType.FOLLOW:\n                {\n                    this.setCameraControlsEnabled( this.freeCamera,      false );\n                    this.setCameraControlsEnabled( this.arcRotateCamera, false );\n\n                    if ( player !== null )\n                    {\n                        player.setVisible( true );\n                    }\n                    if ( gui    !== null )\n                    {\n                        gui.setFirstPlayerViewComponentsVisibility( false );\n                    }\n                    break;\n                }\n\n                case bz.CameraType.FIRST_PERSON:\n                {\n                    this.setCameraControlsEnabled( this.freeCamera,      false );\n                    this.setCameraControlsEnabled( this.arcRotateCamera, false );\n\n                    if ( player !== null )\n                    {\n                        player.setVisible( false );\n                    }\n                    if ( gui    !== null )\n                    {\n                        gui.setFirstPlayerViewComponentsVisibility( true );\n                    }\n\n                    break;\n                }\n\n                case bz.CameraType.ARC_ROTATE:\n                {\n                    this.setCameraControlsEnabled( this.freeCamera,      false );\n                    this.setCameraControlsEnabled( this.arcRotateCamera, true  );\n\n                    if ( player !== null )\n                    {\n                        player.setVisible( true );\n                    }\n                    if ( gui    !== null )\n                    {\n                        gui.setFirstPlayerViewComponentsVisibility( false );\n                    }\n                    break;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the first person camera is currently active.\n        *\n        *   @return <code>true</code> if the first person camera is currently active.\n        ***************************************************************************************************************/\n        public isFirstPersonCameraActive() : boolean\n        {\n            return ( this.activeCameraType === bz.CameraType.FIRST_PERSON );\n        }\n\n        /** ************************************************************************************************************\n        *   Set light to arc rotation camera.\n        *\n        *   @param light The light to append to the arc rotation camera by setting the camera as parent.\n        ***************************************************************************************************************/\n        public setLightToArcRotationCamera( light:BABYLON.Light ) : void\n        {\n            light.parent = this.arcRotateCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Removes all cameras from the babylon.JS scene.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.freeCamera.dispose();\n            this.stationaryCamera.dispose();\n            this.followCamera.dispose();\n            this.firstPersonCamera.dispose();\n            this.arcRotateCamera.dispose();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the arc rotation camera from the system.\n        *\n        *   @raram The arc rotating camera.\n        ***************************************************************************************************************/\n        public getArcRotateCamera() : BABYLON.ArcRotateCamera\n        {\n            return this.arcRotateCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the field of view for the first person camera.\n        *\n        *   @param fov The field of view to set for the first person camera.\n        ***************************************************************************************************************/\n        public setFirstPersonCameraFieldOfView( fov:number ) : void\n        {\n            this.firstPersonCamera.fov = fov;\n        }\n\n        /** ************************************************************************************************************\n        *   Animates the position of the specified camera to the desired destination.\n        *\n        *   @param cameraType  The camera to animate.\n        *   @param destination The destination of the camera position.\n        *   @param seconds     The seconds for the animation to take.\n        *   @param ease        The easing class instance or <code>null</code> for no easing.\n        *   @param onFinish    Being invoked when the target is reached.\n        ***************************************************************************************************************/\n        public animateCameraPosition\n        (\n            cameraType  :bz.CameraType,\n            destination :BABYLON.Vector3,\n            seconds     :number,\n            ease        :BABYLON.EasingFunction,\n            onFinish    :() => void\n        )\n        : void\n        {\n            const camera     :BABYLON.Camera = this.getCameraFromType( cameraType );\n            const frameCount :number         = ( seconds * bz.SettingEngine.CAMERA_ANIMATION_FRAMES_PER_SECOND );\n\n            if ( ease !== null )\n            {\n                ease.setEasingMode( BABYLON.EasingFunction.EASINGMODE_EASEINOUT );\n            }\n\n            BABYLON.Animation.CreateAndStartAnimation\n            (\n                CameraSystem.createNextCameraAnimationId(),\n                camera,\n                'position',\n                bz.SettingEngine.CAMERA_ANIMATION_FRAMES_PER_SECOND,\n                frameCount,\n                camera.position,\n                destination,\n                0,\n                ease,\n                onFinish\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Animates the target of the specified camera to the desired destination.\n        *\n        *   @param camera      The target camera.\n        *   @param destination The destination of the camera target.\n        *   @param seconds     The seconds for the animation to take.\n        *   @param ease        The easing class instance or <code>null</code> for no easing.\n        *   @param onFinish    Being invoked when the target is reached.\n        ***************************************************************************************************************/\n        public animateCameraTarget\n        (\n            camera      :BABYLON.ArcRotateCamera,\n            destination :BABYLON.Vector3,\n            seconds     :number,\n            ease        :BABYLON.EasingFunction,\n            onFinish    :() => void\n        )\n        : void\n        {\n            const frameCount:number = ( seconds * bz.SettingEngine.CAMERA_ANIMATION_FRAMES_PER_SECOND );\n\n            if ( ease !== null )\n            {\n                ease.setEasingMode( BABYLON.EasingFunction.EASINGMODE_EASEINOUT );\n            }\n\n            BABYLON.Animation.CreateAndStartAnimation\n            (\n                CameraSystem.createNextCameraAnimationId(),\n                camera,\n                'target',\n                bz.SettingEngine.CAMERA_ANIMATION_FRAMES_PER_SECOND,\n                frameCount,\n                camera.target,\n                destination,\n                0,\n                ease,\n                onFinish\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the according camera for the specified camera type.\n        *\n        *   @param cameraType The camera type to deliver the according camera for.\n        *\n        *   @return The concrete camera instance for the asked camera type.\n        ***************************************************************************************************************/\n        private getCameraFromType( cameraType:bz.CameraType ) : BABYLON.Camera\n        {\n            switch ( cameraType )\n            {\n                case bz.CameraType.ARC_ROTATE:\n                {\n                    return this.arcRotateCamera;\n                }\n\n                case bz.CameraType.FIRST_PERSON:\n                {\n                    return this.firstPersonCamera;\n                }\n\n                case bz.CameraType.FOLLOW:\n                {\n                    return this.followCamera;\n                }\n\n                case bz.CameraType.FREE_CAMERA:\n                {\n                    return this.freeCamera;\n                }\n\n                case bz.CameraType.STATIONARY:\n                {\n                    return this.stationaryCamera;\n                }\n            }\n\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Locks the stationary camera to the specified target.\n        *\n        *   @param mesh The mesh to lock the stationary camera to.\n        ***************************************************************************************************************/\n        private lockStationaryTargetCameraTo( mesh:any ) : void\n        {\n            this.stationaryCamera.lockedTarget = mesh;\n        }\n\n        /** ************************************************************************************************************\n        *   Locks the follow camera to the specified target.\n        *\n        *   @param mesh The mesh to lock the follow camera to.\n        ***************************************************************************************************************/\n        private lockFollowCameraTo( mesh:any ) : void\n        {\n            this.followCamera.lockedTarget = mesh;\n        }\n\n        /** ************************************************************************************************************\n        *   Locks the first person camera inside the specified target.\n        *\n        *   @param mesh The mesh to lock the first person camera to.\n        ***************************************************************************************************************/\n        private setFirstPersonCameraTo( mesh:BABYLON.AbstractMesh ) : void\n        {\n            this.firstPersonCamera.parent = mesh;\n        }\n\n        /** ************************************************************************************************************\n        *   Enables or disables the debug controls for the specified camera.\n        *\n        *   @param camera The camera to attach or detach control to.\n        *   @param enable Whether to enable the canvas controls or not.\n        ***************************************************************************************************************/\n        private setCameraControlsEnabled\n        (\n            camera :BABYLON.Camera,\n            enable :boolean\n        )\n        : void\n        {\n            if ( enable )\n            {\n                camera.attachControl( this.canvas );\n            }\n            else\n            {\n                camera.detachControl( this.canvas );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Tests some post processing pipelining.\n        *\n        *   @param engine The native babylon.JS engine that manages this pp rendering pipeline.\n        ***************************************************************************************************************/\n        private testPostProcessingPipeline( engine:BABYLON.Engine ) : void\n        {\n            const pipeline :BABYLON.PostProcessRenderPipeline = new BABYLON.PostProcessRenderPipeline\n            (\n                engine,\n                'standardPipeline'\n            );\n            const effect   :BABYLON.PostProcessRenderEffect = new BABYLON.PostProcessRenderEffect\n            (\n                engine,\n                'fxaa',\n                () : BABYLON.FxaaPostProcess => {\n                    return new BABYLON.FxaaPostProcess\n                    (\n                        'antialias',\n                        2,\n                        null,\n                        BABYLON.Texture.TRILINEAR_SAMPLINGMODE,\n                        engine,\n                        !0\n                    );\n                }\n            );\n            pipeline.addEffect( effect );\n            this.scene.postProcessRenderPipelineManager.addPipeline( pipeline );\n\n            this.scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(\n                'standardPipeline',\n                this.stationaryCamera\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Tests some post processing effects on the stationary camera.\n        ***************************************************************************************************************/\n        private testPostProcessing() : void\n        {\n            // black and white\n            const blackAndWhite:BABYLON.BlackAndWhitePostProcess = new BABYLON.BlackAndWhitePostProcess\n            (\n                'BW',\n                1.0,\n                this.stationaryCamera\n            );\n\n            // blur\n            const kernel:number = 16;\n            const blur:BABYLON.BlurPostProcess = new BABYLON.BlurPostProcess\n            (\n                'Horizontal blur',\n                new BABYLON.Vector2( 1.0, 0 ),\n                kernel,\n                0.25,\n                this.stationaryCamera\n            );\n\n            // highlight\n            const postProcess :BABYLON.HighlightsPostProcess = new BABYLON.HighlightsPostProcess\n            (\n                'highlights',\n                1.0,\n                this.stationaryCamera\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new animation to create.\n        *\n        *   @return The next free unique id for a new animation to create.\n        ***************************************************************************************************************/\n        private static createNextCameraAnimationId() : string\n        {\n            return 'cameraAnimation' + String( CameraSystem.nextCameraAnimationId++ );\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   All supplied camera types the app supports.\n    *******************************************************************************************************************/\n    export enum CameraType\n    {\n        /** A free controllable camera. */\n        FREE_CAMERA,\n        /** A stationary stage camera. */\n        STATIONARY,\n        /** A camera that follows the player's body. */\n        FOLLOW,\n        /** The first person camera being fixed in the player's head mesh. */\n        FIRST_PERSON,\n        /** The arc rotation camera. */\n        ARC_ROTATE,\n    }\n","\n    /** ****************************************************************************************************************\n    *   All key codes that are used in the game.\n    *******************************************************************************************************************/\n    export abstract class KeyCodes\n    {\n        /** The keycode that represents the 'ARROW LEFT' key. */\n        public      static  readonly    KEY_LEFT                :string                         = 'ArrowLeft';\n        /** The keycode that represents the 'ARROW UP' key. */\n        public      static  readonly    KEY_UP                  :string                         = 'ArrowUp';\n        /** The keycode that represents the 'ARROW RIGHT' key. */\n        public      static  readonly    KEY_RIGHT               :string                         = 'ArrowRight';\n        /** The keycode that represents the 'ARROW DOWN' key. */\n        public      static  readonly    KEY_DOWN                :string                         = 'ArrowDown';\n\n        /** The keycode that represents the 'W' key. */\n        public      static  readonly    KEY_W                   :string                         = 'KeyW';\n        /** The keycode that represents the 'A' key. */\n        public      static  readonly    KEY_A                   :string                         = 'KeyA';\n        /** The keycode that represents the 'S' key. */\n        public      static  readonly    KEY_S                   :string                         = 'KeyS';\n        /** The keycode that represents the 'D' key. */\n        public      static  readonly    KEY_D                   :string                         = 'KeyD';\n\n        /** The keycode that represents the 'Q' key. */\n        public      static  readonly    KEY_Q                   :string                         = 'KeyQ';\n        /** The keycode that represents the 'E' key. */\n        public      static  readonly    KEY_E                   :string                         = 'KeyE';\n\n        /** The keycode that represents the 'F' key. */\n        public      static  readonly    KEY_F                   :string                         = 'KeyF';\n        /** The keycode that represents the 'R' key. */\n        public      static  readonly    KEY_R                   :string                         = 'KeyR';\n\n        /** The keycode that represents the 'Y' key. This is affected by the EN keyboard scheme. */\n        public      static  readonly    KEY_Y                   :string                         = 'KeyZ';\n        /** The keycode that represents the 'X' key. */\n        public      static  readonly    KEY_X                   :string                         = 'KeyX';\n\n        /** The keycode that represents the 'P' key. */\n        public      static  readonly    KEY_P                   :string                         = 'KeyP';\n\n        /** The keycode that represents the 'ENTER' key. */\n        public      static  readonly    KEY_ENTER               :string                         = 'Enter';\n        /** The keycode that represents the 'ESCAPE' key. */\n        public      static  readonly    KEY_ESCAPE              :string                         = 'Escape';\n        /** The keycode that represents the 'SPACE' key. */\n        public      static  readonly    KEY_SPACE               :string                         = 'Space';\n        /** The keycode that represents the 'LEFT CONTROL' key. */\n        public      static  readonly    KEY_CTRL_LEFT           :string                         = 'ControlLeft';\n        /** The keycode that represents the 'LEFT SHIFT' key. */\n        public      static  readonly    KEY_SHIFT_LEFT          :string                         = 'ShiftLeft';\n\n        /** The keycode that represents the '1' key. */\n        public      static  readonly    KEY_1                   :string                         = 'Digit1';\n        /** The keycode that represents the '2' key. */\n        public      static  readonly    KEY_2                   :string                         = 'Digit2';\n        /** The keycode that represents the '3' key. */\n        public      static  readonly    KEY_3                   :string                         = 'Digit3';\n        /** The keycode that represents the '4' key. */\n        public      static  readonly    KEY_4                   :string                         = 'Digit4';\n        /** The keycode that represents the '5' key. */\n        public      static  readonly    KEY_5                   :string                         = 'Digit5';\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   The key system that manages all pressed keys.\n    *******************************************************************************************************************/\n    export class KeySystem\n    {\n        /** All 'pressed' information for all keys. */\n        private                         keysPressed             :boolean[]                      = [];\n        /** All 'needs release' information for all keys. */\n        private                         keysNeedRelease         :boolean[]                      = [];\n\n        /** ************************************************************************************************************\n        *   Creates a new key system.\n        ***************************************************************************************************************/\n        public constructor()\n        {\n            window.addEventListener( 'keydown',   ( event:Event ) => { this.onKeyDown( event ); }, false );\n            window.addEventListener( 'keyup',     ( event:Event ) => { this.onKeyUp(   event ); }, false );\n\n            window.addEventListener( 'onkeydown', ( event:Event ) => { this.onKeyDown( event ); }, false );\n            window.addEventListener( 'onkeyup',   ( event:Event ) => { this.onKeyUp(   event ); }, false );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked by the system when a key is pressed.\n        *\n        *   @param event The system's propagated key event.\n        ***************************************************************************************************************/\n        public onKeyDown( event:Event ) : void\n        {\n            const keyCode:string = ( event as KeyboardEvent ).code;\n\n            if ( !this.keysNeedRelease[ keyCode ] )\n            {\n                this.keysPressed[ keyCode ] = true;\n\n                bz.Debug.key.log( 'key pressed ['  + keyCode + ']' );\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Being invoked by the system when a key is released.\n        *\n        *   @param event The system's propagated key event.\n        ***************************************************************************************************************/\n        public onKeyUp( event:Event ) : void\n        {\n            const keyCode:string = ( event as KeyboardEvent ).code;\n\n            this.keysPressed[     keyCode ] = false;\n            this.keysNeedRelease[ keyCode ] = false;\n/*\n            // try fullscreen mode and pointer lock\n            if ( keyCode === bz.KeyCodes.KEY_ENTER )\n            {\n                bz.Main.game.engine.babylonEngine.switchFullscreen( true );\n            }\n*/\n            bz.Debug.key.log( 'key released ['  + keyCode + ']' );\n        };\n\n        /** ************************************************************************************************************\n        *   Checks if the key with the given keyCode is currently pressed.\n        *\n        *   @param  keyCode The keyCode of the key to return pressed state.\n        *\n        *   @return         <code>true</code> if this key is currently pressed.\n        *                   Otherwise <code>false</code>.\n        ***************************************************************************************************************/\n        public isPressed( keyCode:string ) : boolean\n        {\n            return this.keysPressed[ keyCode ];\n        }\n\n        /** ************************************************************************************************************\n        *   Flags that a key needs release before being able to be pressed again.\n        *\n        *   @param keyCode The keyCode of the key to mark as 'needs key release'.\n        ***************************************************************************************************************/\n        public setNeedsRelease( keyCode:string ) : void\n        {\n            this.keysNeedRelease[ keyCode ] = true;\n            this.keysPressed[     keyCode ] = false;\n        }\n\n        /** ************************************************************************************************************\n        *   Flags all keys as released, forcing the user to press certain keys again.\n        *   Handy to invoke when the game screen loses the focus.\n        ***************************************************************************************************************/\n        public releaseAllKeys() : void\n        {\n            bz.Debug.key.log( 'releasing all keys' );\n\n            this.keysPressed = [];\n        }\n    }\n","\n    import * as bz      from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Offers default pointer handling for one specific stage.\n    *   This is currently just an implementation for physical debug purposes!\n    *******************************************************************************************************************/\n    export class PointerSystem\n    {\n        /** The canvas this pointer system operates on. */\n        private             readonly    canvas              :bz.CanvasSystem            = null;\n        /** The stage this pointer system operates on. */\n        private             readonly    stage               :bz.Stage                   = null;\n\n        /** Indicates if that the pointer is currently locked. */\n        private                         pointerLocked       :boolean                    = false;\n\n        /** ************************************************************************************************************\n        *   Creates a new Pointer System.\n        *\n        *   @param stage             The stage  this pointer system operates on.\n        *   @param canvas            The canvas this pointer system operates on.\n        *   @param assignPointerDown Specifies if a pointerDown event shall be assigned to the babylon.JS scene.\n        *   @param assignPointerLock Specifies if the pointer shall be locked on clicking onto the canvas.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            stage             :bz.Stage,\n            canvas            :bz.CanvasSystem,\n            assignPointerDown :boolean,\n            assignPointerLock :boolean\n        )\n        {\n            this.stage  = stage;\n            this.canvas = canvas;\n\n            this.stage.getScene().onPointerDown = (\n                assignPointerDown\n                ? ( evt:PointerEvent, pickResult:BABYLON.PickingInfo ) :void => {\n                    this.onPointerDown( evt, pickResult );\n                }\n                : null\n            );\n            this.canvas.getNativeCanvas().onclick = (\n                assignPointerLock\n                ? () :void => { this.onCanvasClick(); }\n                : null\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up and defines the pointer callback.\n        *\n        *   @param evt        The pointer event being propagated by the system.\n        *   @param pickResult More information about the location of the 3D space where the pointer is down.\n        ***************************************************************************************************************/\n        public onPointerDown( evt:PointerEvent, pickResult:BABYLON.PickingInfo ) : void\n        {\n            // check if a result is picked and if the stage is present\n            if ( pickResult.hit && this.stage !== null )\n            {\n                bz.Debug.pointer.log( 'Picked a mesh on pointerDown' );\n\n                let src :BABYLON.Vector3 = null;\n\n                // horrible debug implementation\n                if\n                (\n                        this.stage.getCameraSystem().isFirstPersonCameraActive()\n                    &&  this.stage.getPlayer() !== null\n                )\n                {\n                    src = this.stage.getPlayer().getThirdPersonCameraTargetMesh().position;\n                }\n                else\n                {\n                    src = this.stage.getCameraSystem().getActiveCamera().position;\n                }\n\n                const dir:BABYLON.Vector3 = pickResult.pickedPoint.subtract( src );\n                dir.normalize();\n\n                // horrible debug implementation\n                if\n                (\n                        pickResult.pickedMesh                             != null\n                    &&  pickResult.pickedMesh.physicsImpostor             != null\n                    &&  pickResult.pickedMesh.physicsImpostor.physicsBody != null\n                )\n                {\n                    pickResult.pickedMesh.applyImpulse( dir.scale( 10 ), pickResult.pickedPoint );\n                }\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Requests the mouse/pointer lock feature of the browser.\n        ***************************************************************************************************************/\n        private onCanvasClick() : void\n        {\n            document.addEventListener( 'pointerlockchange',    () => { this.onPointerLockChange(); } );\n            document.addEventListener( 'mozpointerlockchange', () => { this.onPointerLockChange(); } );\n            document.addEventListener( 'mousemove',            ( mouseEvent:MouseEvent ) => {\n                this.onMouseMove( mouseEvent ); }\n            );\n\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.canvas.getNativeCanvas().requestPointerLock =\n            (\n                    // eslint-disable-next-line @typescript-eslint/unbound-method\n                    this.canvas.getNativeCanvas().requestPointerLock\n                    // eslint-disable-next-line @typescript-eslint/unbound-method\n                ||  this.canvas.getNativeCanvas().mozRequestPointerLock\n            );\n            this.canvas.getNativeCanvas().requestPointerLock();\n        };\n\n        /** ************************************************************************************************************\n        *   Being invoked when the pointer lock changes.\n        ***************************************************************************************************************/\n        private onPointerLockChange() : void\n        {\n            if (\n                    document.pointerLockElement               === this.canvas.getNativeCanvas()\n                ||  ( document as any ).mozPointerLockElement === this.canvas.getNativeCanvas()\n            ) {\n                bz.Debug.pointer.log( 'The pointer lock status is now LOCKED' );\n\n                this.pointerLocked = true;\n\n            }\n            else\n            {\n                bz.Debug.pointer.log( 'The pointer lock status is now UNLOCKED' );\n\n                this.pointerLocked = false;\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Being invoked when the pointer-locked mouse is moved.\n        *\n        *   Note that this method is being invoked ASYNCHRONOUS by the system\n        *   so ALL occuring events must be stored and processed afterwards!\n        ***************************************************************************************************************/\n        private onMouseMove( me:MouseEvent ) : void\n        {\n            if ( this.pointerLocked )\n            {\n                bz.Debug.pointer.log(\n                    'PointerMovement X: ['\n                    + String( me.movementX )\n                    + '] Y: ['\n                    + String( me.movementY )\n                    + ']'\n                );\n            }\n\n\n\n        };\n    }\n","\n    import * as bz      from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Constructs meshes.\n    *******************************************************************************************************************/\n    export class MeshFactory\n    {\n        /** Implicit depth for 2D faces ( e.g. planes or polygons ). */\n        public              static  readonly    FACE_DEPTH              :number                     = 0.0001;\n\n        /** Next ID to assign for mesh creation. */\n        private             static              nextMeshId              :number                     = 0;\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new mesh to create.\n        *\n        *   @return The next free unique id for a new mesh to create.\n        ***************************************************************************************************************/\n        public static createNextMeshId() : string\n        {\n            return 'mesh' + String( MeshFactory.nextMeshId++ );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a box mesh.\n        *\n        *   @param scene         The scene where this mesh will be applied.\n        *   @param position      Where to place this mesh.\n        *   @param pivotAnchor   The anchor point of this mesh.\n        *   @param size          The dimensions of this mesh for all axis.\n        *   @param rotation      The initial rotation for all axis.\n        *   @param texture       The texture to apply.\n        *   @param color         The solid color to apply.\n        *   @param physic        The physical attributes to apply for this mesh.\n        *   @param materialAlpha The opacity for this mesh.\n        *   @param emissiveColor The emissive color for this material.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createBox\n        (\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            pivotAnchor   :bz.MeshPivotAnchor,\n            size          :BABYLON.Vector3,\n            rotation      :BABYLON.Vector3,\n            texture       :bz.Texture,\n            color         :BABYLON.Color3,\n            physic        :bz.Physic,\n            materialAlpha :number,\n            emissiveColor :BABYLON.Color3\n        )\n        : BABYLON.Mesh\n        {\n            // TODO move faceUV determination to separate method\n            let faceUV:BABYLON.Vector4[] = [];\n\n            if ( texture !== null )\n            {\n                switch ( texture.getStrategyUV() )\n                {\n                    case bz.TextureUV.ALL_TO_ONE:\n                    {\n                        faceUV =\n                        [\n                            new BABYLON.Vector4( 0.0, 0.0, -1.0, -1.0 ),\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0,  1.0  ),\n\n                            new BABYLON.Vector4( 0.0, 0.0, -1.0, -1.0 ),\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0,  1.0  ),\n\n                            new BABYLON.Vector4( 0.0, 0.0, -1.0, -1.0 ),\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0,  1.0  ),\n                        ];\n                        break;\n                    }\n\n                    case bz.TextureUV.TILED_BY_SIZE:\n                    {\n                        faceUV =\n                        [\n                            new BABYLON.Vector4( 0.0, 0.0, -size.x, -size.y ),\n                            new BABYLON.Vector4( 0.0, 0.0, size.x,  size.y  ),\n\n                            new BABYLON.Vector4( 0.0, 0.0, -size.y, -size.z ),\n                            new BABYLON.Vector4( 0.0, 0.0, size.y,  size.z  ),\n\n                            new BABYLON.Vector4( 0.0, 0.0, -size.z, -size.x ),\n                            new BABYLON.Vector4( 0.0, 0.0, size.z,  size.x  ),\n                        ];\n                        break;\n                    }\n                }\n            }\n\n            const box:BABYLON.Mesh = BABYLON.MeshBuilder.CreateBox\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    width:  size.x,\n                    height: size.y,\n                    depth:  size.z,\n\n                    faceUV: faceUV,\n                },\n                scene.getNativeScene()\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                box,\n                position,\n                pivotAnchor,\n                size.x,\n                size.y,\n                size.z\n            );\n\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                texture,\n                true,\n                size.x,\n                size.z,\n                color,\n                materialAlpha,\n                emissiveColor\n            );\n\n            const volume:number = bz.MathUtil.getCubeVolume( size.x, size.y, size.z );\n\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                box,\n                rotation,\n                material,\n                physic,\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                volume\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a cylinder mesh.\n        *\n        *   @param scene           The scene where this mesh will be applied.\n        *   @param position        Where to place this mesh.\n        *   @param pivotAnchor     The anchor point of this mesh.\n        *   @param diameter        The diameter of the cylinder.\n        *   @param height          The height of the cylinder.\n        *   @param rotation        The initial rotation for all axis.\n        *   @param texture         The texture to apply.\n        *   @param color           The solid color to apply.\n        *   @param physic          The physical attributes to apply for this mesh.\n        *   @param materialAlpha   The opacity for this mesh.\n        *   @param emissiveColor   The emissive color for this material.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createCylinder\n        (\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            pivotAnchor   :bz.MeshPivotAnchor,\n            diameter      :number,\n            height        :number,\n            rotation      :BABYLON.Vector3,\n            texture       :bz.Texture,\n            color         :BABYLON.Color3,\n            physic        :bz.Physic,\n            materialAlpha :number,\n            emissiveColor :BABYLON.Color3\n        )\n        : BABYLON.Mesh\n        {\n            let faceUV:BABYLON.Vector4[] = [];\n\n            if ( texture !== null )\n            {\n                switch ( texture.getStrategyUV() )\n                {\n                    case bz.TextureUV.ALL_TO_ONE:\n                    {\n                        faceUV =\n                        [\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0, 1.0 ),\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0, 1.0  ),\n                            new BABYLON.Vector4( 0.0, 0.0, 1.0, 1.0 ),\n                        ];\n                        break;\n                    }\n\n                    case bz.TextureUV.TILED_BY_SIZE:\n                    {\n                        faceUV =\n                        [\n                            new BABYLON.Vector4( 0.0, 0.0, -diameter,               diameter ),\n                            new BABYLON.Vector4( 0.0, 0.0, -( diameter * Math.PI ), height   ),\n                            new BABYLON.Vector4( 0.0, 0.0, diameter,                diameter ),\n                        ];\n                        break;\n                    }\n                }\n            }\n\n            const cylinder:BABYLON.Mesh = BABYLON.MeshBuilder.CreateCylinder\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    diameter: diameter,\n                    height:   height,\n\n                    faceUV:   faceUV,\n                },\n                scene.getNativeScene()\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                cylinder,\n                position,\n                pivotAnchor,\n                diameter,\n                height,\n                diameter\n            );\n\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                texture,\n                true,\n                diameter,\n                height,\n                color,\n                materialAlpha,\n                emissiveColor\n            );\n\n            const volume:number = bz.MathUtil.getCylinderVolume( diameter, height );\n\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                cylinder,\n                rotation,\n                material,\n                physic,\n                BABYLON.PhysicsImpostor.CylinderImpostor,\n                volume\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a sphere.\n        *\n        *   @param scene         The scene where this mesh will be applied.\n        *   @param position      Where to place this mesh.\n        *   @param pivotAnchor   The anchor point of this mesh.\n        *   @param diameter      The diameter of the sphere.\n        *   @param rotation      The initial rotation for all axis.\n        *   @param texture       The texture to apply.\n        *   @param color         The solid color to apply.\n        *   @param physic        The physical attributes to apply for this mesh.\n        *   @param materialAlpha The opacity for this mesh.\n        *   @param emissiveColor The emissive color for this material.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createSphere\n        (\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            pivotAnchor   :bz.MeshPivotAnchor,\n            diameter      :number,\n            rotation      :BABYLON.Vector3,\n            texture       :bz.Texture,\n            color         :BABYLON.Color3,\n            physic        :bz.Physic,\n            materialAlpha :number,\n            emissiveColor :BABYLON.Color3\n        )\n        : BABYLON.Mesh\n        {\n            const sphere:BABYLON.Mesh = BABYLON.MeshBuilder.CreateSphere\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    diameter: diameter,\n                },\n                scene.getNativeScene()\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                sphere,\n                position,\n                pivotAnchor,\n                diameter,\n                diameter,\n                diameter\n            );\n\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                texture,\n                false,\n                diameter,\n                diameter,\n                color,\n                materialAlpha,\n                emissiveColor\n            );\n\n            const volume:number = bz.MathUtil.getSphereVolume( diameter );\n\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                sphere,\n                rotation,\n                material,\n                physic,\n                BABYLON.PhysicsImpostor.SphereImpostor,\n                volume\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a plane mesh. Shouldn't be used in a free 3d space because the side orientation is explicitly\n        *   required in order to calculate light effects correctly.\n        *\n        *   @param scene           The scene where this mesh will be applied.\n        *   @param position        Where to place this mesh.\n        *   @param pivotAnchor     The anchor point of this mesh.\n        *   @param width           Width  of the plane.\n        *   @param height          Height of the plane.\n        *   @param rotation        The initial rotation for all axis.\n        *   @param texture         The texture to apply.\n        *   @param color           The solid color to apply.\n        *   @param physic          The physical attributes to apply for this mesh.\n        *   @param materialAlpha   The opacity for this mesh.\n        *   @param emissiveColor   The emissive color for this material.\n        *   @param sideOrientation The orientation sattribute is required for correct light effects.\n        *\n        *   @return The created mesh.\n        *\n        *   @deprecated Lights will not automatically be calculated correctly by the babylon.JS engine!\n        ***************************************************************************************************************/\n        public static createPlane\n        (\n            scene           :bz.Scene,\n\n            position        :BABYLON.Vector3,\n            pivotAnchor     :bz.MeshPivotAnchor,\n            width           :number,\n            height          :number,\n            rotation        :BABYLON.Vector3,\n\n            texture         :bz.Texture,\n\n            color           :BABYLON.Color3,\n\n            physic          :bz.Physic,\n            materialAlpha   :number,\n            emissiveColor   :BABYLON.Color3,\n            sideOrientation :number\n        )\n        : BABYLON.Mesh\n        {\n            const plane:BABYLON.Mesh = BABYLON.MeshBuilder.CreatePlane\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    width:           width,\n                    height:          height,\n                    sideOrientation: sideOrientation,\n                },\n                scene.getNativeScene()\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                plane,\n                position,\n                pivotAnchor,\n                width,\n                height,\n                0.0\n            );\n\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                texture,\n                false,\n                width,\n                height,\n                color,\n                materialAlpha,\n                emissiveColor\n            );\n\n            const volume:number = bz.MathUtil.getCubeVolume( width, height, MeshFactory.FACE_DEPTH );\n\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                plane,\n                rotation,\n                material,\n                physic,\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                volume\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a line mesh.\n        *\n        *   @param scene       The scene where this mesh will be applied.\n        *   @param start       Start point of the line mesh.\n        *   @param end         End point of the line mesh.\n        *   @param pivotAnchor The anchor point of this mesh.\n        *   @param rotation    The initial rotation for all axis.\n        *   @param color       The solid color to apply.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createLine\n        (\n            scene       :BABYLON.Scene,\n\n            start       :BABYLON.Vector3,\n            end         :BABYLON.Vector3,\n            pivotAnchor :bz.MeshPivotAnchor,\n            rotation    :BABYLON.Vector3,\n\n            color       :BABYLON.Color4\n        )\n        : BABYLON.Mesh\n        {\n            const line:BABYLON.Mesh = BABYLON.MeshBuilder.CreateLines\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    points:\n                    [\n                        start,\n                        end,\n                    ],\n                    colors:\n                    [\n                        color,\n                        color,\n                    ],\n                    useVertexAlpha: true,\n                },\n                scene\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                line,\n                BABYLON.Vector3.Zero(),\n                pivotAnchor,\n                0.0,\n                0.0,\n                0.0\n            );\n\n            return MeshFactory.decorateMesh\n            (\n                scene,\n                line,\n                rotation,\n                null,\n                bz.Physic.NONE,\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                0.0\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a polygon mesh.\n        *\n        *   @param scene         The scene where this mesh will be applied.\n        *   @param points        All corner points for this polygon to create.\n        *   @param pivotAnchor   The anchor point of this mesh.\n        *   @param rotation      The initial rotation for all axis.\n        *   @param color         The solid color to apply.\n        *   @param physic        The physical attributes to apply for this mesh.\n        *   @param emissiveColor The emissive color for this material.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createPolygon\n        (\n            scene         :bz.Scene,\n\n            points        :BABYLON.Vector3[],\n\n            pivotAnchor   :bz.MeshPivotAnchor,\n            rotation      :BABYLON.Vector3,\n\n            color         :BABYLON.Color3,\n\n            physic        :bz.Physic,\n            emissiveColor :BABYLON.Color3\n        )\n        : BABYLON.Mesh\n        {\n            const polygon:BABYLON.Mesh = BABYLON.MeshBuilder.CreatePolygon\n            (\n                MeshFactory.createNextMeshId(),\n                {\n                    shape: points,\n/*\n                    faceColors:\n                    [\n                        color,\n                        color,\n                        color,\n                    ],\n*/\n                    depth: MeshFactory.FACE_DEPTH,\n                },\n                scene.getNativeScene()\n            );\n\n            bz.MeshManipulation.setPositionAndPivot\n            (\n                polygon,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                pivotAnchor,\n                0.0,\n                0.0,\n                0.0\n            );\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                null,\n                false,\n                0.0,\n                0.0,\n                color,\n                1.0,\n                emissiveColor\n            );\n\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                polygon,\n                rotation,\n                material,\n                physic,\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                1.0\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a decal.\n        *\n        *   @param scene         The scene where this mesh will be applied.\n        *   @param position      Where to place this mesh.\n        *   @param parentMesh    The mesh to apply this decal to.\n        *   @param normal        The normal of the mesh to apply the decal to.\n        *   @param size          The dimensions of this mesh for all axis.\n        *   @param rotation      The initial rotation for all axis.\n        *   @param indexZ        The z index for this material that prevents overlapping materials.\n        *   @param texture       The texture to apply.\n        *   @param color         The solid color to apply.\n        *   @param materialAlpha The opacity for this mesh.\n        *   @param emissiveColor The emissive color for this material.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createDecal\n        (\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            parentMesh    :BABYLON.AbstractMesh,\n            normal        :BABYLON.Vector3,\n            size          :BABYLON.Vector3,\n            rotation      :number,\n            indexZ        :number,\n            texture       :bz.Texture,\n            color         :BABYLON.Color3,\n            materialAlpha :number,\n            emissiveColor :BABYLON.Color3\n        )\n        : BABYLON.Mesh\n        {\n            const decal:BABYLON.Mesh = BABYLON.MeshBuilder.CreateDecal\n            (\n                MeshFactory.createNextMeshId(),\n                parentMesh,\n                {\n                    position: position,\n                    normal:   normal,\n                    size:     size,\n                    angle:    rotation,\n                }\n            );\n\n            const material:BABYLON.StandardMaterial = scene.getMaterialSystem().createMaterial\n            (\n                scene.getNativeScene(),\n                texture,\n                true,\n                size.x,\n                size.y,\n                color,\n                materialAlpha,\n                emissiveColor\n            );\n            material.zOffset = ( -1 - indexZ );\n/*\n            // why is the 1st bullet hole always flickering?\n            console.log( '>> parentMesh material z: ' + parentMesh.material.zOffset );\n            console.log( '>>>>>> bullet hole z: '     + material.zOffset );\n*/\n            return MeshFactory.decorateMesh\n            (\n                scene.getNativeScene(),\n                decal,\n                null,\n                material,\n                bz.Physic.NONE,\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                0.0\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a skybox mesh from a cube texture ( six images ).\n        *\n        *   @param scene   The scene to apply this mesh to.\n        *   @param skyBox  The skybox to create.\n        *   @param opacity The alpha value for the skybox texture.\n        *\n        *   @return The created skybox mesh.\n        ***************************************************************************************************************/\n        public static createSkyBoxCube\n        (\n            scene   :BABYLON.Scene,\n            skyBox  :bz.SkyBoxFile,\n            opacity :number\n        )\n        : BABYLON.Mesh\n        {\n            const skyboxMaterial:BABYLON.StandardMaterial = new BABYLON.StandardMaterial\n            (\n                bz.MaterialSystem.createNextMaterialId(),\n                scene\n            );\n            const skyBoxName:string = skyBox.toString();\n\n            skyboxMaterial.backFaceCulling   = false;\n            skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture\n            (\n                bz.SettingResource.PATH_IMAGE_SKYBOX + skyBoxName + '/' + skyBoxName,\n                scene\n            );\n            skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n\n            skyboxMaterial.diffuseColor  = bz.SettingColor.COLOR_RGB_BLACK;\n            skyboxMaterial.specularColor = bz.SettingColor.COLOR_RGB_BLACK;\n/*\n            skyboxMaterial.emissiveColor = bz.SettingGame.COLOR_BLACK;\n*/\n            skyboxMaterial.alpha = opacity;\n            skyboxMaterial.disableLighting = true;\n\n            const skybox:BABYLON.Mesh = BABYLON.MeshBuilder.CreateBox\n            (\n                MeshFactory.createNextMeshId(),\n                { size: 1000.0 },\n                scene\n            );\n            skybox.infiniteDistance = true;\n            skybox.material         = skyboxMaterial;\n\n            return skybox;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a skybox mesh from a sphere texture ( single spherical image ).\n        *\n        *   @param scene   The scene where this mesh will be applied.\n        *   @param skyBox  The skybox to use.\n        *   @param opacity The alpha value for the skybox texture.\n        *\n        *   @return The created mesh.\n        ***************************************************************************************************************/\n        public static createSkyBoxSphere\n        (\n            scene   :BABYLON.Scene,\n            skyBox  :bz.SkyBoxFile,\n            opacity :number\n        )\n        : BABYLON.Mesh\n        {\n            if ( document.getElementById( 'vertexShaderCode' ) === null )\n            {\n                const vertexShaderCodeScript:HTMLScriptElement = document.createElement( 'script' );\n                vertexShaderCodeScript.type = 'application/vertexShader';\n                vertexShaderCodeScript.id   = 'vertexShaderCode';\n                vertexShaderCodeScript.innerHTML = '                                    ' +\n                '   precision highp float;                                              ' +\n                '   attribute vec3 position;                                            ' +\n                '   uniform mat4 world;                                                 ' +\n                '   uniform mat4 viewProjection;                                        ' +\n                '   varying vec3 vDirectionW;                                           ' +\n                '   void main(void) {                                                   ' +\n                '           gl_Position =  viewProjection * world * vec4(position, 1.0);' +\n                '           vDirectionW = normalize(vec3(world * vec4(position, 0.0))); ' +\n                '   }';\n                document.head.appendChild( vertexShaderCodeScript );\n            }\n\n            if ( document.getElementById( 'fragmentShaderCode' ) === null )\n            {\n                const fragmentShaderCodeScript:HTMLScriptElement = document.createElement( 'script' );\n                fragmentShaderCodeScript.type = 'application/fragmentShader';\n                fragmentShaderCodeScript.id   = 'fragmentShaderCode';\n                fragmentShaderCodeScript.innerHTML = '                                ' +\n                '    precision highp float;                                           ' +\n                '    uniform sampler2D textureSampler;                                ' +\n                '    varying vec3 vDirectionW;                                        ' +\n                '    void main(void) {                                                ' +\n                '        vec3 direction = normalize(vDirectionW);                     ' +\n                '        float t = clamp(direction.y * -0.5 + 0.5, 0.0, 1.0);         ' +\n                '        float s = atan(direction.z, direction.x) * 0.15915494 + 0.5; ' +\n                '        vec3 vReflectionUVW = vec3(s, t, 0);                         ' +\n                '        vec2 coords = vReflectionUVW.xy;                             ' +\n                '        coords.x = 1.0 - coords.x;                                   ' +\n                '        coords.y = 1.0 - coords.y;                                   ' +\n                '        gl_FragColor = texture2D(textureSampler, coords);            ' +\n                '    }';\n                document.head.appendChild( fragmentShaderCodeScript );\n            }\n\n            const skyBoxName:string = skyBox.toString();\n\n            const texture:BABYLON.Texture = new BABYLON.Texture\n            (\n                bz.SettingResource.PATH_IMAGE_SKYBOX + skyBoxName + '/' + skyBoxName + '.jpg',\n                scene\n            );\n\n            const skyboxMaterial:BABYLON.ShaderMaterial = new BABYLON.ShaderMaterial(\n                bz.MaterialSystem.createNextMaterialId(),\n                scene,\n                {\n                    vertexElement: 'vertexShaderCode',\n                    fragmentElement: 'fragmentShaderCode',\n                },\n                {\n                    needAlphaBlending: true,\n                    attributes: ['position'],\n                    uniforms:   ['world', 'viewProjection'],\n                    samplers:   ['textureSampler'],\n                }\n            );\n            skyboxMaterial.setTexture( 'textureSampler', texture );\n            skyboxMaterial.backFaceCulling = false;\n\n            const skybox:BABYLON.Mesh = BABYLON.Mesh.CreateBox\n            (\n                MeshFactory.createNextMeshId(),\n                100.0,\n                scene\n            );\n            skybox.material         = skyboxMaterial;\n            skybox.scaling          = new BABYLON.Vector3(-1, -1, -1);\n            skybox.infiniteDistance = true;\n\n            return skybox;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a clone of the imported model with the specified filename.\n        *\n        *   @param scene        The scene where this imported mesh is cloned into.\n        *   @param fileName     The filename of the imported mesh to return a clone for.\n        *   @param position     The position for this mesh to show up.\n        *   @param physic       Specifies the physicsl behaviour of this imported model.\n        *                       <code>null</code> to use the native physical attributes from the imported model.\n        *   @param compoundType Specifies the mesh compound type for this imported model.\n        *\n        *   @return A clone of the model with the specified filename.\n        ***************************************************************************************************************/\n        public static createImportedModel\n        (\n            scene        :bz.Scene,\n            fileName     :string,\n            position     :BABYLON.Vector3,\n            physic       :bz.Physic,\n            compoundType :bz.ModelCompoundType\n        )\n        : bz.Model\n        {\n            const originalModel :bz.Model = scene.getModelSystem().getOriginalModel( fileName );\n            const clonedModel   :bz.Model = originalModel.clone();\n\n            // translate cloned model by position\n            clonedModel.translatePosition( position );\n\n            // extract or create physics impostors and assign them to the cloned model\n            let impostors :bz.PhysicImpostorParams[] = [];\n            if ( physic === null )\n            {\n                impostors = originalModel.getImpostors()\n            }\n            else\n            {\n                for ( let i:number = 0; i < originalModel.getMeshCount(); ++i )\n                {\n                    impostors.push( physic.createPhysicImpostorParams( ( 1.0 / originalModel.getMeshCount() ) ) );\n                }\n            }\n            clonedModel.assignImpostors( scene.getNativeScene(), impostors );\n\n            // create compound parent if requested\n            switch ( compoundType )\n            {\n                case bz.ModelCompoundType.NONE:\n                {\n                    break;\n                }\n\n                case bz.ModelCompoundType.COMPOUND_SHOT_OFF_DISABLED:\n                {\n                    clonedModel.addCompoundMesh( scene, position, false );\n                    break;\n                }\n\n                case bz.ModelCompoundType.COMPOUND_SHOT_OFF_ENABLED:\n                {\n                    clonedModel.addCompoundMesh( scene, position, true );\n                    break;\n                }\n            }\n\n            return clonedModel;\n        }\n\n        /** ************************************************************************************************************\n        *   Adds general mesh properties.\n        *\n        *   @param scene               The scene where this mesh will be applied.\n        *   @param mesh                The mesh to decorate.\n        *   @param rotation            The initial rotation for all axis.\n        *   @param material            The material to apply on this mesh.\n        *   @param physic              The physical attributes to apply for this mesh.\n        *   @param physicsImpostorType The kind of physic impostor to apply to this mesh.\n        *   @param volume              The calculated volume of the mesh.\n        ***************************************************************************************************************/\n        private static decorateMesh\n        (\n            scene               :BABYLON.Scene,\n            mesh                :BABYLON.Mesh,\n            rotation            :BABYLON.Vector3,\n            material            :BABYLON.StandardMaterial,\n            physic              :bz.Physic,\n            physicsImpostorType :number,\n            volume              :number\n        )\n        : BABYLON.Mesh\n        {\n            mesh.material       = material;\n            mesh.receiveShadows = bz.SettingEngine.ENABLE_SHADOWS;\n\n            if ( rotation !== null )\n            {\n                bz.MeshManipulation.setAbsoluteRotationXYZ( mesh, rotation.x, rotation.y, rotation.z );\n            }\n\n            // buggy physics for primitives since babylon.JS 4.0.\n            physic.applyPhysicToMesh\n            (\n                scene,\n                mesh,\n                volume,\n                physicsImpostorType\n            );\n\n            return mesh;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Offers static functionality for manipulating meshes.\n    *******************************************************************************************************************/\n    export abstract class MeshManipulation\n    {\n        /** ************************************************************************************************************\n        *   Specifies the absolute rotation of the specified mesh for all axis.\n        *\n        *   @param mesh The mesh to set the rotation for.\n        *   @param rotX The x axis rotation (pitch)\n        *   @param rotY The y axis rotation (yaw).\n        *   @param rotZ The z axis rotation (roll).\n        ***************************************************************************************************************/\n        public static setAbsoluteRotationXYZ( mesh:BABYLON.AbstractMesh, rotX:number, rotY:number, rotZ:number ) : void\n        {\n            mesh.rotationQuaternion = BABYLON.Quaternion.RotationYawPitchRoll\n            (\n                bz.MathUtil.degreesToRad( rotY ),\n                bz.MathUtil.degreesToRad( rotX ),\n                bz.MathUtil.degreesToRad( rotZ )\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the position and pivot to the specified mesh.\n        *\n        *   @param mesh     The mesh to apply position and pivot to.\n        *   @param position Where to place this mesh.\n        ***************************************************************************************************************/\n        public static translatePosition\n        (\n            mesh     :BABYLON.AbstractMesh,\n            position :BABYLON.Vector3\n        )\n        : void\n        {\n            mesh.position.x += position.x;\n            mesh.position.y += position.y;\n            mesh.position.z += position.z;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the position and pivot to the specified mesh.\n        *\n        *   @param mesh        The mesh to apply position and pivot to.\n        *   @param position    Where to place this mesh.\n        *   @param pivotAnchor The desired pivot anchor kind to set for this mesh.\n        *   @param width       The dimension x of this mesh.\n        *   @param height      The dimension y of this mesh.\n        *   @param depth       The dimension z of this mesh.\n        ***************************************************************************************************************/\n        public static setPositionAndPivot\n        (\n            mesh        :BABYLON.AbstractMesh,\n            position    :BABYLON.Vector3,\n            pivotAnchor :bz.MeshPivotAnchor,\n\n            width       :number,\n            height      :number,\n            depth       :number\n        )\n        : void\n        {\n            switch ( pivotAnchor )\n            {\n/*\n                case bz.MeshPivotAnchor.LOWEST_XYZ:\n                {\n                    mesh.position = position;\n                    mesh.setPivotMatrix\n                    (\n                        BABYLON.Matrix.Translation\n                        (\n                            ( width  / 2 ),\n                            ( height / 2 ),\n                            ( depth  / 2 )\n                        ),\n                        true\n                    );\n                    break;\n                }\n*/\n/*\n                case bz.MeshPivotAnchor.CENTER_XZ_LOWEST_Y:\n                {\n                    mesh.position = position;\n                    mesh.setPivotMatrix\n                    (\n                        BABYLON.Matrix.Translation\n                        (\n                            0.0,\n                            ( height / 2 ),\n                            0.0\n                        ),\n                        false\n                    );\n                    break;\n                }\n*/\n                // TODO till the pivot matrix is buggy in babylon.JS 4.0, all pivots shall stay on the center\n                case bz.MeshPivotAnchor.LOWEST_XYZ:\n                case bz.MeshPivotAnchor.CENTER_XZ_LOWEST_Y:\n                case bz.MeshPivotAnchor.CENTER_XYZ:\n                {\n                    mesh.position = position;\n                    mesh.setPivotMatrix\n                    (\n                        BABYLON.Matrix.Translation\n                        (\n                            0.0,\n                            0.0,\n                            0.0\n                        ),\n                        false\n                    );\n                    break;\n                }\n\n                case bz.MeshPivotAnchor.NONE:\n                {\n                    mesh.position = new BABYLON.Vector3(\n                        position.x + ( width  / 2 ),\n                        position.y + ( height / 2 ),\n                        position.z + ( depth  / 2 )\n                    );\n                    break;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Starts a stored animation for the given mesh in the specified frame range.\n        *\n        *   @param scene      The scene to perform the animation in.\n        *   @param mesh       The mesh to perform a predefined animation.\n        *   @param startFrame The number of the frame to start the animation.\n        *   @param endFrame   The number of the frame to end the animation.\n        *   @param loop       Specifies if the animation shall be looped.\n        *   @param onFinish   The method to perform when the amimation has completed.\n        *                     Will never be invoked if the animation is looped.\n        ***************************************************************************************************************/\n        public static performAnimation\n        (\n            scene       :BABYLON.Scene,\n            mesh        :BABYLON.AbstractMesh,\n            startFrame  :number,\n            endFrame    :number,\n            loop        :boolean,\n            onFinish    :() => void\n        )\n        : void\n        {\n            const SPEED_RATIO:number = 1.0;\n\n            scene.beginAnimation\n            (\n                mesh,\n                startFrame,\n                endFrame,\n                loop,\n                SPEED_RATIO,\n                onFinish\n            );\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies all valid anchors for a mesh.\n    *******************************************************************************************************************/\n    export enum MeshPivotAnchor\n    {\n        /** No anchor for static non-moving objects like grounds. */\n        NONE,\n\n        /** The anchor is the lowest XYZ point. */\n        LOWEST_XYZ,\n\n        /** The anchor is the exact center point of the mesh. */\n        CENTER_XYZ,\n\n        /** The anchor if the bottom Y point and the center XZ point. */\n        CENTER_XZ_LOWEST_Y,\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the physical behaviour of a body.\n    *******************************************************************************************************************/\n    export class Physic\n    {\n        /** A non-collidable and non-gravitational affected physical state. */\n        public  static  readonly        NONE                :Physic             = new Physic\n        (\n            bz.PhysicState.NONE,\n            null,\n            bz.PhysicFriction.NONE,\n            bz.PhysicRestitution.NONE\n        );\n\n        /** The player has very special physical attributes with the primal goal to keep the user entertained. */\n        public  static  readonly        PLAYER_HUMAN        :Physic             = new Physic\n        (\n            bz.PhysicState.MOVABLE,\n            bz.SettingPlayerHuman.MASS,\n            bz.PhysicFriction.NONE,\n            bz.PhysicRestitution.NONE\n        );\n\n        /** The player has very special physical attributes with the primal goal to keep the user entertained. */\n        public  static  readonly        PLAYER_SPACESHIP    :Physic             = new Physic\n        (\n            bz.PhysicState.STATIC,\n            bz.PhysicDensity.STATIC,\n            bz.PhysicFriction.NONE,\n            bz.PhysicRestitution.NONE\n        );\n\n        /** Props for light wood. */\n        public  static  readonly        LIGHT_WOOD      :Physic                 = new Physic\n        (\n            bz.PhysicState.MOVABLE,\n            bz.PhysicDensity.LIGHT_WOOD,\n            bz.PhysicFriction.HIGH,\n            bz.PhysicRestitution.NONE\n        );\n\n        /** Props for solid wood. */\n        public  static  readonly        SOLID_WOOD      :Physic                 = new Physic\n        (\n            bz.PhysicState.MOVABLE,\n            bz.PhysicDensity.SOLID_WOOD,\n            bz.PhysicFriction.MEDIUM,\n            bz.PhysicRestitution.MEDIUM\n        );\n\n        /** Props for office chair. */\n        public  static  readonly        CONCRETE        :Physic                 = new Physic\n        (\n            bz.PhysicState.MOVABLE,\n            bz.PhysicDensity.CONCRETE,\n            bz.PhysicFriction.HIGH,\n            bz.PhysicRestitution.NONE\n        );\n\n        /** Props for a physical compound object. */\n        public  static  readonly        COMPOUND        :Physic                 = new Physic\n        (\n            bz.PhysicState.MOVABLE,\n            bz.PhysicDensity.DEFAULT,\n            bz.PhysicFriction.MEDIUM,\n            bz.PhysicRestitution.MEDIUM\n        );\n\n        /** Physical properties for a non-moving and collidable body. */\n        public  static  readonly        STATIC          :Physic                 = new Physic\n        (\n            bz.PhysicState.STATIC,\n            bz.PhysicDensity.STATIC,\n            bz.PhysicFriction.MEDIUM,\n            bz.PhysicRestitution.MEDIUM\n        );\n\n        /** The general physic state of this physics setting. */\n        private         readonly        state           :bz.PhysicState         = null;\n        /** The density of this physics setting. */\n        private         readonly        density         :bz.PhysicDensity       = null;\n        /** The friction of this physics setting */\n        private         readonly        friction        :bz.PhysicFriction      = null;\n        /** The density of this physics setting */\n        private         readonly        restitution     :bz.PhysicRestitution   = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new set of physical properties.\n        *\n        *   @param state       The general physical state for this setting.\n        *   @param density     The density of this physical body setting.\n        *   @param friction    The friction of this physical body setting.\n        *   @param restitution The restitution of this physical body setting.\n        ***************************************************************************************************************/\n        private constructor\n        (\n            state       :bz.PhysicState,\n            density     :bz.PhysicDensity,\n            friction    :bz.PhysicFriction,\n            restitution :bz.PhysicRestitution\n        )\n        {\n            this.state       = state;\n            this.density     = density;\n            this.friction    = friction;\n            this.restitution = restitution;\n        }\n\n        /** ************************************************************************************************************\n        *   Applies the specified physical behaviour to the given mesh.\n        *\n        *   @param scene        The babylon.JS scene that manages this impostor.\n        *   @param mesh         The native babylon.JS mesh to set the physical behaviour for.\n        *   @param volume       The calculated volume of the mesh.\n        *   @param impostorType The type of physics impostor to set.\n        ***************************************************************************************************************/\n        public applyPhysicToMesh\n        (\n            scene        :BABYLON.Scene,\n            mesh         :BABYLON.AbstractMesh,\n            volume       :number,\n            impostorType :number\n        )\n        : void\n        {\n            switch ( this.state )\n            {\n                case bz.PhysicState.STATIC:\n                case bz.PhysicState.MOVABLE:\n                {\n                    const impostorParams:BABYLON.PhysicsImpostorParameters = this.createImpostorParams( volume );\n\n                    mesh.checkCollisions = bz.SettingDebug.DEBUG_CAMERA_ENABLE_COLLISIONS;\n                    mesh.physicsImpostor = new BABYLON.PhysicsImpostor\n                    (\n                        mesh,\n                        impostorType,\n                        impostorParams,\n                        scene\n                    );\n                    mesh.showBoundingBox = bz.SettingDebug.SHOW_MESH_BOUNDING_BOXES;\n\n                    break;\n                }\n\n                case bz.PhysicState.NONE:\n                {\n                    // no collisions or impostor\n                    break;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the physical impostor parameters for these physic set.\n        *\n        *   @param volume The volume of the mesh to create the impostor parameters for.\n        *\n        *   @return The impostor parameters for these physical settings.\n        ***************************************************************************************************************/\n        public createPhysicImpostorParams( volume:number ) : bz.PhysicImpostorParams\n        {\n            return bz.PhysicImpostorParams.fromParams\n            (\n                BABYLON.PhysicsImpostor.BoxImpostor,\n                ( volume * this.density ),\n                this.friction,\n                this.restitution\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the physical impostor parameters for these physic set.\n        *\n        *   @param volume The volume of the mesh to create the impostor parameters for.\n        *\n        *   @return The impostor parameters for these physical settings.\n        ***************************************************************************************************************/\n        private createImpostorParams( volume:number ) : BABYLON.PhysicsImpostorParameters\n        {\n            let mass:number = 0.0;\n\n            switch ( this.state )\n            {\n                case bz.PhysicState.STATIC:\n                {\n                    mass = 0.0;\n                    break;\n                }\n\n                case bz.PhysicState.MOVABLE:\n                {\n                    mass = ( volume * this.density );\n                    break;\n                }\n\n// TODO never passed if Player is an imported model !! .. enable explicit physics setting!\n/*\n                case bz.PhysicState.PLAYER:\n                {\n                    return {\n                        mass:                               bz.SettingPlayerHuman.MASS,\n                        friction:                           0.0,\n                        restitution:                        0.0,\n                        disableBidirectionalTransformation: false,\n                    };\n                }\n*/\n                case bz.PhysicState.NONE:\n                {\n                    break;\n                }\n            }\n\n            return {\n                mass:                               mass,\n                friction:                           this.friction,\n                restitution:                        this.restitution,\n                disableBidirectionalTransformation: false,\n            };\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies densities with their the physical behaviour of a body.\n    *******************************************************************************************************************/\n    export enum PhysicDensity\n    {\n        /** The density value for static bodies. */\n        STATIC     = 0.0,\n\n        /** The density value for 'light wood'. */\n        LIGHT_WOOD = 0.5,\n        /** The density value for 'solid wood'. */\n        SOLID_WOOD = 1.0,\n\n        /** The default density. */\n        DEFAULT    = 1.0,\n\n        /** The density value for 'concrete'. */\n        CONCRETE   = 1.5,\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the surface friction for bodies.\n    *******************************************************************************************************************/\n    export enum PhysicFriction\n    {\n        /** No friction. */\n        NONE = 0.0,\n\n        /** Medium friction. */\n        MEDIUM = 0.5,\n\n        /** High friction. */\n        HIGH = 1.0,\n    }\n","\n    /** ****************************************************************************************************************\n    *   The primal information from a native babylon.JS physics impostor.\n    *   This class is designed to extract and store the most important information from the native impostor class.\n    *******************************************************************************************************************/\n    export class PhysicImpostorParams\n    {\n        /** The impostor type. */\n        public                  type                        :number                     = 0;\n        /** The physical mass. */\n        public                  mass                        :number                     = 0;\n        /** The physical friction. */\n        public                  friction                    :number                     = 0;\n        /** The physical restitution. */\n        public                  restitution                 :number                     = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a babylon.JS physics impostor from this params object and applies it onto the specified mesh.\n        *\n        *   @param mesh  The mesh to apply the babylon.JS physics impostor onto.\n        *   @param scene The scene where the created physics impostor will be added to.\n        ***************************************************************************************************************/\n        public applyPhysicsImpostor( mesh:BABYLON.AbstractMesh, scene:BABYLON.Scene ) : void\n        {\n            mesh.physicsImpostor = new BABYLON.PhysicsImpostor\n            (\n                mesh,\n                this.type,\n                {\n                    mass:         this.mass,\n                    friction:     this.friction,\n                    restitution:  this.restitution,\n\n                    // TODO try on simple objects?\n                    ignoreParent: false,\n                },\n                scene\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the impostor params object from the specified babylon.JS physics impostor.\n        *\n        *   @param impostor The babylon.JS impostor to create the impostor params from.\n        *\n        *   @return The physical parameter compound object.\n        ***************************************************************************************************************/\n        public static fromImpostor( impostor:BABYLON.PhysicsImpostor ) : PhysicImpostorParams\n        {\n            const ret:PhysicImpostorParams = new PhysicImpostorParams();\n\n            ret.type        = impostor.type;\n            ret.mass        = impostor.mass;\n            ret.friction    = impostor.friction;\n            ret.restitution = impostor.restitution;\n\n            return ret;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the impostor params object from the specified primitive physical values.\n        *\n        *   @param type        The impostor type ( box or sphere ).\n        *   @param mass        The physical mass.\n        *   @param friction    The physical friction.\n        *   @param restitution The physical restitution.\n        *\n        *   @return The physical parameter compound object.\n        ***************************************************************************************************************/\n        public static fromParams\n        (\n            type        :number,\n            mass        :number,\n            friction    :number,\n            restitution :number\n        )\n        : PhysicImpostorParams\n        {\n            const ret:PhysicImpostorParams = new PhysicImpostorParams();\n\n            ret.type        = type;\n            ret.mass        = mass;\n            ret.friction    = friction;\n            ret.restitution = restitution;\n\n            return ret;\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the bodie's physical restitution.\n    *******************************************************************************************************************/\n    export enum PhysicRestitution\n    {\n        /** No restitution. */\n        NONE = 0.0,\n\n        /** Medium restitution. */\n        MEDIUM = 0.5,\n\n        /** High restitution. */\n        HIGH = 1.0,\n    }\n","\n    /** ****************************************************************************************************************\n    *   The general physic state of a mesh.\n    *******************************************************************************************************************/\n    export enum PhysicState\n    {\n        /** Specifies a non-collidable object without any physical behaviour. */\n        NONE,\n\n        /** Specifies a collidable and non-moving object. */\n        STATIC,\n\n        /** Specifies a collidable and movable object. */\n        MOVABLE,\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Represents the game scene. It wraps the native babylon.JS scene and physics engine\n    *   and contains loaders for all resource systems ( materials/textures, sprites, sounds, models ).\n    *******************************************************************************************************************/\n    export class Scene\n    {\n        /** The current babylon.JS scene. */\n        private                     babylonScene                :BABYLON.Scene                      = null;\n        /** The physics plugin being used in the scene. */\n        private                     physicsPlugin               :BABYLON.IPhysicsEnginePlugin       = null;\n\n        /** The material system. */\n        private                     materialSystem              :bz.MaterialSystem                  = null;\n        /** The sprite system. */\n        private                     spriteSystem                :bz.SpriteSystem                    = null;\n        /** The sound system. */\n        private                     soundSystem                 :bz.SoundSystem                     = null;\n        /** The mesh import system. */\n        private                     modelSystem                 :bz.ModelSystem                     = null;\n\n        /** The callback to invoke when the scene is fully loaded. */\n        private                     onLoadingComplete           :() => void                         = null;\n\n        /** Specifies if the physics are currently running. */\n        private                     physicsRunning              :boolean                            = false;\n\n        /** ************************************************************************************************************\n        *   Inits the babylon.JS scene.\n        *\n        *   @param engine            The game engine.\n        *   @param onLoadingComplete The callback to invoke when the scene is fully loaded.\n        ***************************************************************************************************************/\n        public init( engine:bz.Engine, onLoadingComplete:() => void ) : void\n        {\n            this.onLoadingComplete = onLoadingComplete;\n\n            // create babylon.JS scene\n            this.babylonScene = engine.createNewScene();\n\n            // set default scene clear color\n            this.babylonScene.clearColor = bz.SettingColor.COLOR_RGBA_BLACK_OPAQUE;\n\n            // enable debug collisions for free debug camera\n            this.babylonScene.collisionsEnabled = bz.SettingDebug.DEBUG_CAMERA_ENABLE_COLLISIONS;\n\n            // show the babylon.JS debug layer\n            if ( bz.SettingDebug.SHOW_SCENE_DEBUG_PANEL )\n            {\n                this.babylonScene.debugLayer.show().then(\n                    () :void => {\n                        // no need to handle this promise fullfillment\n                    } )\n                    .catch( () :void => {\n                        // no need to catch this promise error\n                    }\n                );\n            }\n\n            // create physics engine\n            this.createPhysicsEngine();\n\n            // init all materials\n            bz.Debug.init.log( 'Init materials' );\n            this.materialSystem = new bz.MaterialSystem( bz.Texture.ALL_TEXTURES );\n            this.materialSystem.load( this.babylonScene );\n\n            // init all sprites\n            bz.Debug.init.log( 'Init sprites' );\n            this.spriteSystem = new bz.SpriteSystem( bz.SpriteFile.ALL_SPRITE_FILES );\n            this.spriteSystem.load( this.babylonScene );\n\n            // init all sounds\n            bz.Debug.init.log( 'Init sounds' );\n            this.soundSystem = new bz.SoundSystem(\n                bz.SoundFile.ALL_SOUND_FILES,\n                () => { this.onSoundsLoaded(); }\n            );\n            this.soundSystem.load( this.babylonScene );\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers a reference to the native babylon.JS scene.\n        *\n        *   @return The babylon.JS scene.\n        ***************************************************************************************************************/\n        public getNativeScene() : BABYLON.Scene\n        {\n            return this.babylonScene;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the material system.\n        *\n        *   @return The material system.\n        ***************************************************************************************************************/\n        public getMaterialSystem() : bz.MaterialSystem\n        {\n            return this.materialSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the sprite system.\n        *\n        *   @return The sprite system.\n        ***************************************************************************************************************/\n        public getSpriteSystem() : bz.SpriteSystem\n        {\n            return this.spriteSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the model system.\n        *\n        *   @return The model system.\n        ***************************************************************************************************************/\n        public getModelSystem() : bz.ModelSystem\n        {\n            return this.modelSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the sound system.\n        *\n        *   @return The sound system.\n        ***************************************************************************************************************/\n        public getSoundSystem() : bz.SoundSystem\n        {\n            return this.soundSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Renders the babylon.JS scene.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            this.babylonScene.render();\n        }\n\n        /** ************************************************************************************************************\n        *   Toggles the state of the physics engine.\n        ***************************************************************************************************************/\n        public togglePhysics() : void\n        {\n            this.physicsRunning = !this.physicsRunning;\n\n            this.enablePhysics( this.physicsRunning );\n        }\n\n        /** ************************************************************************************************************\n        *   Enables or disables physics for the native physics engine.\n        *\n        *   @param enabled Specifies if the physics engine shall be enabled or disabled.\n        ***************************************************************************************************************/\n        public enablePhysics( enabled:boolean ) : void\n        {\n            if ( enabled )\n            {\n                this.physicsPlugin.setTimeStep( bz.SettingEngine.PHYSICS_TIME_STEP_DEFAULT );\n                this.physicsRunning = true;\n            }\n            else\n            {\n                this.physicsPlugin.setTimeStep( bz.SettingEngine.PHYSICS_TIME_STEP_PAUSED );\n                this.physicsRunning = false;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Disables fog for the native scene.\n        ***************************************************************************************************************/\n        public disableFog() : void\n        {\n            this.babylonScene.fogMode = BABYLON.Scene.FOGMODE_NONE;\n        }\n\n        /** ************************************************************************************************************\n        *   Enables fog for the native scene.\n        *\n        *   @param color   The fog color to set or <code>null</code> if no fog shall be set.\n        *   @param density The fog density.\n        ***************************************************************************************************************/\n        public enableFog( color:BABYLON.Color3, density:number ) : void\n        {\n            // Fog Mode '2' is faster!\n            this.babylonScene.fogMode    = BABYLON.Scene.FOGMODE_EXP;\n            this.babylonScene.fogColor   = color;\n\n            // for exponential mode\n            this.babylonScene.fogDensity = density;\n/*\n            // for linear mode\n            this.babylonScene.fogStart = 20.0;\n            this.babylonScene.fogEnd = 60.0;\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Constructs the physics engine for the babylon.JS scene.\n        ***************************************************************************************************************/\n        private createPhysicsEngine() : void\n        {\n            // create physics plugin\n            this.physicsPlugin = new BABYLON.CannonJSPlugin\n            (\n                true,\n                bz.SettingEngine.PHYSICS_ENGINE_ITERATIONS\n            );\n\n            // stop physics engine immediately\n            this.enablePhysics( false );\n\n            // enable physics engine and stop it immediately in order to prevent unwanted startup impulses!\n            this.babylonScene.enablePhysics\n            (\n                bz.SettingStage.STAGE_GRAVITY_GLOBAL,\n                this.physicsPlugin\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when all sounds are loaded completely.\n        ***************************************************************************************************************/\n        private onSoundsLoaded() : void\n        {\n            // init model importer\n            bz.Debug.init.log( 'Init model importer' );\n            this.modelSystem = new bz.ModelSystem\n            (\n                bz.ModelFile.ALL_MESH_FILES,\n                this.onLoadingComplete\n            );\n            this.modelSystem.load( this.babylonScene );\n        };\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies all textures and materials.\n    *******************************************************************************************************************/\n    export class MaterialSystem\n    {\n        /** Next ID to assign for material creation. */\n        private     static              nextMaterialId              :number                 = 0;\n\n        /** All textures to load. */\n        private             readonly    textures                    :bz.Texture[]           = [];\n\n        /** ************************************************************************************************************\n        *   Creates a new material system.\n        *\n        *   @param textures All textures to load.\n        ***************************************************************************************************************/\n        public constructor( textures:bz.Texture[] )\n        {\n            this.textures = textures;\n        }\n\n        /** ************************************************************************************************************\n        *   Inits all materials being used in the game.\n        *\n        *   @param scene The babylon.JS scene to append all textures to.\n        ***************************************************************************************************************/\n        public load( scene:BABYLON.Scene ) : void\n        {\n            // load all texture images\n            for ( const texture of this.textures )\n            {\n                texture.loadTexture( scene );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a material from the given texture or color.\n        *\n        *   @param scene              The scene where the new material to creat.\n        *   @param texture            The desired texture.\n        *   @param ommitTextureTiling Specifies if tiling for the given texture shall be omitted.\n        *   @param sizeU              The texture U size for the texture.\n        *   @param sizeV              The texture V size for the texture.\n        *   @param color              The desired solid color to apply.\n        *   @param alpha              The opacity for the applied texture.\n        *   @param emissiveColor      The emissive color for this material.\n        ***************************************************************************************************************/\n        public createMaterial\n        (\n            scene              :BABYLON.Scene,\n            texture            :bz.Texture,\n            ommitTextureTiling :boolean,\n\n            sizeU              :number,\n            sizeV              :number,\n\n            color              :BABYLON.Color3,\n            alpha              :number,\n            emissiveColor      :BABYLON.Color3\n        )\n        : BABYLON.StandardMaterial\n        {\n            const material:BABYLON.StandardMaterial = new BABYLON.StandardMaterial\n            (\n                bz.MaterialSystem.createNextMaterialId(),\n                scene\n            );\n\n            if ( texture !== null )\n            {\n                let textureU:number = -1;\n                let textureV:number = -1;\n\n                if ( !ommitTextureTiling )\n                {\n                    switch ( texture.getStrategyUV() )\n                    {\n                        case bz.TextureUV.TILED_BY_SIZE:\n                        {\n                            textureU = sizeU;\n                            textureV = sizeV;\n                            break;\n                        }\n\n                        case bz.TextureUV.ALL_TO_ONE:\n                        {\n                            textureU = 1.0;\n                            textureV = 1.0;\n                            break;\n                        }\n                    }\n                }\n\n                material.diffuseTexture = MaterialSystem.createTexture\n                (\n                    texture,\n                    textureU,\n                    textureV\n                );\n\n                material.backFaceCulling = texture.hasAlpha();\n            }\n            else if ( color !== null )\n            {\n                material.diffuseColor    = color;\n                material.backFaceCulling = false;\n            }\n\n            material.alpha         = alpha;\n            material.emissiveColor = emissiveColor;\n\n            return material;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new mesh to create.\n        *\n        *   @return The next free unique id for a new mesh to create.\n        ***************************************************************************************************************/\n        public static createNextMaterialId() : string\n        {\n            return 'material' + String( MaterialSystem.nextMaterialId++ );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a textured material.\n        *\n        *   @param texture The texture to create.\n        *   @param repeatU The amount for U repeating this texture.\n        *   @param repeatV The amount for V repeating this texture.\n        ***************************************************************************************************************/\n        private static createTexture\n        (\n            texture :bz.Texture,\n            repeatU :number,\n            repeatV :number\n        )\n        : BABYLON.Texture\n        {\n            // do not clone native video textures! ( babylon.JS will hang otherwise! )\n            const newTexture:BABYLON.Texture =\n            (\n                    texture.getIsVideoTexture()\n                ?   texture.getNativeTexture()\n                :   texture.cloneNativeTexture()\n            );\n\n            if ( texture.getIsVideoTexture() )\n            {\n                newTexture.wrapU = BABYLON.Texture.CLAMP_ADDRESSMODE;\n                newTexture.wrapV = BABYLON.Texture.CLAMP_ADDRESSMODE;\n            }\n            else\n            {\n                newTexture.wrapU = BABYLON.Texture.WRAP_ADDRESSMODE;\n                newTexture.wrapV = BABYLON.Texture.WRAP_ADDRESSMODE;\n\n                // working around poor typings for scaling ..\n                if ( repeatU !== -1 )\n                {\n                    ( newTexture as any ).uScale = repeatU;\n                }\n                if ( repeatV !== -1 )\n                {\n                    ( newTexture as any ).vScale = repeatV;\n                }\n            }\n\n            newTexture.hasAlpha = texture.hasAlpha();\n\n            return newTexture;\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies if a texture has an alpha value.\n    *******************************************************************************************************************/\n    export enum TextureHasAlpha\n    {\n        /** Specifies that the texture has an alpha channel. */\n        YES,\n\n        /** No alpha channel in the texture. */\n        NO,\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the different types of textures.\n    *******************************************************************************************************************/\n    export enum TextureType\n    {\n        /** A texture for a wall. */\n        WALL,\n\n        /** An animated video texture. */\n        VIDEO,\n\n        /** An embedded texture for a babylon.JS model. */\n        MODEL,\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the UV strategy of the applied texture.\n    *******************************************************************************************************************/\n    export enum TextureUV\n    {\n        /** One texture dimension for the whole face size. */\n        ALL_TO_ONE,\n\n        /** One texture dimension per 1.0 world unit. */\n        TILED_BY_SIZE,\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a collection of meshes that may be compound.\n    *******************************************************************************************************************/\n    export class Model\n    {\n        /** All meshes belonging to this model. */\n        private             readonly            meshes                  :BABYLON.AbstractMesh[]             = null;\n\n        /** The compound mesh for all meshes. */\n        private                                 compoundMesh            :BABYLON.AbstractMesh               = null;\n        /** The physical impostors for all meshes of this model. */\n        private                                 impostors               :bz.PhysicImpostorParams[]          = null;\n\n        /** Specifies if the compound enables single meshes to be shot off. */\n        private                                 enableSingleShotOffs    :boolean                            = false;\n\n        /** ************************************************************************************************************\n        *   Creates a new model consisting of the specified meshes.\n        *\n        *   @param meshes All meshes that belong to this model.\n        ***************************************************************************************************************/\n        public constructor( meshes:BABYLON.AbstractMesh[] )\n        {\n            this.meshes = meshes;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the mesh with the specified index.\n        *\n        *   @param index The index of the mesh to return.\n        *\n        *   @return The mesh with the specified index.\n        ***************************************************************************************************************/\n        public getMesh( index:number ) : BABYLON.AbstractMesh\n        {\n            return this.meshes[ index ];\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the physics impostors of all meshes of this model.\n        *\n        *   @return The physics impostor parameters of all meshes.\n        ***************************************************************************************************************/\n        public getImpostors() : bz.PhysicImpostorParams[]\n        {\n            return this.impostors;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the number of meshes this model consists of.\n        *\n        *   @return The mesh count of this model.\n        ***************************************************************************************************************/\n        public getMeshCount() : number\n        {\n            return this.meshes.length;\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes all meshes of this model.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                mesh.parent = null;\n                mesh.dispose();\n            }\n\n            if ( this.compoundMesh != null )\n            {\n                this.compoundMesh.dispose();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets visibility for all meshes of this model.\n        *   Invisible meshes become non pickable.\n        *\n        *   @param visible The new visibility for this model.\n        ***************************************************************************************************************/\n        public setVisible( visible:boolean ) : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                mesh.isVisible  = visible;\n                mesh.isPickable = visible;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Performs a ray collision check on all meshes and returns the babylon.JS picking information.\n        *\n        *   @param ray The ray to check for intersections on all meshes.\n        *\n        *   @return The babylon.JS picking data that contains the collision information.\n        ***************************************************************************************************************/\n        public applyRayCollision( ray:BABYLON.Ray ) : BABYLON.PickingInfo[]\n        {\n            return ray.intersectsMeshes(\n                this.meshes as any\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Applies the specified shadow generator onto all meshes of this model.\n        *\n        *   @param shadowGenerator The shadow generator to add all meshes to.\n        ***************************************************************************************************************/\n        public applyShadowGenerator( shadowGenerator:BABYLON.ShadowGenerator ) : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                shadowGenerator.getShadowMap().renderList.push( mesh );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Translates all meshes of the model by the given delta.\n        *\n        *   @param delta The translation to apply onto this model.\n        ***************************************************************************************************************/\n        public translatePosition( delta:BABYLON.Vector3 ) : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                bz.MeshManipulation.translatePosition( mesh, delta )\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Rotates all meshes if this model.\n        *\n        *   @param rotX The rotation X in degrees.\n        *   @param rotY The rotation Y in degrees.\n        *   @param rotZ The rotation Z in degrees.\n        ***************************************************************************************************************/\n        public setAbsoluteRotationXYZ( rotX:number, rotY:number, rotZ:number ) : void\n        {\n            if ( this.compoundMesh != null )\n            {\n                bz.MeshManipulation.setAbsoluteRotationXYZ( this.compoundMesh, rotX, rotY, rotZ );\n            }\n            else\n            {\n                for ( const mesh of this.meshes )\n                {\n                    bz.MeshManipulation.setAbsoluteRotationXYZ( mesh, rotX, rotY, rotZ );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks an intersection with the specified model.\n        *\n        *   @param otherModel The model to check intersection with.\n        *\n        *   @return If any mesh of this model collides with the specified model.\n        ***************************************************************************************************************/\n        public intersects( otherModel:bz.Model ) : boolean\n        {\n            for ( const otherMesh of otherModel.meshes )\n            {\n                for ( const ownMesh of this.meshes )\n                {\n                    if ( ownMesh.intersectsMesh( otherMesh ) )\n                    {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and applies a compound parent to all meshes of this model.\n        *\n        *   @param scene                The scene for the new compound parent to be created in.\n        *   @param position             The position for the compound parent to appear.\n        *   @param enableSingleShotOffs Specifies if the compound enables single meshes to be shot off.\n        ***************************************************************************************************************/\n        public addCompoundMesh( scene:bz.Scene, position:BABYLON.Vector3, enableSingleShotOffs:boolean ) : void\n        {\n            this.enableSingleShotOffs = enableSingleShotOffs;\n\n            this.compoundMesh = bz.MeshFactory.createBox\n            (\n                scene,\n                position,\n                bz.MeshPivotAnchor.CENTER_XYZ,\n                new BABYLON.Vector3( 0.001, 0.001, 0.001 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.Texture.WALL_GRASS,\n                null,\n                bz.Physic.NONE,\n                1.0,\n                BABYLON.Color3.Red()\n            );\n\n            // set the compound mesh as parent for all meshes\n            for ( const mesh of this.meshes )\n            {\n                mesh.setParent( this.compoundMesh );\n            }\n\n            // set physics for compound\n            bz.Physic.COMPOUND.applyPhysicToMesh\n            (\n                scene.getNativeScene(),\n                this.compoundMesh,\n                1.0,\n                BABYLON.PhysicsImpostor.BoxImpostor\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Removed the parent compound mesh from all meshes. This will cause all meshes to collapse.\n        *   All meshes will be equipped with their original physics impostor.\n        *\n        *   @param scene The scene to create the new physics impostor in.\n        ***************************************************************************************************************/\n        public removeCompoundMesh( scene:BABYLON.Scene ) : void\n        {\n            if ( this.compoundMesh != null )\n            {\n                bz.Debug.physic.log( 'Removing compound parent from model' );\n\n                // remove the compound from all meshes\n                for ( let i:number = 0; i < this.meshes.length; ++i )\n                {\n                    this.removeCompoundMeshFromMesh( scene, i );\n                }\n\n                // compound parent doesn't need to be updated\n                // this.compoundParent.physicsImpostor.forceUpdate();\n\n                // dispose the compound mesh\n                this.compoundMesh.dispose();\n                this.compoundMesh = null;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Extracts all impostor parameters for all meshes of this model.\n        ***************************************************************************************************************/\n        public extractPhysicsImpostors() : void\n        {\n            this.impostors = [];\n\n            for ( const mesh of this.meshes )\n            {\n                if ( mesh.physicsImpostor != null )\n                {\n                    this.impostors.push( bz.PhysicImpostorParams.fromImpostor( mesh.physicsImpostor ) );\n                }\n                else\n                {\n                    this.impostors.push( null );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Assigns all physical impostors onto the meshes of this model.\n        *\n        *   @param scene     The scene where the new physical impostors are added to.\n        *   @param impostors The impostors to assign to this model's meshes\n        ***************************************************************************************************************/\n        public assignImpostors( scene:BABYLON.Scene, impostors:bz.PhysicImpostorParams[] ) : void\n        {\n            bz.Debug.physic.log( 'Applying impostors to cloned meshes:' );\n\n            // save impostors for later use ( e.g. when the model scatters )\n            this.impostors = impostors;\n\n            // browse all meshes and apply impostors to each mesh\n            for ( let i:number = 0; i < this.meshes.length; ++i )\n            {\n                const mesh     :BABYLON.AbstractMesh    = this.meshes[ i ];\n                const impostor :bz.PhysicImpostorParams = impostors[ i ];\n\n                if ( impostor != null )\n                {\n                    bz.Debug.physic.log\n                    (\n                        ' Applying impostor to mesh '\n                        + '[' + String( impostor.type        ) + ']'\n                        + '[' + String( impostor.mass        ) + ']'\n                        + '[' + String( impostor.friction    ) + ']'\n                        + '[' + String( impostor.restitution ) + ']'\n                    );\n\n                    impostor.applyPhysicsImpostor( mesh, scene );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a cloned instance of this model.\n        *   The cloned model does NOT contain any physical impostors!\n        *\n        *   @return A cloned instance of this model.\n        ***************************************************************************************************************/\n        public clone() : Model\n        {\n            const clonedMeshes:BABYLON.AbstractMesh[] = this.cloneMeshes();\n\n            // setup all cloned meshes\n            for ( const clonedMesh of clonedMeshes )\n            {\n                clonedMesh.id = bz.MeshFactory.createNextMeshId();\n\n                // show this mesh\n                clonedMesh.isVisible = true;\n\n                // specify debug settings for the cloned mesh\n                clonedMesh.checkCollisions = bz.SettingDebug.DEBUG_CAMERA_ENABLE_COLLISIONS;\n                clonedMesh.showBoundingBox = bz.SettingDebug.SHOW_MESH_BOUNDING_BOXES;\n                clonedMesh.isPickable = true;\n            }\n\n            return new bz.Model( clonedMeshes );\n        }\n\n        /** ************************************************************************************************************\n        *   Darkens all meshes according to the given ratio.\n        *\n        *   @param scene The babylon.JS scene to create new materials for.\n        *   @param ratio The ratio for the current mesh color to darken.\n        ***************************************************************************************************************/\n        public darkenMeshes( scene:BABYLON.Scene, ratio:number ) : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                // handle default material\n                if ( mesh.material instanceof BABYLON.StandardMaterial )\n                {\n                    const numberToSubtract    :number                   = ratio; // 0.025 * bz.MathUtil.getRandomInt();\n\n                    const oldStandardMaterial :BABYLON.StandardMaterial = mesh.material;\n                    const oldAmbientColor     :BABYLON.Color3           = oldStandardMaterial.ambientColor;\n                    const oldR                :number                   = oldAmbientColor.r;\n                    const oldG                :number                   = oldAmbientColor.g;\n                    const oldB                :number                   = oldAmbientColor.b;\n\n                    const newR                :number                   = oldR - numberToSubtract;\n                    const newG                :number                   = oldG - numberToSubtract;\n                    const newB                :number                   = oldB - numberToSubtract;\n                    const newAmbientColor     :BABYLON.Color3           = new BABYLON.Color3( newR, newG, newB );\n                    const newStandardMaterial :BABYLON.StandardMaterial = new BABYLON.StandardMaterial\n                    (\n                        bz.MaterialSystem.createNextMaterialId(),\n                        scene\n                    );\n                    newStandardMaterial.ambientColor    = newAmbientColor;\n                    newStandardMaterial.backFaceCulling = false;\n\n                    // console.log( ' > old ambient [' + oldStandardMaterial.ambientColor  + ']' );\n                    // console.log( ' > number to substract [' + numberToSubtract + ']' );\n                    // console.log( ' > new ambient [' + newStandardMaterial.ambientColor  + ']' );\n\n                    mesh.material = newStandardMaterial;\n                }\n/*\n                let multiMaterial:BABYLON.MultiMaterial = ( mesh.material as BABYLON.MultiMaterial );\n                var blackMaterial = new BABYLON.StandardMaterial( 'mat2', bz.Main.game.engine.scene.getScene() );\n                blackMaterial.emissiveColor = new BABYLON.Color3( 0.0, 0, 0.0 );\n                multiMaterial.subMaterials.push( blackMaterial );\n*/\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Shots off the specified mesh from the compound.\n        *\n        *   @param scene The native babylon.JS scene.\n        *   @param mesh  The mesh to shot off the compound.\n        ***************************************************************************************************************/\n        public shotOffCompound( scene:BABYLON.Scene, mesh:BABYLON.AbstractMesh ) : void\n        {\n            if ( this.enableSingleShotOffs )\n            {\n                bz.Debug.fire.log( 'Shot off one mesh from the compound ..' );\n\n                // remove the compound from all meshes\n                for ( let i:number = 0; i < this.meshes.length; ++i )\n                {\n                    if ( this.meshes[ i ] === mesh )\n                    {\n                        bz.Debug.fire.log( 'Mesh to shot off adressed..' );\n\n                        this.removeCompoundMeshFromMesh( scene, i );\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Scales down the linear and angular velocities of all SPHERICAL meshes this model consists of by one percent.\n        ***************************************************************************************************************/\n        public lowerSphereVelocities() : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                if\n                (\n                       mesh.physicsImpostor             !=  null\n                    && mesh.physicsImpostor.physicsBody !=  null\n                    && mesh.physicsImpostor.type        === BABYLON.PhysicsImpostor.SphereImpostor\n                )\n                {\n                    mesh.physicsImpostor.setLinearVelocity(  mesh.physicsImpostor.getLinearVelocity().scale(  0.99 ) );\n                    mesh.physicsImpostor.setAngularVelocity( mesh.physicsImpostor.getAngularVelocity().scale( 0.99 ) );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Scales down the linear velocity of all meshes this model consists of by one percent.\n        ***************************************************************************************************************/\n        public lowerLinearVelocity() : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                if ( mesh.physicsImpostor != null && mesh.physicsImpostor.physicsBody != null )\n                {\n                    mesh.physicsImpostor.setLinearVelocity( mesh.physicsImpostor.getLinearVelocity().scale( 0.99 ) );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Scales down the angular velocity of all meshes this model consists of by one percent.\n        ***************************************************************************************************************/\n        public lowerAngularVelocity() : void\n        {\n            for ( const mesh of this.meshes )\n            {\n                if ( mesh.physicsImpostor != null && mesh.physicsImpostor.physicsBody != null )\n                {\n                    mesh.physicsImpostor.setAngularVelocity( mesh.physicsImpostor.getAngularVelocity().scale( 0.99 ) );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a cloned collection of this models' meshes.\n        *   All physic impostors are gone on all cloned meshes.\n        *\n        *   @return All cloned meshes from this model.\n        ***************************************************************************************************************/\n        private cloneMeshes() : BABYLON.AbstractMesh[]\n        {\n            const clonedMeshes:BABYLON.AbstractMesh[] = [];\n\n            for ( const mesh of this.meshes )\n            {\n                // remove physical impostors of all meshes if still present\n                if ( mesh.physicsImpostor != null )\n                {\n                    mesh.physicsImpostor.dispose();\n                    mesh.physicsImpostor = null;\n                }\n\n                // clone this mesh ( without a physics impostor )\n                const clonedMesh:BABYLON.AbstractMesh = mesh.clone( mesh.name, null );\n                clonedMeshes.push( clonedMesh );\n            }\n\n            return clonedMeshes;\n        }\n\n        /** ************************************************************************************************************\n        *   Frees the mesh with the specified index from the compound parent\n        *   and reassigns its original physical impostor.\n        *\n        *   @param scene The babylon.JS scene where a new impostor is potentially created.\n        *   @param index The index of the mesh to free from the compound.\n        ***************************************************************************************************************/\n        private removeCompoundMeshFromMesh( scene:BABYLON.Scene, index:number ) : void\n        {\n            const mesh:     BABYLON.AbstractMesh    = this.meshes[    index ];\n            const impostor: bz.PhysicImpostorParams = this.impostors[ index ];\n\n            // only if this mesh has a parent compound.\n            if ( mesh.parent != null )\n            {\n                // free mesh from parent\n                mesh.setParent( null );\n\n                // apply impostor\n                if ( impostor == null )\n                {\n                    bz.Debug.physic.log( ' Applying DEFAULT impostor to SCATTERED mesh ' );\n\n                    bz.Physic.SOLID_WOOD.applyPhysicToMesh\n                    (\n                        scene,\n                        mesh,\n                        1.0,\n                        BABYLON.PhysicsImpostor.BoxImpostor\n                    );\n                }\n                else\n                {\n                    bz.Debug.physic.log\n                    (\n                        ' Applying impostor to SCATTERED mesh '\n                        + '[' + String( impostor.type        ) + ']'\n                        + '[' + String( impostor.mass        ) + ']'\n                        + '[' + String( impostor.friction    ) + ']'\n                        + '[' + String( impostor.restitution ) + ']'\n                    );\n\n                    mesh.physicsImpostor = new BABYLON.PhysicsImpostor\n                    (\n                        mesh,\n                        impostor.type,\n                        {\n                            mass:        impostor.mass,\n                            friction:    impostor.friction,\n                            restitution: impostor.restitution,\n                        },\n                        scene\n                    );\n                }\n\n                // update physics for all meshes\n                mesh.physicsImpostor.forceUpdate();\n            }\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the different compound types for an imported model.\n    *******************************************************************************************************************/\n    export enum ModelCompoundType\n    {\n        /** No compound. */\n        NONE,\n\n        /** A compound where no meshes can be shot off. */\n        COMPOUND_SHOT_OFF_DISABLED,\n\n        /** A compound where meshes can be shot off. */\n        COMPOUND_SHOT_OFF_ENABLED,\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   Imports all .babylon model files from 3ds max.\n    *******************************************************************************************************************/\n    export class ModelSystem\n    {\n        /** All model file names to load. */\n        private             readonly    fileNames                       :string[]                       = null;\n        /** The method to invoke when all model files are loaded. */\n        private             readonly    onLoadComplete                  :()=>void                       = null;\n\n        /** The number of currently loaded model files. */\n        private                         loadedModelCount                :number                         = 0;\n        /** All loaded mesh objects. */\n        private                         models                          :bz.Model[]                     = [];\n\n        /** ************************************************************************************************************\n        *   Creates a new model import system.\n        *\n        *   @param fileNames      The names of all model files to load.\n        *   @param onLoadComplete The method to invoke when all model files are loaded.\n        ***************************************************************************************************************/\n        public constructor( fileNames:string[], onLoadComplete:()=>void )\n        {\n            this.fileNames      = fileNames;\n            this.onLoadComplete = onLoadComplete;\n        }\n\n        /** ************************************************************************************************************\n        *   Loads all specified model files into system memory.\n        ***************************************************************************************************************/\n        public load( scene:BABYLON.Scene ) : void\n        {\n            bz.Debug.init.log( ' Importing [' + String( this.fileNames.length ) + '] model files' );\n\n            for ( const fileName of this.fileNames )\n            {\n                const fullPath      :string = ( bz.SettingResource.PATH_MODEL + fileName );\n                const lastSeparator :number = fullPath.lastIndexOf( '/' );\n                const directory     :string = fullPath.substr( 0, lastSeparator + 1 );\n                const file          :string = fullPath.substr( lastSeparator    + 1 );\n\n                BABYLON.SceneLoader.ImportMesh\n                (\n                    // first parameter specifies the name of the mesh to import - an empty string will import all meshes\n                    '',\n                    directory,\n                    file,\n                    scene,\n                    ( importedMeshes:BABYLON.AbstractMesh[] ) => {\n\n                        // bz.Debug.init.log( '  Imported [' + importedMeshes.length + '] meshes' );\n\n                        // hide all meshes\n                        for ( const importedMesh of importedMeshes )\n                        {\n                            importedMesh.isVisible = false;\n\n                            // disable backface culling by default\n                            if ( importedMesh.material != null )\n                            {\n                                importedMesh.material.backFaceCulling = false;\n                            }\n                        }\n\n                        // save in models array\n                        this.models[ fileName ] = new bz.Model( importedMeshes );\n                        this.models[ fileName ].extractPhysicsImpostors();\n\n                        // notify load\n                        this.onLoadModel();\n                    },\n                    null,\n                    ( callbackScene:BABYLON.Scene, callbackMessage:string, callbackException?:any ) => {\n\n                        bz.Debug.init.err( 'ERROR on importing model [' + file + ']' );\n\n                        // simulate load\n                        this.onLoadModel();\n                    }\n                );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the original model of the specified imported model file.\n        *\n        *   @return The original model of the given imported model file.\n        ***************************************************************************************************************/\n        public getOriginalModel( fileName:string ) : bz.Model\n        {\n            return this.models[ fileName ];\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when one mesh was loaded completely.\n        ***************************************************************************************************************/\n        private onLoadModel() : void\n        {\n            if ( ++this.loadedModelCount >= this.fileNames.length )\n            {\n                bz.Debug.init.log( ' All [' + String( this.fileNames.length ) + '] models loaded' );\n\n                this.onLoadComplete();\n            }\n        };\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   Loads and manages all desired sounds.\n    *******************************************************************************************************************/\n    export class SoundSystem\n    {\n        /** Next ID to assign for sound creation. */\n        private             static      nextSoundId                     :number                         = 0;\n\n        /** All sound file names to load. */\n        private             readonly    fileNames                       :string[]                       = null;\n        /** The method to invoke when all sounds are loaded. */\n        private             readonly    onLoadComplete                  :() => void                     = null;\n\n        /** The number of currently loaded sounds. */\n        private                         loadedSoundCount                :number                         = 0;\n        /** All loaded sound objects. */\n        private                         sounds                          :BABYLON.Sound[]                = [];\n\n        /** ************************************************************************************************************\n        *   Preloads all images into memory.\n        *\n        *   @param fileNames      The names of all image files to load.\n        *   @param onLoadComplete The method to invoke when all image files are loaded.\n        ***************************************************************************************************************/\n        public constructor( fileNames:string[], onLoadComplete:()=>void )\n        {\n            this.fileNames      = fileNames;\n            this.onLoadComplete = onLoadComplete;\n\n            // set the global volume for all sounds\n            // BABYLON.Engine.audioEngine.setGlobalVolume( 1.0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Loads all specified sound files into system memory.\n        *\n        *   @param scene The babylon.JS scene to append all textures to.\n        ***************************************************************************************************************/\n        public load(scene:BABYLON.Scene ) : void\n        {\n            bz.Debug.init.log( ' Preloading [' + String( this.fileNames.length ) + '] sounds' );\n\n            if ( bz.SettingDebug.DISABLE_SOUND )\n            {\n                this.onLoadComplete();\n                return;\n            }\n\n            for ( const fileName of this.fileNames )\n            {\n                this.sounds[ fileName ] = new BABYLON.Sound\n                (\n                    SoundSystem.createNextSoundId(),\n                    fileName,\n                    scene,\n                    () => { this.onLoadSound(); }\n                );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and plays a COPY of the specified audio object.\n        *\n        *   @param id   The ID of the audio object to play.\n        *   @param loop Specifies if playback for this sound should be repeated infinitely.\n        *\n        *   @return The promise from the play call or <code>null</code> if no sound was played.\n        ***************************************************************************************************************/\n        public playSound( id:string, loop:boolean = false ) : Promise<void>\n        {\n            if ( !bz.SettingDebug.DISABLE_SOUND )\n            {\n                bz.Debug.sound.log( 'Playing sound [' + id + ']' );\n\n                this.sounds[ id ].loop = loop;\n\n                return this.sounds[ id ].play();\n            }\n\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when one sound was loaded completely.\n        ***************************************************************************************************************/\n        private onLoadSound() : void\n        {\n            if ( ++this.loadedSoundCount >= this.fileNames.length )\n            {\n                bz.Debug.init.log( ' All [' + String( this.fileNames.length ) + '] sounds loaded' );\n\n                this.onLoadComplete();\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new sound to create.\n        *\n        *   @return The next free unique id for a new sound to create.\n        ***************************************************************************************************************/\n        public static createNextSoundId() : string\n        {\n            return 'sound' + String( SoundSystem.nextSoundId++ );\n        }\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   A wrapper class for babylon.JSs Sprite that offers additional functionality.\n    *******************************************************************************************************************/\n    export class Sprite\n    {\n        /** The wrapped native babylon.JS sprite instance. */\n        private             readonly            sprite                          :BABYLON.Sprite             = null;\n        /** The possible collider - A cylinder body for this sprite. */\n        private             readonly            collider                        :BABYLON.AbstractMesh       = null;\n\n        /** Saves if this sprite is animated. */\n        private                                 isAnimated                      :boolean                    = false;\n        /** Saves current animation's start frame. */\n        private                                 animationFrameFrom              :number                     = 0;\n        /** Saves current animation's end frame. */\n        private                                 animationFrameTo                :number                     = 0;\n        /** Saves current animation's looping property. */\n        private                                 animationFrameLooped            :boolean                    = false;\n\n        /** Saves the last visible sprite animation frame index. */\n        private                                 lastSpriteAnimationIndex        :number                     = -1;\n\n        /** ************************************************************************************************************\n        *   Creates a new wrapped sprite object from the specified sprite file.\n        *\n        *   @param scene      The scene to create this sprite.\n        *   @param spriteFile The sprite file to create an instance from.\n        *   @param position   The vector to place the sprite.\n        *   @param width      The width of the sprite.\n        *   @param height     The height of the sprite.\n        *   @param anchor     The anchor for displaying this sprite.\n        *   @param collidable Specifies if this sprite should be collidable for the player and other game objects.\n        *\n        *   @return The created sprite instance.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            scene      :bz.Scene,\n            spriteFile :bz.SpriteFile,\n            position   :BABYLON.Vector3,\n            width      :number,\n            height     :number,\n            anchor     :bz.MeshPivotAnchor,\n            collidable :bz.SpriteCollidable\n        )\n        {\n            // create native sprite\n            this.sprite = new BABYLON.Sprite\n            (\n                scene.getSpriteSystem().createNextSpriteId(),\n                scene.getSpriteSystem().getSpriteManager( spriteFile.fileName )\n            );\n            this.sprite.position = position.clone();\n            this.sprite.width    = width;\n            this.sprite.height   = height;\n\n            // create collider if desired\n            if ( collidable === bz.SpriteCollidable.YES )\n            {\n                const collisionWidth:number = ( width / 2 );\n                this.collider = bz.MeshFactory.createCylinder\n                (\n                    scene,\n                    position.clone(),\n                    anchor,\n                    collisionWidth,\n                    height,\n                    BABYLON.Vector3.Zero(),\n                    bz.Texture.WALL_GLASS,\n                    null,\n                    bz.Physic.STATIC,\n                    0.25,\n                    bz.SettingColor.COLOR_RGB_WHITE\n                );\n            }\n\n            this.translateByAnchor( anchor );\n        }\n\n        /** ************************************************************************************************************\n        *   Animates the frames in the wrapped sprite.\n        *\n        *   @param from Start frame id.\n        *   @param to   End frame id.\n        *   @param loop If the animation shall be looped\n        ***************************************************************************************************************/\n        public animate( from:number, to:number, loop:boolean ) : void\n        {\n            this.isAnimated           = true;\n\n            this.animationFrameFrom   = from;\n            this.animationFrameTo     = to;\n            this.animationFrameLooped = loop;\n\n            this.sprite.playAnimation\n            (\n                from,\n                to,\n                loop,\n                bz.SettingEngine.SPRITE_FRAME_DELAY,\n                () => {\n                    this.isAnimated = false;\n                }\n            )\n        }\n\n        /** ************************************************************************************************************\n        *   Alters the pause state for this sprite.\n        *\n        *   @param pause The pause state to set for this sprite.\n        ***************************************************************************************************************/\n        public setPause( pause:boolean ) : void\n        {\n            // only affects if animated\n            if ( this.isAnimated )\n            {\n                if ( pause )\n                {\n                    // save last animation index\n                    this.lastSpriteAnimationIndex = this.sprite.cellIndex;\n\n                    // stop animating\n                    this.sprite.stopAnimation();\n                }\n                else\n                {\n                    // resume animation\n                    this.animate\n                    (\n                        this.animationFrameFrom,\n                        this.animationFrameTo,\n                        this.animationFrameLooped\n                    );\n\n                    // assign last sprite animation index\n                    this.sprite.cellIndex = this.lastSpriteAnimationIndex;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes the wrapped babylon.JS sprite object.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.sprite.dispose();\n\n            if ( this.collider !== null )\n            {\n                this.collider.dispose();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Translates a sprite according to the specified anchor.\n        *\n        *   @param anchor The anchor that specifies the translation.\n        ***************************************************************************************************************/\n        private translateByAnchor( anchor:bz.MeshPivotAnchor ) : void\n        {\n            switch ( anchor )\n            {\n                case bz.MeshPivotAnchor.NONE:\n                case bz.MeshPivotAnchor.CENTER_XYZ:\n                {\n                    // this is the default bahaviour\n                    break;\n                }\n\n                case bz.MeshPivotAnchor.CENTER_XZ_LOWEST_Y:\n                {\n                    this.sprite.position.y += ( this.sprite.height / 2 );\n                    break;\n                }\n\n                case bz.MeshPivotAnchor.LOWEST_XYZ:\n                {\n                    this.sprite.position.x += ( this.sprite.width  / 2 );\n                    this.sprite.position.z += ( this.sprite.width  / 2 );\n                    this.sprite.position.y += ( this.sprite.height / 2 );\n                    break;\n                }\n            }\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Specifies the sprite system.\n    *******************************************************************************************************************/\n    export enum SpriteCollidable\n    {\n        /** Make it collidable. */\n        YES,\n\n        /** Make a non-collidable sprite. */\n        NO,\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the sprite system.\n    *******************************************************************************************************************/\n    export class SpriteSystem\n    {\n        /** Next ID to assign for sprite creation. */\n        private                         nextSpriteId                    :number                     = 0;\n\n        /** Holds all sprite managers - one for each sprite file. */\n        private                         spriteManagers                  :BABYLON.SpriteManager[]    = [];\n\n        /** All sprite files to load. */\n        private             readonly    filesToLoad                     :bz.SpriteFile[]            = [];\n\n        /** ************************************************************************************************************\n        *   Creates a new sprite system.\n        *\n        *   @param filesToLoad All sprite files to load.\n        ***************************************************************************************************************/\n        public constructor( filesToLoad:bz.SpriteFile[] )\n        {\n            this.filesToLoad = filesToLoad;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates one sprite manager for each sprite file.\n        *\n        *   @param scene The babylon.JS scene to append all textures to.\n        ***************************************************************************************************************/\n        public load( scene:BABYLON.Scene ) : void\n        {\n            for ( let i:number = 0; i < this.filesToLoad.length; ++i )\n            {\n                const spriteFile:bz.SpriteFile = this.filesToLoad[ i ];\n\n                this.spriteManagers[ spriteFile.fileName ] = new BABYLON.SpriteManager\n                (\n                    'spriteManager' + String( i ),\n                    bz.SettingResource.PATH_IMAGE_SPRITE + spriteFile.fileName,\n                    bz.SettingEngine.MAX_SPRITE_INSTANCES,\n                    spriteFile.frameSize,\n                    scene\n                );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new sprite to create.\n        *\n        *   @return The next free unique id for a new sprite to create.\n        ***************************************************************************************************************/\n        public createNextSpriteId() : string\n        {\n            return 'sprite' + String( this.nextSpriteId++ );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the sprite manager for the specified sprite file.\n        *\n        *   @param spriteFile The sprite file to receive the sprite manager for.\n        *\n        *   @return The sprite manager that was created for the speicified sprite file.\n        ***************************************************************************************************************/\n        public getSpriteManager( spriteFile:string ) : BABYLON.SpriteManager\n        {\n            return this.spriteManagers[ spriteFile ];\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a bullet hole on a hit point.\n    *******************************************************************************************************************/\n    export class BulletHole\n    {\n        /** This depth asserts being drawn correctly on spheres and not be too scaled around corners! */\n        private     static  readonly    BULLET_HOLE_DEPTH               :number                             = 0.025;\n\n        /** The hit point this bullet hole is created for. */\n        private             readonly    hitPoint                        :bz.HitPoint                        = null;\n        /** The emissive color of the level where this bullet hole is created. */\n        private             readonly    emissiveColor                   :BABYLON.Color3                     = null;\n\n        /** The decal mesh of this bullet hole. */\n        private                         holeMesh                        :BABYLON.Mesh                       = null;\n        /** The debug sphere mesh of this bullet hole. */\n        private                         debugSphereMesh                 :BABYLON.Mesh                       = null;\n        /** The debug normal line of the hit face. */\n        private                         debugNormalLine                 :BABYLON.Mesh                       = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new bullet hole.\n        *\n        *   @param scene         The scene to create the bullet hole for.\n        *   @param hitPoint      The hit pooint to create this bullet hole for.\n        *   @param emissiveColor The emissive color of the level where this bullet hole is applied.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            scene         :bz.Scene,\n            hitPoint      :bz.HitPoint,\n            emissiveColor :BABYLON.Color3\n        )\n        {\n            this.hitPoint      = hitPoint;\n            this.emissiveColor = emissiveColor;\n\n            // append a bullet hole\n            this.createHoleMesh( scene );\n\n            // append a debug bullet hole\n            if ( bz.SettingDebug.SHOW_DEBUG_BULLET_HOLES )\n            {\n                this.createDebugHoleSphere( scene );\n            }\n\n            // append the debug hit face normal\n            if ( bz.SettingDebug.SHOW_DEBUG_BULLET_HOLE_NORMAL )\n            {\n                this.createDebugHoleNormalLine( scene.getNativeScene() );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes all meshes of this bullet hole.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.holeMesh.dispose();\n\n            if ( this.debugSphereMesh !== null )\n            {\n                this.debugSphereMesh.dispose();\n            }\n            if ( this.debugNormalLine !== null )\n            {\n                this.debugNormalLine.dispose();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a bullet hole mesh onto the hit point.\n        *\n        *   @param scene The scene to create the bullet hole for.\n        ***************************************************************************************************************/\n        private createHoleMesh( scene:bz.Scene ) : void\n        {\n            const meshTexture:bz.Texture = bz.Texture.getAccordingBulletHoleTextureForMesh( this.hitPoint.getMesh() );\n\n            this.holeMesh = bz.MeshFactory.createDecal\n            (\n                scene,\n                this.hitPoint.getPoint().clone(),\n                this.hitPoint.getMesh(),\n                this.hitPoint.getNormal(),\n                new BABYLON.Vector3( 0.2, 0.2, BulletHole.BULLET_HOLE_DEPTH ),\n                bz.MathUtil.getRandomInt( 0, 359 ),\n                this.hitPoint.getGameObjectNextBulletHoleIndexZ(),\n                meshTexture,\n                null,\n                1.0,\n                this.emissiveColor\n            );\n\n            // stick to parent\n            this.holeMesh.setParent( this.hitPoint.getMesh() );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a debug bullet hole sphere onto this hit point.\n        *\n        *   @param scene The scene to create the bullet hole for.\n        ***************************************************************************************************************/\n        private createDebugHoleSphere( scene:bz.Scene ) : void\n        {\n            // create debug bullet hole\n            this.debugSphereMesh = bz.MeshFactory.createSphere\n            (\n                scene,\n                this.hitPoint.getPoint().clone(),\n                bz.MeshPivotAnchor.CENTER_XYZ,\n                0.10,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                null,\n                bz.SettingColor.COLOR_RGB_ORANGE,\n                bz.Physic.NONE,\n                1.0,\n                bz.SettingColor.COLOR_RGB_ORANGE // this.ambientColor\n            );\n\n            // stick to parent\n            this.debugSphereMesh.setParent( this.hitPoint.getMesh() );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a debug bullet hole normal line onto this hit point.\n        *\n        *   @param scene The native babylon.JS scene to create the bullet hole for.\n        ***************************************************************************************************************/\n        private createDebugHoleNormalLine( scene:BABYLON.Scene ) : void\n        {\n            // create debug bullet hole\n            this.debugNormalLine = bz.MeshFactory.createLine\n            (\n                scene,\n                this.hitPoint.getPoint().clone(),\n                this.hitPoint.getPoint().clone().add( this.hitPoint.getNormal() ),\n                bz.MeshPivotAnchor.CENTER_XYZ,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.SettingColor.COLOR_RGBA_ORANGE_MAYFLOWER_OPAQUE\n            );\n\n            // stick to parent\n            this.debugNormalLine.setParent( this.hitPoint.getMesh() );\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   A hit point is a potential shot collision on a specific game object.\n    *******************************************************************************************************************/\n    export class HitPoint\n    {\n        /** The exact collision point. */\n        private         readonly    point                           :BABYLON.Vector3                = null;\n        /** The affected mesh of the game object. */\n        private         readonly    mesh                            :BABYLON.AbstractMesh           = null;\n        /** The normal of the face this hit point impacts. */\n        private         readonly    normal                          :BABYLON.Vector3                = null;\n        /** The distance from the shot source to this hit point. */\n        private         readonly    distance                        :number                         = null;\n        /** The direction of the shot that caused this hit point. */\n        private         readonly    direction                       :BABYLON.Vector3                = null;\n        /** The affected game object. */\n        private         readonly    gameObject                      :bz.GameObject                  = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new hit point that carries collision information.\n        *\n        *   @param point      The exact point of collision.\n        *   @param mesh       The exact mesh of the game object that has been hit.\n        *   @param normal     The normal of the face the hit point impacts.\n        *   @param distance   The distance from the shot source to this hit point.\n        *   @param direction  The direction of the shot that caused this hit point.\n        *   @param gameObject The game object that is affected by this hit point.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            point      :BABYLON.Vector3,\n            mesh       :BABYLON.AbstractMesh,\n            normal     :BABYLON.Vector3,\n            distance   :number,\n            direction  :BABYLON.Vector3,\n            gameObject :bz.GameObject\n        )\n        {\n            this.point      = point;\n            this.mesh       = mesh;\n            this.normal     = normal;\n            this.distance   = distance;\n            this.direction  = direction;\n            this.gameObject = gameObject;\n        }\n\n        /** ************************************************************************************************************\n        *   Causes a physical shot impact to the according game object at this hit point.\n        *   A bullet hole is created and connected to this hit point.\n        *\n        *   @param scene         The scene to create the hit point in.\n        *   @param emissiveColor The emissive color for the bullet hole to set.\n        *   @param damage        The damage of the impact to cause.\n        *\n        *   @return The bullet hole being caused by this impact.\n        ***************************************************************************************************************/\n        public causeImpact( scene:bz.Scene, emissiveColor:BABYLON.Color3, damage:number ) : bz.BulletHole\n        {\n            // create a bullet hole\n            const bulletHole:bz.BulletHole = new bz.BulletHole\n            (\n                scene,\n                this,\n                emissiveColor\n            );\n\n            // apply impulse\n            this.applyImpulseToMesh( damage * bz.SettingEngine.DAMAGE_IMPULSE_MULTIPLIER );\n\n            // hurt the game object\n            this.gameObject.hurt( scene.getNativeScene(), damage, this.mesh );\n\n            return bulletHole;\n        }\n\n        /** ************************************************************************************************************\n        *   Applies the specified force as a shot impulse to the affected mesh.\n        *\n        *   @param force The force to apply. Will be multiplied with the direction vertex.\n        ***************************************************************************************************************/\n        public applyImpulseToMesh( force:number ) : void\n        {\n            if ( this.mesh.physicsImpostor !== null && this.mesh.physicsImpostor.physicsBody !== null )\n            {\n                bz.Debug.fire.log\n                (\n                    'apply impulse - shot impulse direction: '\n                    + '[' + String( this.direction.x ) + ']'\n                    + '[' + String( this.direction.y ) + ']'\n                    + '[' + String( this.direction.z ) + ']'\n                );\n\n                bz.Debug.fire.log\n                (\n                    'affected mesh has mass: '\n                    + '[' + String( this.mesh.physicsImpostor.mass ) + ']'\n                );\n\n                this.mesh.applyImpulse( this.direction.scale( force ), this.point );\n            }\n            else\n            {\n                bz.Debug.fire.log( 'applying impulse not suitable: mesh has no physics impostor' );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the connected game object's next Z index for attached bullet holes.\n        *\n        *   @return The next Z index for a bullet hole to stick onto the connected game object.\n        ***************************************************************************************************************/\n        public getGameObjectNextBulletHoleIndexZ() : number\n        {\n            return this.gameObject.getNextBulletHoleIndexZ();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the impact point of this hit point.\n        *\n        *   @return The point of impact.\n        ***************************************************************************************************************/\n        public getPoint() : BABYLON.Vector3\n        {\n            return this.point;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the impacted mesh of this hit point.\n        *\n        *   @return The impacted mesh.\n        ***************************************************************************************************************/\n        public getMesh() : BABYLON.AbstractMesh\n        {\n            return this.mesh;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the normal of the shot that caused this hit point.\n        *\n        *   @return The impacted mesh.\n        ***************************************************************************************************************/\n        public getNormal() : BABYLON.Vector3\n        {\n            return this.normal;\n        }\n\n        /** ************************************************************************************************************\n        *   Picks the nearest hit point of all specified hit points.\n        *\n        *   @param hitPoints All hit points.\n        *\n        *   @return The hit point with the lowest distance.\n        ***************************************************************************************************************/\n        public static determineNearestHitPoint( hitPoints:bz.HitPoint[] ) : bz.HitPoint\n        {\n            let lowestDistance  :number      = Infinity;\n            let nearestHitpoint :bz.HitPoint = null;\n\n            for ( const hitPoint of hitPoints )\n            {\n                if ( hitPoint.distance < lowestDistance )\n                {\n                    lowestDistance  = hitPoint.distance;\n                    nearestHitpoint = hitPoint;\n                }\n            }\n\n            return nearestHitpoint;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a shot into the stage.\n    *******************************************************************************************************************/\n    export class Shot\n    {\n        /** The source point of the shot. */\n        private             readonly    source              :BABYLON.Vector3                        = null;\n        /** The rotation of the shot source. */\n        private             readonly    rotation            :BABYLON.Vector3                        = null;\n        /** The maximum range of this shot. */\n        private             readonly    range               :number                                 = 0.0;\n        /** Specifies if this shot is wall breaking. */\n        private             readonly    wallBreaking        :boolean                                = false;\n        /** The damage this shot causes onto game objects. */\n        private             readonly    damage              :number                                 = 0;\n\n        /** The destination point of the shot. */\n        private             readonly    destination         :BABYLON.Vector3                        = null;\n        /** The ray that contains the mapped shot information for babylon.JS. */\n        private             readonly    ray                 :BABYLON.Ray                            = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new shot.\n        *\n        *   @param source       The shot source point.\n        *   @param rotation     The rotation of the shot source.\n        *   @param range        The maximum range of this shot.\n        *   @param wallBreaking Specifies if this shot will break walls.\n        *   @param damage       Specifies the damage that this shot causes onto game objects.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            source       :BABYLON.Vector3,\n            rotation     :BABYLON.Vector3,\n            range        :number,\n            wallBreaking :boolean,\n            damage       :number\n        )\n        {\n            this.source       = source;\n            this.rotation     = rotation;\n            this.range        = range;\n            this.wallBreaking = wallBreaking;\n            this.damage       = damage;\n\n            // calculate destination point\n            this.destination = bz.MathUtil.rotateVector\n            (\n                source,\n                rotation,\n                range\n            );\n\n            // create collision checking ray\n            this.ray = BABYLON.Ray.CreateNewFromTo( this.source, this.destination );\n/*\n            bz.Debug.fire.log( ' Shot source:          ' + this.source      );\n            bz.Debug.fire.log( ' Shot destination:     ' + this.destination );\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Returns this shot's native babylon.JS ray.\n        *\n        *   @return The native babylon.JS raycasting instance.\n        ***************************************************************************************************************/\n        public getRay() : BABYLON.Ray\n        {\n            return this.ray;\n        }\n\n        /** ************************************************************************************************************\n        *   Determines if this shot is wall breaking.\n        *\n        *   @return <code>true</code> if this shot is wall breaking.\n        ***************************************************************************************************************/\n        public isWallBreaking() : boolean\n        {\n            return this.wallBreaking;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a debug line from this shot.\n        *\n        *   @return The debug line mesh that represents this shot.\n        ***************************************************************************************************************/\n        public createDebugLine( scene:BABYLON.Scene ) : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createLine\n            (\n                scene,\n                this.source,\n                this.destination,\n                bz.MeshPivotAnchor.LOWEST_XYZ,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.SettingColor.COLOR_RGBA_YELLOW_OPAQUE\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the damage that this shot impacts onto game objects.\n        *\n        *   @return The damage caused by this shot.\n        ***************************************************************************************************************/\n        public getDamage() : number\n        {\n            return this.damage;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Manages the canvas.\n    *******************************************************************************************************************/\n    export class CanvasSystem\n    {\n        /** The native HTML5 canvas element. */\n        private         readonly    canvas                  :HTMLCanvasElement              = null;\n        /** The canvas rendering context. */\n        private         readonly    canvasContext           :WebGLRenderingContext          = null;\n\n        /** ************************************************************************************************************\n        *   Constructs a new canvas system.\n        ***************************************************************************************************************/\n        public constructor()\n        {\n            // create native canvas\n            this.canvas = document.createElement( 'canvas' );\n\n            // reference 3d rendering context\n            this.canvasContext = this.canvas.getContext( 'webgl' );\n\n            // append to body\n            document.body.appendChild( this.canvas );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the canvas dimensions according to current screen size.\n        *\n        *   @return <code>true</code> if the canvas dimensions have actually been changed.\n        ***************************************************************************************************************/\n        public updateDimensions() : boolean\n        {\n            // get inner window dimensions\n            let canvasWidth:number  = window.innerWidth;\n            let canvasHeight:number = window.innerHeight;\n\n            // clip to minimum canvas dimensions\n            if ( canvasWidth  < bz.SettingEngine.CANVAS_MIN_WIDTH  )\n            {\n                canvasWidth  = bz.SettingEngine.CANVAS_MIN_WIDTH;\n            }\n            if ( canvasHeight < bz.SettingEngine.CANVAS_MIN_HEIGHT )\n            {\n                canvasHeight = bz.SettingEngine.CANVAS_MIN_HEIGHT;\n            }\n\n            const dimensionsChanged:boolean =\n            (\n                   this.canvas.width  !== canvasWidth\n                || this.canvas.height !== canvasHeight\n            );\n\n            // assign new dimensions to canvas\n            this.canvas.width  = canvasWidth;\n            this.canvas.height = canvasHeight;\n\n            bz.Debug.canvas.log\n            (\n                'Updated canvas dimensions to ['\n                + String( canvasWidth ) + 'x' + String( canvasHeight ) + '] '\n                + 'changed [' + String( dimensionsChanged ) + ']'\n            );\n\n            return dimensionsChanged;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the current canvas width.\n        *\n        *   @return The width of the current canvas.\n        ***************************************************************************************************************/\n        public getWidth() : number\n        {\n            return this.canvas.width;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the current canvas height.\n        *\n        *   @return The width of the current canvas.\n        ***************************************************************************************************************/\n        public getHeight() : number\n        {\n            return this.canvas.height;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the native HTML canvas object.\n        *\n        *   @return The HTML canvas object.\n        ***************************************************************************************************************/\n        public getNativeCanvas() : HTMLCanvasElement\n        {\n            return this.canvas;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the current canvas rendering context.\n        *\n        *   @return The webGL rendering context.\n        ***************************************************************************************************************/\n        public getCanvasContext() : WebGLRenderingContext\n        {\n            return this.canvasContext;\n        }\n    }\n","\n    import * as bz      from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Creates all types of lights.\n    *******************************************************************************************************************/\n    export abstract class LightFactory\n    {\n        /** Next ID to assign for light creation. */\n        private         static          nextLightId          :number                 = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a hemispheric light.\n        *\n        *   @param scene         The scene that contains this light.\n        *   @param direction     The direction for this light.\n        *   @param diffuseColor  The color this light spreads to all surfaces.\n        *   @param specularColor The shining spot color this light spreads to faces.\n        *   @param groundColor   The color for the ground to apply.\n        *   @param enabled       Specifies if this light shall be enabled by default.\n        ***************************************************************************************************************/\n        public static createHemispheric\n        (\n            scene         :BABYLON.Scene,\n            direction     :BABYLON.Vector3,\n            diffuseColor  :BABYLON.Color3,\n            specularColor :BABYLON.Color3,\n            groundColor   :BABYLON.Color3,\n            enabled       :boolean\n        )\n        : BABYLON.HemisphericLight\n        {\n            const light:BABYLON.HemisphericLight = new BABYLON.HemisphericLight\n            (\n                LightFactory.createNextLightId(),\n                direction,\n                scene\n            );\n\n            light.diffuse     = diffuseColor ;\n            light.specular    = specularColor;\n            light.groundColor = groundColor  ;\n            light.setEnabled( enabled );\n\n            return light;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a directional light.\n        *\n        *   @param scene         The scene that contains this light.\n        *   @param direction     The direction for this light.\n        *   @param position      Where this light is located.\n        *   @param intensity     The intensity of this light.\n        *   @param diffuseColor  The color this light spreads to all surfaces.\n        *   @param specularColor The shining spot color this light spreads to faces.\n        *   @param enabled       Specifies if this light shall be enabled by default.\n        ***************************************************************************************************************/\n        public static createDirectional\n        (\n            scene         :BABYLON.Scene,\n            direction     :BABYLON.Vector3,\n            position      :BABYLON.Vector3,\n            intensity     :number,\n            diffuseColor  :BABYLON.Color3,\n            specularColor :BABYLON.Color3,\n            enabled       :boolean\n        )\n        : BABYLON.DirectionalLight\n        {\n            const light:BABYLON.DirectionalLight = new BABYLON.DirectionalLight\n            (\n                LightFactory.createNextLightId(),\n                direction,\n                scene\n            );\n\n            light.position  = position;\n            light.intensity = 1.0;\n            light.diffuse   = diffuseColor;\n            light.specular  = specularColor;\n            light.setEnabled( enabled );\n\n            return light;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a spot light.\n        *\n        *   @param scene         The scene that contains this light.\n        *   @param position      Where this light is located.\n        *   @param direction     The direction for this light.\n        *   @param angleDegrees  The angle of this spot light's cone.\n        *   @param exponent      The light decay speed with the distance from the emission spot.\n        *   @param diffuseColor  The color this light spreads to all surfaces.\n        *   @param specularColor The shining spot color this light spreads to faces.\n        *   @param range         How far the spot light shall reach.\n        *   @param enabled       Specifies if this light shall be enabled by default.\n        ***************************************************************************************************************/\n        public static createSpot\n        (\n            scene         :BABYLON.Scene,\n            position      :BABYLON.Vector3,\n            direction     :BABYLON.Vector3,\n            angleDegrees  :number,\n            exponent      :number,\n            diffuseColor  :BABYLON.Color3,\n            specularColor :BABYLON.Color3,\n            range         :number,\n            enabled       :boolean\n        )\n        : BABYLON.SpotLight\n        {\n            const light:BABYLON.SpotLight = new BABYLON.SpotLight\n            (\n                LightFactory.createNextLightId(),\n                position,\n                direction,\n                bz.MathUtil.degreesToRad( angleDegrees ),\n                exponent,\n                scene\n            );\n\n            light.diffuse  = diffuseColor ;\n            light.specular = specularColor;\n            light.range    = range;\n            light.setEnabled( enabled );\n\n            return light;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a point light.\n        *\n        *   @param scene         The scene that contains this light.\n        *   @param position      Where this light is located.\n        *   @param diffuseColor  The color this light spreads to all surfaces.\n        *   @param specularColor The shining spot color this light spreads to faces.\n        *   @param range         How far the point light shall reach.\n        *   @param intensity     The intensity of this light.\n        *   @param enabled       Specifies if this light shall be enabled by default.\n        ***************************************************************************************************************/\n        public static createPoint\n        (\n            scene         :BABYLON.Scene,\n            position      :BABYLON.Vector3,\n            diffuseColor  :BABYLON.Color3,\n            specularColor :BABYLON.Color3,\n            range         :number,\n            intensity     :number,\n            enabled       :boolean\n        )\n        : BABYLON.PointLight\n        {\n            const light:BABYLON.PointLight = new BABYLON.PointLight\n            (\n                LightFactory.createNextLightId(),\n                position,\n                scene\n            );\n\n            light.intensity = intensity;\n            light.diffuse   = diffuseColor;\n            light.specular  = specularColor;\n            light.range     = range;\n            light.setEnabled( enabled );\n\n            return light;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new light to create.\n        *\n        *   @return The next free unique id for a new light to create.\n        ***************************************************************************************************************/\n        private static createNextLightId() : string\n        {\n            return 'light' + String( LightFactory.nextLightId++ );\n        }\n    }\n","\n    import * as bz      from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the custom loading screen.\n    *******************************************************************************************************************/\n    export class LoadingScreen implements BABYLON.ILoadingScreen\n    {\n        /** Pointless interface implementation field. */\n        public                          loadingUIBackgroundColor            :string                     = '';\n        /** Pointless interface implementation field. */\n        public                          loadingUIText                       :string                     = '';\n\n        /** The canvas being used by the game engine. */\n        private             readonly    canvas                              :HTMLCanvasElement          = null;\n        /** The div that contains the loading image. */\n        private             readonly    loadingDiv                          :HTMLDivElement             = null;\n\n        /** ************************************************************************************************************\n        *   Creates the custom loading screen.\n        *\n        *   @param canvas The canvas element being used by the babylon.JS engine.\n        ***************************************************************************************************************/\n        public constructor( canvas:HTMLCanvasElement )\n        {\n            this.canvas = canvas;\n\n            this.loadingDiv = document.createElement( 'div' );\n            this.loadingDiv.id = 'loading';\n            this.loadingDiv.style.backgroundImage =\n            (\n                'url( '\n                + bz.SettingResource.PATH_IMAGE_LOADING\n                + bz.SettingEngine.BRANDING.getLoadingLogo()\n                + ' )'\n            );\n            document.body.appendChild( this.loadingDiv );\n        }\n\n        /** ************************************************************************************************************\n        *   Hides the canvas and shows the loading ui.\n        ***************************************************************************************************************/\n        public displayLoadingUI() : void\n        {\n            this.canvas.style.display     = 'none';\n            this.loadingDiv.style.display = 'block';\n\n            this.resizeLoadingDivToCanvasDimensions();\n        }\n\n        /** ************************************************************************************************************\n        *   Hides the loading ui and shows the canvas.\n        ***************************************************************************************************************/\n        public hideLoadingUI() : void\n        {\n            this.canvas.style.display     = 'block';\n            this.loadingDiv.style.display = 'none';\n        }\n\n        /** ************************************************************************************************************\n        *   Centers the loading div according to the new canvas size.\n        ***************************************************************************************************************/\n        public resizeLoadingDivToCanvasDimensions() : void\n        {\n/*\n            this.loadingDiv.style.left = ( ( window.innerWidth  - 200 ) / 2 ) + 'px';\n            this.loadingDiv.style.top  = ( ( window.innerHeight - 200 ) / 2 ) + 'px';\n*/\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Represents a Graphical User Interface that is displayed in the foreground of the screen.\n    *******************************************************************************************************************/\n    export abstract class GUI\n    {\n        /** The fullscreen gui in foreground. */\n        protected           readonly        guiFg                   :bjsg.AdvancedDynamicTexture            = null;\n        /** The FPS text block. */\n        private             readonly        fpsText                 :bjsg.TextBlock                         = null;\n        /** The manager for GUI messages. */\n        private             readonly        messageManager          :bz.GUIMessageManager                   = null;\n        /** The manager for GUI effects. */\n        private             readonly        fxManager               :bz.GUIFxManager                        = null;\n\n        /** The pause GUI. */\n        private             readonly        pauseGui                :bz.GUIPause                            = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new abstract Heads Up Display.\n        *\n        *   @param scene The scene to create this GUI for.\n        ***************************************************************************************************************/\n        protected constructor( scene:BABYLON.Scene )\n        {\n            // create foreground GUI\n            this.guiFg = bz.GUIFactory.createGUI( scene, true );\n\n            // pause GUI\n            this.pauseGui = new bz.GUIPause( this.guiFg );\n\n            // FPS text\n            this.fpsText = bz.GUIFactory.createTextBlock\n            (\n                '',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n                -bz.SettingGUI.GUI_BORDER_X,\n                bz.SettingGUI.GUI_BORDER_Y,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_RIGHT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( this.fpsText );\n            if ( !bz.SettingDebug.SHOW_FPS )\n            {\n                this.fpsText.isVisible = false;\n            }\n\n            // create the message and fx managers\n            this.messageManager = new bz.GUIMessageManager();\n            this.fxManager      = new bz.GUIFxManager();\n        }\n\n        /** ************************************************************************************************************\n        *   Inits all GUI components for the 3D Product Configurator..\n        ***************************************************************************************************************/\n        public abstract init() : void;\n\n        /** ************************************************************************************************************\n        *   Sets visibility for the first player view components.\n        *\n        *   @param visible If the first player view components should be visible or not.\n        ***************************************************************************************************************/\n        public setFirstPlayerViewComponentsVisibility( visible:boolean ) : void\n        {\n            // change nothing\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the GUIs to the specified dimensions.\n        *\n        *   @param width  The width  to set as the new GUI width.\n        *   @param height The height to set as the new GUI height.\n        ***************************************************************************************************************/\n        public updateSize( width:number, height:number ) : void\n        {\n            this.guiFg.idealWidth  = width;\n            this.guiFg.idealHeight = height;\n\n            this.guiFg.scaleTo( width, height );\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes all elements of this GUI.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.guiFg.dispose();\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the GUI information for the current game tick.\n        *\n        *   @param pause Specifies if the pause state is currently active.\n        ***************************************************************************************************************/\n        public render( pause:boolean ) : void\n        {\n            this.updateFps();\n\n            this.messageManager.render();\n            this.fxManager.render();\n\n            if ( pause )\n            {\n                this.pauseGui.render();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Adds a message to the message queue.\n        *\n        *   @param msg The message to add to the message queue.\n        ***************************************************************************************************************/\n        public addGuiMessage( msg:string ) : void\n        {\n            this.messageManager.addGuiMessage( this.guiFg, msg );\n        }\n\n        /** ************************************************************************************************************\n        *   Adds an effect to the fx queue.\n        *\n        *   @param type The type of GUI effect to add to the message queue.\n        ***************************************************************************************************************/\n        public addGuiFx( type:bz.GUIFxType ) : void\n        {\n            this.fxManager.addGuiFx( this.guiFg, type );\n        }\n\n        /** ************************************************************************************************************\n        *   Shows or hides the pause GUI.\n        *\n        *   @param visible The visibility to set for the pause GUI.\n        ***************************************************************************************************************/\n        public setPauseGuiVisibility( visible:boolean ) : void\n        {\n            this.pauseGui.setVisibility( visible );\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the current selected index of the pause menu.\n        *\n        *   @return The current active pause menu index.\n        ***************************************************************************************************************/\n        public getPauseMenuIndex() : number\n        {\n            return this.pauseGui.getPauseMenuIndex();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the active index for the pause menu.\n        *\n        *   @param index The index of the pause menu item to set.\n        ***************************************************************************************************************/\n        public setPauseMenuIndex( index:number ) : void\n        {\n            this.pauseGui.setPauseMenuIndex( index );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the Frames Per Second counter.\n        ***************************************************************************************************************/\n        private updateFps() : void\n        {\n            // update and assign fps\n            this.fpsText.text = bz.Main.game.getFps().toFixed( 2 ) + ' fps';\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Creates all types of GUI components.\n    *******************************************************************************************************************/\n    export abstract class GUIFactory\n    {\n        /** Next ID to assign for GUI component creation. */\n        private         static          nextGuiId                           :number                 = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a fullscreen GUI in bg or fg.\n        *\n        *   @param scene      The scene that contains this light.\n        *   @param foreground Specifies if this GUI shall be set in foreground of this scene.\n        *                     <code>false</code> will put this GUI into the background.\n        *\n        *   @return The fullscreen GUI.\n        ***************************************************************************************************************/\n        public static createGUI\n        (\n            scene      :BABYLON.Scene,\n            foreground :boolean\n        )\n        : bjsg.AdvancedDynamicTexture\n        {\n            const gui:bjsg.AdvancedDynamicTexture = bjsg.AdvancedDynamicTexture.CreateFullscreenUI\n            (\n                GUIFactory.createNextGuiId(),\n                foreground\n/*\n                scene,\n                BABYLON.Texture.NEAREST_SAMPLINGMODE\n*/\n            );\n\n            gui.renderAtIdealSize = true;\n            gui.useSmallestIdeal  = false;\n            gui.renderScale       = 1.0;\n\n            return gui;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a rectangle for the GUI.\n        *\n        *   @param x           Position of the left edge.\n        *   @param y           Position of the top edge.\n        *   @param width       The horizontal dimension.\n        *   @param height      The vertical dimension.\n        *   @param colorBorder A css value for the border color.\n        *   @param colorFill   A css value for the fill color.\n        *\n        *   @return The specified rectangle.\n        ***************************************************************************************************************/\n        public static createRectangle\n        (\n            x             :number,\n            y             :number,\n            width         :number,\n            height        :number,\n            colorBorder   :string,\n            colorFill     :string\n        )\n        : bjsg.Rectangle\n        {\n            const rectangle:bjsg.Rectangle = new bjsg.Rectangle( GUIFactory.createNextGuiId() );\n\n            rectangle.left       = x;\n            rectangle.top        = y;\n            rectangle.width      = String( width  ) + 'px';\n            rectangle.height     = String( height ) + 'px';\n            rectangle.color      = colorBorder;\n            rectangle.background = colorFill;\n\n            rectangle.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            rectangle.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            return rectangle;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a text block for the GUI.\n        *\n        *   @param text          The text to set into the block.\n        *   @param fontSize      The font size of the text to display.\n        *   @param color         A css value for the text color.\n        *   @param shadowColor   A css value for the text's shadow color.\n        *   @param x             Position of the left edge.\n        *   @param y             Position of the top edge.\n        *   @param width         The horizontal dimension.\n        *   @param height        The vertical   dimension.\n        *   @param alignmentHorz The horizontal alignment.\n        *   @param alignmentVert The vertical   alignment.\n        *   @param onPointerDown A callback to invoke when the pointer is down.\n        *\n        *   @return The specified text block.\n        ***************************************************************************************************************/\n        public static createTextBlock\n        (\n            text          :string,\n            fontSize      :number,\n            color         :string,\n            shadowColor   :string,\n            x             :number,\n            y             :number,\n            width         :number,\n            height        :number,\n            alignmentHorz :number,\n            alignmentVert :number,\n            onPointerDown :() => void\n        )\n        : bjsg.TextBlock\n        {\n            const textBlock:bjsg.TextBlock = new bjsg.TextBlock(  GUIFactory.createNextGuiId()  );\n\n            textBlock.text     = text;\n            textBlock.left     = x;\n            textBlock.top      = y;\n            textBlock.width    = String( width    ) + 'px';\n            textBlock.height   = String( height   ) + 'px';\n            textBlock.fontSize = String( fontSize ) + 'px';\n            textBlock.color    = color;\n\n            if ( shadowColor !== null )\n            {\n                textBlock.shadowColor   = shadowColor;\n                textBlock.shadowBlur    = 0.0;\n                textBlock.shadowOffsetX = 1.0;\n                textBlock.shadowOffsetY = 1.0;\n            }\n\n            textBlock.horizontalAlignment     = alignmentHorz;\n            textBlock.verticalAlignment       = alignmentVert;\n            textBlock.textHorizontalAlignment = alignmentHorz;\n            textBlock.textVerticalAlignment   = alignmentVert;\n\n            if ( onPointerDown )\n            {\n                textBlock.onPointerDownObservable.add\n                (\n                    () : void => {\n                        onPointerDown();\n                    }\n                );\n            }\n\n            return textBlock;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates an input field for the GUI.\n        *\n        *   @param text    The text to set as default text.\n        *   @param colorFg A css value for the text color.\n        *   @param colorBg A css value for the background color.\n        *   @param x       Position of the left edge.\n        *   @param y       Position of the top edge.\n        *   @param width   The horizontal dimension.\n        *   @param height  The vertical dimension.\n        *\n        *   @return The specified input field.\n        ***************************************************************************************************************/\n        public static createInputField\n        (\n            text    :string,\n            colorFg :string,\n            colorBg :string,\n            x       :number,\n            y       :number,\n            width   :number,\n            height  :number\n        )\n        : bjsg.InputText\n        {\n            const inputField:bjsg.InputText = new bjsg.InputText( GUIFactory.createNextGuiId() );\n\n            inputField.text       = text;\n            inputField.color      = colorFg;\n            inputField.background = colorBg;\n            inputField.left       = x;\n            inputField.top        = y;\n            inputField.width      = String( width ) + 'px';\n            inputField.height     = String(height ) + 'px';\n\n            inputField.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            inputField.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            return inputField;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a button for the GUI.\n        *\n        *   @param text    The text to set into the block.\n        *   @param colorFg A css value for the text color.\n        *   @param colorBg A css value for the background color.\n        *   @param x       Position of the left edge.\n        *   @param y       Position of the top edge.\n        *   @param width   The horizontal dimension.\n        *   @param height  The vertical dimension.\n        *   @param onClick The callback to invoke when the button is clicked.\n        *\n        *   @return The specified button.\n        ***************************************************************************************************************/\n        public static createButton\n        (\n            text    :string,\n            colorFg :string,\n            colorBg :string,\n            x       :number,\n            y       :number,\n            width   :number,\n            height  :number,\n            onClick :() => void\n        )\n        : bjsg.Button\n        {\n            const button:bjsg.Button = bjsg.Button.CreateSimpleButton\n            (\n                GUIFactory.createNextGuiId(),\n                text\n            );\n\n            button.color      = colorFg;\n            button.background = colorBg;\n            button.left       = x;\n            button.top        = y;\n            button.width      = String( width  ) + 'px';\n            button.height     = String( height ) + 'px';\n\n            button.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            button.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            button.onPointerClickObservable.add\n            (\n                () :void => {\n                    onClick();\n                }\n            );\n\n            return button;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a checkbox for the GUI.\n        *\n        *   @param isChecked Specifies if the checkbox is initially checked.\n        *   @param colorFg   A css value for the foreground color.\n        *   @param colorBg   A css value for the background color.\n        *   @param x         Position of the left edge.\n        *   @param y         Position of the top edge.\n        *   @param width     The horizontal dimension.\n        *   @param height    The vertical dimension.\n        *   @param onToggle  The callback to invoke when the checkbox is toggled.\n        *\n        *   @return The specified checkbox.\n        ***************************************************************************************************************/\n        public static createCheckbox\n        (\n            isChecked :boolean,\n            colorFg   :string,\n            colorBg   :string,\n            x         :number,\n            y         :number,\n            width     :number,\n            height    :number,\n            onToggle  :() => void\n        )\n        : bjsg.Checkbox\n        {\n            const checkbox:bjsg.Checkbox = new bjsg.Checkbox\n            (\n                GUIFactory.createNextGuiId()\n            );\n\n            checkbox.isChecked  = isChecked;\n            checkbox.color      = colorFg;\n            checkbox.background = colorBg;\n            checkbox.left       = x;\n            checkbox.top        = y;\n            checkbox.width      = String( width  ) + 'px';\n            checkbox.height     = String( height ) + 'px';\n\n            checkbox.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            checkbox.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            checkbox.onPointerClickObservable.add\n            (\n                () :void => {\n                    onToggle();\n                }\n            );\n\n            return checkbox;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a radiobutton for the GUI that is assigned to a selection group.\n        *\n        *   @param group     The name of the group this radio button belongs to.\n        *   @param colorFg   A css value for the foreground color.\n        *   @param colorBg   A css value for the background color.\n        *   @param x         Position of the left edge.\n        *   @param y         Position of the top edge.\n        *   @param width     The horizontal dimension.\n        *   @param height    The vertical dimension.\n        *   @param onCheck  The callback to invoke when this radiobutton is checked.\n        *\n        *   @return The specified radiobutton.\n        ***************************************************************************************************************/\n        public static createRadioButton\n        (\n            group     :string,\n            colorFg   :string,\n            colorBg   :string,\n            x         :number,\n            y         :number,\n            width     :number,\n            height    :number,\n            onCheck   :( checked:boolean ) => void\n        )\n        : bjsg.RadioButton\n        {\n            const radioButton:bjsg.RadioButton = new bjsg.RadioButton\n            (\n                GUIFactory.createNextGuiId()\n            );\n\n            radioButton.group      = group;\n            radioButton.color      = colorFg;\n            radioButton.background = colorBg;\n            radioButton.left       = x;\n            radioButton.top        = y;\n            radioButton.width      = String( width  ) + 'px';\n            radioButton.height     = String( height ) + 'px';\n\n            radioButton.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            radioButton.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            radioButton.onIsCheckedChangedObservable.add\n            (\n                ( checked:boolean ) :void => {\n                    onCheck( checked );\n                }\n            );\n\n            return radioButton;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a slider for the GUI.\n        *\n        *   @param value       The initial value of this slider.\n        *   @param minimum     The minimum value of this slider.\n        *   @param maximum     The maximum value of this slider.\n        *   @param colorFg     A css value for the fg color.\n        *   @param colorBg     A css value for the bg color.\n        *   @param colorBorder A css value for the border color.\n        *   @param x           Position of the left edge.\n        *   @param y           Position of the top edge.\n        *   @param width       The horizontal dimension.\n        *   @param height      The vertical dimension.\n        *   @param onChange    The callback to invoke when the slider value has changed.\n        *\n        *   @return The specified slider.\n        ***************************************************************************************************************/\n        public static createSlider\n        (\n            value       :number,\n            minimum     :number,\n            maximum     :number,\n            colorFg     :string,\n            colorBg     :string,\n            colorBorder :string,\n            x           :number,\n            y           :number,\n            width       :number,\n            height      :number,\n            onChange    :( value:number ) => void\n        )\n        : bjsg.Slider\n        {\n            const slider:bjsg.Slider = new bjsg.Slider\n            (\n                GUIFactory.createNextGuiId()\n            );\n\n            slider.value       = value;\n            slider.minimum     =  minimum;\n            slider.maximum     =  maximum;\n\n            slider.color       = colorFg;\n            slider.background  = colorBg;\n            slider.borderColor = colorBorder;\n\n            slider.left        = x;\n            slider.top         = y;\n            slider.width       = String( width  ) + 'px';\n            slider.height      = String( height ) + 'px';\n\n            slider.horizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            slider.verticalAlignment   = bjsg.Control.VERTICAL_ALIGNMENT_TOP;\n\n            slider.onValueChangedObservable.add( onChange );\n\n            return slider;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a line for the GUI.\n        *   The line looks blurry and shabby - Consider using createRect with a height of one instead.\n        *\n        *   @param x1          Start position X.\n        *   @param y1          Start position Y.\n        *   @param x2          End position X.\n        *   @param y2          End position Y.\n        *   @param width       The line width in pixels.\n        *   @param color       The color of the line.\n        *   @param shadowColor The color of the shadow or <code>null</code> for no shadow.\n        *\n        *   @return The specified line.\n        ***************************************************************************************************************/\n        public static createLine\n        (\n            x1          :number,\n            y1          :number,\n            x2          :number,\n            y2          :number,\n            width       :number,\n            color       :string,\n            shadowColor :string\n        )\n        : bjsg.Line\n        {\n            const line:bjsg.Line = new bjsg.Line\n            (\n                GUIFactory.createNextGuiId()\n            );\n\n            line.x1 = x1;\n            line.y1 = y1;\n            line.x2 = x2;\n            line.y2 = y2;\n\n            line.color     = color;\n            line.lineWidth = width;\n\n            if ( shadowColor !== null )\n            {\n                line.shadowColor   = shadowColor;\n                line.shadowBlur    = 0.0;\n                line.shadowOffsetX = 1.0;\n                line.shadowOffsetY = 1.5;\n            }\n\n            return line;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates an image for the GUI.\n        *\n        *   @param filename    The name of the image file to display.\n        *   @param x           Left edge of the image.\n        *   @param y           Top edge of the image.\n        *   @param alignHorz   Horizontal alignment.\n        *   @param alignVert   Vertical alignment.\n        *   @param shadowColor The color of the shadow or <code>null</code> for no shadow.\n        *\n        *   @return The specified image.\n        ***************************************************************************************************************/\n        public static createImage\n        (\n            filename    :string,\n            x           :number,\n            y           :number,\n            alignHorz   :number,\n            alignVert   :number,\n            shadowColor :string\n        )\n        : bjsg.Image\n        {\n            const image:bjsg.Image = new bjsg.Image\n            (\n                GUIFactory.createNextGuiId(),\n                bz.SettingResource.PATH_IMAGE_GUI + filename\n            );\n\n            image.horizontalAlignment = alignHorz;\n            image.verticalAlignment   = alignVert;\n            image.autoScale           = true;\n            image.stretch             = bjsg.Image.STRETCH_NONE;\n\n            image.left = x;\n            image.top  = y;\n\n            if ( shadowColor !== null )\n            {\n                image.shadowColor   = shadowColor;\n                image.shadowBlur    = 0.0;\n                image.shadowOffsetX = 1.0;\n                image.shadowOffsetY = 1.0;\n            }\n\n            return image;\n        }\n\n        /** ************************************************************************************************************\n        *   This is a workaround because babylon.JS allows unselection of the selected radio button in a group.\n        *\n        *   @param radioButtons All radio buttons of the radio button group.\n        *   @param index        The index of the radio button in the group to check if all buttons are unchecked.\n        ***************************************************************************************************************/\n        public static checkRadioButtonIfAllAreUnchecked( radioButtons:bjsg.RadioButton[], index:number ) : void\n        {\n            let allRadioButtonsUnchecked:boolean = true;\n            for ( const radioButton of radioButtons )\n            {\n                if ( radioButton.isChecked )\n                {\n                    allRadioButtonsUnchecked = false;\n                }\n            }\n\n            // check if all buttons are unchecked\n            if ( allRadioButtonsUnchecked )\n            {\n                // check the specified button again\n                radioButtons[ index ].isChecked = true;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets a new caption for the specified button.\n        *\n        *   @param button  The button to set a new text for.\n        *   @param newText The text to set as the button's caption.\n        ***************************************************************************************************************/\n        public static setVisorToggleButtonText( button:bjsg.Button, newText:string ) : void\n        {\n            const textName  :string         = button.name + '_button';\n            const textBlock :bjsg.TextBlock = button.getChildByType\n            (\n                textName,\n                'TextBlock'\n            ) as bjsg.TextBlock;\n\n            textBlock.text = newText;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next id for a new gui component to create.\n        *\n        *   @return The next free unique id for a new gui component to create.\n        ***************************************************************************************************************/\n        private static createNextGuiId() : string\n        {\n            return 'gui' + String( GUIFactory.nextGuiId++ );\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   Manages the Graphical User Interface that contains all GUI elements for one game level.\n    *******************************************************************************************************************/\n    export class GUIGame extends bz.GUI\n    {\n        /** The wearpon image. */\n        protected                           wearponImage            :bjsg.Image                         = null;\n        /** The corsshair. */\n        protected                           crosshair               :bjsg.Image                         = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new Heads Up Display for a game level.\n        *\n        *   @param scene The babylon.JS scene to create this GUI for.\n        ***************************************************************************************************************/\n        public constructor( scene:BABYLON.Scene )\n        {\n            super( scene );\n        }\n\n        /** ************************************************************************************************************\n        *   Initializes the Heads Up Display for a game level.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            this.wearponImage = bz.GUIFactory.createImage\n            (\n                'wearpon/autoShotgun.png',\n                -bz.SettingGUI.GUI_BORDER_X,\n                0,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_RIGHT,\n                bjsg.Control.VERTICAL_ALIGNMENT_BOTTOM,\n                null\n            );\n            this.guiFg.addControl( this.wearponImage );\n\n            this.crosshair = bz.GUIFactory.createImage\n            (\n                'crosshair/default.png',\n                0,\n                0,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER,\n                bjsg.Control.VERTICAL_ALIGNMENT_CENTER,\n                null\n            );\n            this.guiFg.addControl( this.crosshair );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the GUI information for the current game tick.\n        *\n        *   @param pause Specifies if the pause state is currently active.\n        ***************************************************************************************************************/\n        public render( pause:boolean ) : void\n        {\n            super.render( pause );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets visibility for the first player view components.\n        *\n        *   @param visible If the first player view components should be visible or not.\n        ***************************************************************************************************************/\n        public setFirstPlayerViewComponentsVisibility( visible:boolean ) : void\n        {\n            // change visibility for wearpon and crosshair\n            this.wearponImage.isVisible = visible;\n            this.crosshair.isVisible    = visible;\n        }\n    }\n","\n    /* eslint-disable max-len */\n\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   The GUI for the 'Human Body Partitions' stage.\n    *******************************************************************************************************************/\n    export class GUIHumanBodyPartitions extends bz.GUI\n    {\n        /** The bg color for the GUI. */\n        public      static  readonly    GUI_COLOR_BG            :string                             = 'rgba( 0, 0, 0, 0.125 )';\n        /** The text color for the GUI. */\n        public      static  readonly    GUI_COLOR_TEXT          :string                             = bz.SettingColor.COLOR_CSS_WHITE_OPAQUE;\n        /** The text shadow color for the GUI. */\n        public      static  readonly    GUI_COLOR_SHADOW        :string                             = bz.SettingColor.COLOR_CSS_BLACK_OPAQUE;\n        /** The border color for the GUI. */\n        public      static  readonly    GUI_COLOR_BORDER        :string                             = '#ffffff';\n\n        /** A reference to the camera zoom slider. */\n        public                          cameraZoomSlider        :bjsg.Slider                        = null;\n\n        /** The description GUI for one selected body part. */\n        public                          descriptionGUI          :bz.GUIHumanPartitionDescription    = null;\n\n        /** A reference to the Human Body Partition stage. */\n        private             readonly    parent                  :bz.HumanBodyPartitions             = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new GUI for the Product Configurator.\n        *\n        *   @param scene  The babylon.JS scene to create this GUI for.\n        *   @param parent The Product Configurator Stage.\n        ***************************************************************************************************************/\n        public constructor( scene:BABYLON.Scene, parent:bz.HumanBodyPartitions )\n        {\n            super( scene );\n\n            this.parent = parent;\n        }\n\n        /** ************************************************************************************************************\n        *   Inits all GUI components for the 3D Product Configurator.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            const rectangleLeftTop:bjsg.Rectangle = bz.GUIFactory.createRectangle\n            (\n                25,\n                25,\n                300,\n                200,\n                GUIHumanBodyPartitions.GUI_COLOR_BORDER,\n                GUIHumanBodyPartitions.GUI_COLOR_BG\n            );\n            this.guiFg.addControl( rectangleLeftTop );\n\n            const logo:bjsg.Image = bz.GUIFactory.createImage\n            (\n                bz.SettingEngine.BRANDING.getHbpGuiLogo(),\n                50,\n                50,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                GUIHumanBodyPartitions.GUI_COLOR_SHADOW\n            );\n            this.guiFg.addControl( logo );\n\n            const titleRow:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Human Body Partitions, v.0.0.1, PoC',\n                bz.SettingGUI.GUI_FONT_SIZE_MEDIUM,\n                GUIHumanBodyPartitions.GUI_COLOR_TEXT,\n                GUIHumanBodyPartitions.GUI_COLOR_SHADOW,\n                50,\n                115,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            titleRow.textHorizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER;\n            this.guiFg.addControl( titleRow );\n\n            const line1:bjsg.Rectangle = bz.GUIFactory.createRectangle\n            (\n                50,\n                145,\n                250,\n                1,\n                GUIHumanBodyPartitions.GUI_COLOR_BORDER,\n                GUIHumanBodyPartitions.GUI_COLOR_BG\n            );\n            this.guiFg.addControl( line1 );\n\n            const textCameraZoom:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Zoom',\n                bz.SettingGUI.GUI_FONT_SIZE_MEDIUM,\n                GUIHumanBodyPartitions.GUI_COLOR_TEXT,\n                GUIHumanBodyPartitions.GUI_COLOR_SHADOW,\n                50,\n                155,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            textCameraZoom.textHorizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER;\n            this.guiFg.addControl( textCameraZoom );\n\n            this.cameraZoomSlider = bz.GUIFactory.createSlider\n            (\n                175.0,\n                145.0,\n                400.0,\n                bz.SettingEngine.BRANDING.getPrimalColorCss(),\n                bz.SettingColor.COLOR_CSS_COMPUTY_GRAY_OPAQUE,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                50,\n                180,\n                250,\n                20,\n                ( value:number ) :void =>\n                {\n                    // bz.Debug.gui.log( 'slider changed to [' + value + ']' );\n\n                    this.parent.getCameraSystem().getArcRotateCamera().radius = ( 400.0 + 100.0 - value );\n                }\n            );\n            this.guiFg.addControl( this.cameraZoomSlider );\n\n            // init description gui\n            this.descriptionGUI = new bz.GUIHumanPartitionDescription( this.guiFg );\n            this.descriptionGUI.setBodyPartDescription( false, null );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the GUI information for the current game tick.\n        *\n        *   @param pause Specifies if the pause state is currently active.\n        ***************************************************************************************************************/\n        public render( pause:boolean ) : void\n        {\n            super.render( pause );\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   The GUI part with the description panel.\n    *******************************************************************************************************************/\n    export class GUIHumanPartitionDescription\n    {\n        /** The left bottom body part descriptor panel. */\n        private             readonly    rectangleLeftBottom         :bjsg.Rectangle      = null;\n        /** The left bottom title field. */\n        private             readonly    bodyPartTitle               :bjsg.TextBlock      = null;\n        /** The left bottom text field. */\n        private             readonly    bodyPartText                :bjsg.TextBlock      = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new GUI for the Product Configurator.\n        *\n        *   @param guiFg The gui to append all components to.\n        ***************************************************************************************************************/\n        public constructor( guiFg:bjsg.AdvancedDynamicTexture )\n        {\n            this.rectangleLeftBottom = bz.GUIFactory.createRectangle\n            (\n                25,\n                250,\n                300,\n                200,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_BORDER,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_BG\n            );\n            guiFg.addControl( this.rectangleLeftBottom );\n\n            this.bodyPartTitle = bz.GUIFactory.createTextBlock\n            (\n                '',\n                bz.SettingGUI.GUI_FONT_SIZE_MEDIUM,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_TEXT,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_SHADOW,\n                50,\n                275,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.bodyPartTitle.textHorizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER;\n            guiFg.addControl( this.bodyPartTitle );\n\n            this.bodyPartText = bz.GUIFactory.createTextBlock\n            (\n                '',\n                bz.SettingGUI.GUI_FONT_SIZE_MEDIUM,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_TEXT,\n                bz.GUIHumanBodyPartitions.GUI_COLOR_SHADOW,\n                50,\n                315,\n                250,\n                125,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.bodyPartText.textHorizontalAlignment = bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER;\n            this.bodyPartText.textWrapping = true;\n            guiFg.addControl( this.bodyPartText );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets visibility and content for the 'Body Part Description' rectangle.\n        *\n        *   @param visible  If the field shall be visible or not.\n        *   @param meshName The name of the mesh that has been selected.\n        ***************************************************************************************************************/\n        public setBodyPartDescription( visible:boolean, meshName:string ) : void\n        {\n            bz.Debug.hbp.log( 'Show info for mesh [' + meshName + ']' );\n\n            // show or hide all compontnts\n            this.rectangleLeftBottom.isVisible = visible;\n            this.bodyPartTitle.isVisible       = visible;\n            this.bodyPartText.isVisible        = visible;\n\n            // assign texts\n            switch ( meshName )\n            {\n                case 'body':\n                {\n                    this.bodyPartTitle.text = 'Upper Body';\n                    this.bodyPartText.text = 'If you want an effective upper body workout optimized for muscle growth, '\n                    + 'then you need to read this article.\\nWhen it comes to picking a workout split that maximizes '\n                    + 'muscle growth, there’s a lot of factors that need to be considered.';\n                    break;\n                }\n\n                case 'head':\n                {\n                    this.bodyPartTitle.text = 'Head';\n                    this.bodyPartText.text = 'Nearly everyone has had headache pain, and most of us have had it many '\n                    + 'times. A minor headache is little more than a nuisance that\\'s relieved by an over-the-counter '\n                    + 'pain reliever, some food or coffee, or a short rest.';\n                    break;\n                }\n\n                case 'legs_upper':\n                {\n                    this.bodyPartTitle.text = 'Upper Thigh';\n                    this.bodyPartText.text = 'The upper leg is often called the thigh. It’s the area that runs from '\n                    + 'the hip to the knee in each leg. The hamstrings are three muscles located on the back of the '\n                    + 'thigh. They allow the knees to bend.';\n                    break;\n                }\n\n                case 'knees':\n                {\n                    this.bodyPartTitle.text = 'Knees';\n                    this.bodyPartText.text = 'In humans and other primates, the knee joins the thigh with the leg and '\n                    + 'consists of two joints: one between the femur and tibia (tibiofemoral joint).';\n                    break;\n                }\n\n                case 'legs_lower':\n                {\n                    this.bodyPartTitle.text = 'Lower Thigh';\n                    this.bodyPartText.text = 'The lower leg is a major anatomical part of the skeletal system. '\n                    + 'Together with the upper leg, it forms the lower extremity. It lies between the knee and the '\n                    + 'ankle, while the upper leg lies between the hip and the knee.';\n                    break;\n                }\n\n                case 'feet':\n                {\n                    this.bodyPartTitle.text = 'Feet';\n                    this.bodyPartText.text = 'The foot (plural feet) is an anatomical structure found in many '\n                    + 'vertebrates. It is the terminal portion of a limb which bears weight and allows locomotion. '\n                    + 'In many animals with feet, the foot is a separate organ at the terminal part of the leg.';\n                    break;\n                }\n            }\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   Represents the Graphical User Interface of the pause screen / menu.\n    *******************************************************************************************************************/\n    export class GUIPause\n    {\n        /** The bg color for the GUI. */\n        private     static  readonly        GUI_COLOR_BG            :string                                 = (\n            'rgba( 100, 100, 100, 0.25 )'\n        );\n\n        /** All items of the GUI menu. */\n        private     static  readonly        GUI_MENU_ITEMS          :bz.GUIMenuItem[]                       =\n        [\n            new bz.GUIMenuItem( 'Level 1 - Office',                  bz.GUIAction.SWITCH_TO_STAGE_1 ),\n            new bz.GUIMenuItem( 'Level 2 - Test Level',              bz.GUIAction.SWITCH_TO_STAGE_2 ),\n            new bz.GUIMenuItem( 'Level 3 - Room Viewer',             bz.GUIAction.SWITCH_TO_STAGE_3 ),\n            new bz.GUIMenuItem( 'Level 4 - 3D Product Configurator', bz.GUIAction.SWITCH_TO_STAGE_4 ),\n            new bz.GUIMenuItem( 'Level 5 - Intro Logo',              bz.GUIAction.SWITCH_TO_STAGE_5 ),\n            new bz.GUIMenuItem( 'Level 6 - Human Body Partitions',   bz.GUIAction.SWITCH_TO_STAGE_6 ),\n            new bz.GUIMenuItem( 'Level 7 - Test Site',               bz.GUIAction.SWITCH_TO_STAGE_7 ),\n            new bz.GUIMenuItem( 'Level 8 - Spacescene',              bz.GUIAction.SWITCH_TO_STAGE_8 ),\n            new bz.GUIMenuItem( 'Resume Game',                       bz.GUIAction.RESUME_GAME       ),\n        ];\n\n        /** The translucent background. */\n        private             readonly        bg                      :bjsg.Rectangle                  = null;\n        /** The 'pause' headline text. */\n        private             readonly        headline                :bjsg.TextBlock                  = null;\n        /** The GUI menu. */\n        private             readonly        menu                    :bz.GUIMenu                             = null;\n\n        /** ************************************************************************************************************\n        *   Initializes all components of the pause screen and adds them to the given component.\n        *\n        *   @param guiFg The gui to append all components to.\n        ***************************************************************************************************************/\n        public constructor( guiFg:bjsg.AdvancedDynamicTexture )\n        {\n            // bg\n            this.bg = bz.GUIFactory.createRectangle\n            (\n                0,\n                0,\n                0,\n                0,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT,\n                GUIPause.GUI_COLOR_BG\n            );\n            this.bg.width  = '100%';\n            this.bg.height = '100%';\n            guiFg.addControl( this.bg );\n\n            // headline\n            this.headline = bz.GUIFactory.createTextBlock\n            (\n                'PAUSE MENU',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n                0,\n                bz.SettingGUI.GUI_BORDER_Y,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            guiFg.addControl( this.headline );\n\n            // create GUI menu\n            this.menu = new bz.GUIMenu\n            (\n                guiFg,\n                GUIPause.GUI_MENU_ITEMS,\n                ( bz.SettingGUI.GUI_BORDER_Y + 100 ),\n                bz.SettingGUI.WRAP_PAUSE_MENU_ITEMS\n            );\n\n            // initially hide all components\n            this.setVisibility( false );\n        }\n\n        /** ************************************************************************************************************\n        *   Shows or hides the pause GUI.\n        *\n        *   @param visible The visibility to set for the pause GUI.\n        ***************************************************************************************************************/\n        public setVisibility( visible:boolean ) : void\n        {\n            this.headline.isVisible = visible;\n            this.bg.isVisible       = visible;\n\n            this.menu.setVisibility( visible );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the pause GUI information for the current game tick.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            this.handlePauseKeys( bz.Main.game.getKeySystem() );\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the current selected index of the pause menu.\n        *\n        *   @return The current active pause menu index.\n        ***************************************************************************************************************/\n        public getPauseMenuIndex() : number\n        {\n            return this.menu.getPauseMenuIndex();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the active index for the pause menu.\n        *\n        *   @param index The index of the pause menu item to set.\n        ***************************************************************************************************************/\n        public setPauseMenuIndex( index:number ) : void\n        {\n            this.menu.setPauseMenuIndex( index );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles pressed keys in the pause menu.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        private handlePauseKeys( keySystem:bz.KeySystem ) : void\n        {\n            if\n            (\n                    keySystem.isPressed( bz.KeyCodes.KEY_W  )\n                ||  keySystem.isPressed( bz.KeyCodes.KEY_UP )\n            )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_W  );\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_UP );\n\n                this.menu.selectPreviousItem();\n            }\n\n            if\n            (\n                    keySystem.isPressed( bz.KeyCodes.KEY_S    )\n                ||  keySystem.isPressed( bz.KeyCodes.KEY_DOWN )\n            )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_S    );\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_DOWN );\n\n                this.menu.selectNextItem();\n            }\n\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n                this.menu.performMenuItem();\n            }\n        }\n    }\n","\n    import * as bz   from '../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   The GUI for the '3D product configurator' stage.\n    *******************************************************************************************************************/\n    export class GUIProductConfigurator extends bz.GUI\n    {\n        /** The colors for the visor. */\n        private     static  readonly    VISOR_COLORS                :BABYLON.Color3[]           =\n        [\n            new BABYLON.Color3( 0.3,    0.4,    0.3    ),\n            new BABYLON.Color3( 0.9647, 0.8235, 0.4392 ),\n            new BABYLON.Color3( 0.65,   0.65,   0.65   ),\n            new BABYLON.Color3( 0.33,   0.33,   0.33   ),\n        ];\n        /** The colors for the visor text shadows. */\n        private     static  readonly    VISOR_COLOR_SHADOWS         :string[]                   =\n        [\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n            bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n            bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n        ];\n        /** The color names for the visor. */\n        private     static  readonly    VISOR_COLOR_NAMES           :string[]                   =\n        [\n            'Verde Granturismo',\n            'Pearl Beige',\n            'Grigio Touring Metallic',\n            'Grigio Granito',\n        ];\n\n        /** The colors for the helmet. */\n        private     static  readonly    HELMET_COLORS               :BABYLON.Color3[]           =\n        [\n            new BABYLON.Color3( 0.4392, 0.4392, 0.4392 ),\n            new BABYLON.Color3( 1.0,    1.0,    1.0    ),\n            new BABYLON.Color3( 0.85,   0.4,    0.0    ),\n            new BABYLON.Color3( 0.8,    0.15,   0.15   ),\n        ];\n        /** The colors for the helmet text shadows. */\n        private     static  readonly    HELMET_COLOR_SHADOWS        :string[]                   =\n        [\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n            bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n        ];\n        /** The color names for the helmet. */\n        private     static  readonly    HELMET_COLOR_NAMES          :string[]                   =\n        [\n            'Grigio Titanio',\n            'Bianco Eldorado',\n            'Arancio Trionfale',\n            'Rosso Corallo',\n        ];\n\n        /** The bg color for the GUI. */\n        // tslint:disable-next-line:max-line-length\n        private     static  readonly    GUI_COLOR_BG                :string                     = (\n            'rgba( 100, 100, 100, 0.5 )'\n        );\n        /** The text color for the GUI. */\n        private     static  readonly    GUI_COLOR_TEXT              :string                     = (\n            bz.SettingColor.COLOR_CSS_WHITE_OPAQUE\n        );\n        /** The text shadow color for the GUI. */\n        private     static  readonly    GUI_COLOR_SHADOW            :string                     = (\n            bz.SettingColor.COLOR_CSS_BLACK_OPAQUE\n        );\n        /** The border color for the GUI. */\n        private     static  readonly    GUI_COLOR_BORDER            :string                     = '#c9c9c9';\n\n        /** A reference to the camera zoom slider. */\n        public                          cameraZoomSlider            :bjsg.Slider                = null;\n        /** A reference to the toggle button to open and close the visor. */\n        public                          visorToggleButton           :bjsg.Button                = null;\n\n        /** All checkboxes that change the visor color. */\n        private             readonly    visorColorRadioButtons      :bjsg.RadioButton[]         = [];\n        /** All checkboxes that change the helmet color. */\n        private             readonly    helmetColorRadioButtons     :bjsg.RadioButton[]         = [];\n        /** A reference to the Product Configurator stage. */\n        private             readonly    parent                      :bz.ProductConfigurator     = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new GUI for the Product Configurator.\n        *\n        *   @param scene  The babylon.JS scene to create this GUI for.\n        *   @param parent The Product Configurator Stage.\n        ***************************************************************************************************************/\n        public constructor( scene:BABYLON.Scene, parent:bz.ProductConfigurator )\n        {\n            super( scene );\n\n            this.parent = parent;\n        }\n\n        /** ************************************************************************************************************\n        *   Inits all GUI components for the 3D Product Configurator.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            const rectangleOuter:bjsg.Rectangle = bz.GUIFactory.createRectangle\n            (\n                22,\n                22,\n                306,\n                646,\n                GUIProductConfigurator.GUI_COLOR_BORDER,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( rectangleOuter );\n\n            const rectangleOuter2:bjsg.Rectangle = bz.GUIFactory.createRectangle\n            (\n                23,\n                23,\n                304,\n                644,\n                GUIProductConfigurator.GUI_COLOR_BORDER,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( rectangleOuter2 );\n\n            const rectangleInner:bjsg.Rectangle = bz.GUIFactory.createRectangle\n            (\n                25,\n                25,\n                300,\n                640,\n                GUIProductConfigurator.GUI_COLOR_BORDER,\n                GUIProductConfigurator.GUI_COLOR_BG\n            );\n            this.guiFg.addControl( rectangleInner );\n\n            const logo:bjsg.Image = bz.GUIFactory.createImage\n            (\n                bz.SettingEngine.BRANDING.getPcGuiLogo(),\n                50,\n                50,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                GUIProductConfigurator.GUI_COLOR_SHADOW\n            );\n            this.guiFg.addControl( logo );\n\n            const titleRow1:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                '3D Product',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                160,\n                50,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( titleRow1 );\n            const titleRow2:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Configurator',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                160,\n                80,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( titleRow2 );\n            const titleRow3:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'v.0.4.1, MVP',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                160,\n                110,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( titleRow3 );\n\n            const line1:bjsg.Line = bz.GUIFactory.createLine\n            (\n                50,\n                160,\n                300,\n                160,\n                1,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( line1 );\n\n            const textColorChoserVisor:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Color Visor',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                50,\n                170,\n                300,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( textColorChoserVisor );\n\n            for (let i:number = 0; i < GUIProductConfigurator.VISOR_COLORS.length; ++i )\n            {\n                const visorColor :BABYLON.Color3 = GUIProductConfigurator.VISOR_COLORS[ i ];\n                const colorCss   :string         = (\n                    'rgb( '\n                    + String( visorColor.r * 255 )\n                    + ', '\n                    + String( visorColor.g * 255 )\n                    + ', '\n                    + String( visorColor.b * 255 )\n                    + ' )'\n                );\n                const radioButton:bjsg.RadioButton = bz.GUIFactory.createRadioButton\n                (\n                    'visorColorSelect',\n                    bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                    GUIProductConfigurator.GUI_COLOR_BG,\n                    50,\n                    203 + ( i * 30 ),\n                    20,\n                    20,\n                    ( checked:boolean ) => {\n                        bz.Debug.pc3d.log(\n                            'RadioButton clicked ['\n                            + String( i )\n                            + ']['\n                            + String( checked )\n                            + ']'\n                        );\n                        if ( checked )\n                        {\n                            this.onCheckVisorColorRadioButton( i );\n                        }\n                        else\n                        {\n                            bz.GUIFactory.checkRadioButtonIfAllAreUnchecked( this.visorColorRadioButtons, i );\n                        }\n                    }\n                );\n                this.visorColorRadioButtons.push( radioButton );\n                this.guiFg.addControl( radioButton );\n\n                const colorCaption:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n                (\n                    GUIProductConfigurator.VISOR_COLOR_NAMES[ i ],\n                    bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                    colorCss,\n                    GUIProductConfigurator.VISOR_COLOR_SHADOWS[ i ],\n                    80,\n                    203 + ( i * 30 ),\n                    300,\n                    20,\n                    bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                    bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                    () => {\n                        bz.Debug.pc3d.log( 'text clicked! [' + String( i ) + ' ]' );\n                        radioButton.isChecked = true;\n                    }\n                );\n                this.guiFg.addControl( colorCaption );\n            }\n            this.visorColorRadioButtons[ 0 ].isChecked = true;\n\n            const line2:bjsg.Line = bz.GUIFactory.createLine\n            (\n                50,\n                330,\n                300,\n                330,\n                1,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( line2 );\n\n            const textColorChoserHelmet:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Color Helmet',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                50,\n                340,\n                300,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( textColorChoserHelmet );\n\n            for (let i:number = 0; i < GUIProductConfigurator.HELMET_COLORS.length; ++i )\n            {\n                const helmetColor :BABYLON.Color3 = GUIProductConfigurator.HELMET_COLORS[ i ];\n                const colorCss   :string         = (\n                    'rgb( '\n                    + String( helmetColor.r * 255 )\n                    + ', '\n                    + String( helmetColor.g * 255 )\n                    + ', '\n                    + String( helmetColor.b * 255 )\n                    + ' )'\n                );\n                const radioButton:bjsg.RadioButton = bz.GUIFactory.createRadioButton\n                (\n                    'helmetColorSelect',\n                    bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                    GUIProductConfigurator.GUI_COLOR_BG,\n                    50,\n                    373 + ( i * 30 ),\n                    20,\n                    20,\n                    ( checked:boolean ) => {\n                        bz.Debug.pc3d.log(\n                            'RadioButton clicked [' + String( i ) + '][' + String( checked ) + ']'\n                        );\n                        if ( checked )\n                        {\n                            this.onCheckHelmetColorRadioButton( i );\n                        }\n                        else\n                        {\n                            bz.GUIFactory.checkRadioButtonIfAllAreUnchecked( this.helmetColorRadioButtons, i );\n                        }\n                    }\n                );\n                this.helmetColorRadioButtons.push( radioButton );\n                this.guiFg.addControl( radioButton );\n\n                const colorCaption:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n                (\n                    GUIProductConfigurator.HELMET_COLOR_NAMES[ i ],\n                    bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                    colorCss,\n                    GUIProductConfigurator.HELMET_COLOR_SHADOWS[ i ],\n                    80,\n                    373 + ( i * 30 ),\n                    300,\n                    20,\n                    bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                    bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                    () => {\n                        bz.Debug.pc3d.log( 'text clicked! [' + String( i ) + ' ]' );\n                        radioButton.isChecked = true;\n                    }\n                );\n                this.guiFg.addControl( colorCaption );\n            }\n            this.helmetColorRadioButtons[ 0 ].isChecked = true;\n\n            const line3:bjsg.Line = bz.GUIFactory.createLine\n            (\n                50,\n                500,\n                300,\n                500,\n                1,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( line3 );\n\n            const textCameraZoom:bjsg.TextBlock = bz.GUIFactory.createTextBlock\n            (\n                'Zoom',\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                GUIProductConfigurator.GUI_COLOR_TEXT,\n                GUIProductConfigurator.GUI_COLOR_SHADOW,\n                50,\n                510,\n                250,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n            this.guiFg.addControl( textCameraZoom );\n\n            this.cameraZoomSlider = bz.GUIFactory.createSlider\n            (\n                175.0,\n                175.0,\n                400.0,\n                bz.SettingColor.COLOR_CSS_MAYFLOWER_ORANGE_OPAQUE,\n                '#707070',\n                '#707070',\n                50,\n                545,\n                250,\n                20,\n                ( value:number ) =>\n                {\n                    // bz.Debug.gui.log( 'slider changed to [' + value + ']' );\n\n                    // this.getCameraSystem().arcRotateCamera.radius = ( 400.0 + 100.0 - Math.floor( value ) );\n                    this.parent.getCameraSystem().getArcRotateCamera().radius = ( 400.0 + 100.0 - value );\n                }\n            );\n            this.guiFg.addControl( this.cameraZoomSlider );\n\n            const line4:bjsg.Line = bz.GUIFactory.createLine\n            (\n                50,\n                580,\n                300,\n                580,\n                1,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT\n            );\n            this.guiFg.addControl( line4 );\n\n            this.visorToggleButton = bz.GUIFactory.createButton\n            (\n                'Open Visor',\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_MAYFLOWER_ORANGE_OPAQUE,\n                50,\n                600,\n                250,\n                35,\n                () => {\n                    this.parent.requestVisorAnimationToggle();\n                }\n            );\n            this.guiFg.addControl( this.visorToggleButton );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the GUI information for the current game tick.\n        *\n        *   @param pause Specifies if the pause state is currently active.\n        ***************************************************************************************************************/\n        public render( pause:boolean ) : void\n        {\n            super.render( pause );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when a visor color checkbox is clicked.\n        *\n        *   @param checkboxId The ID of the visir color checkbox being clicked.\n        ***************************************************************************************************************/\n        private onCheckVisorColorRadioButton( checkboxId:number ) : void\n        {\n            bz.Debug.pc3d.log( 'Clicked Visor color change radiobutton [' + String( checkboxId ) + ']' );\n\n            // change visor color\n            this.parent.requestVisorColorChange( GUIProductConfigurator.VISOR_COLORS[ checkboxId ] );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when a helmet color checkbox is clicked.\n        *\n        *   @param checkboxId The ID of the helmet color checkbox being clicked.\n        ***************************************************************************************************************/\n        private onCheckHelmetColorRadioButton( checkboxId:number ) : void\n        {\n            bz.Debug.pc3d.log( 'Clicked Helmet color change radiobutton [' + String( checkboxId ) + ']' );\n\n            // change helmet color\n            this.parent.requestHelmetColorChange( GUIProductConfigurator.HELMET_COLORS[ checkboxId ] );\n        }\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   Represents one GUI fx that's displayed in fullscreen and slowly disappearing.\n    *******************************************************************************************************************/\n    export class GUIFx\n    {\n        /** The number of ticks this fx is still visible. */\n        private                             lifetimeTicks               :number                             = 0;\n\n        /** The fullscreen rect that represents this fx. */\n        private             readonly        fxRect                      :bjsg.Rectangle                     = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new GUI effect.\n        *\n        *   @param gui  The gui to append this effect to.\n        *   @param type The type of effect to display.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            gui  :bjsg.AdvancedDynamicTexture,\n            type :bz.GUIFxType\n        )\n        {\n            this.lifetimeTicks = bz.SettingGUI.GUI_FX_LIFETIME;\n\n            let color:string = null;\n            switch ( type )\n            {\n                case bz.GUIFxType.HURT:\n                {\n                    color = bz.SettingColor.COLOR_CSS_RED_OPAQUE;\n                    break;\n                }\n\n                case bz.GUIFxType.GAIN_ENERGY:\n                {\n                    color = bz.SettingColor.COLOR_CSS_WHITE_OPAQUE;\n                    break;\n                }\n            }\n\n            this.fxRect = bz.GUIFactory.createRectangle\n            (\n                0,\n                0,\n                0,\n                0,\n                bz.SettingColor.COLOR_CSS_TRANSPARENT,\n                color\n            );\n            this.fxRect.width  = '100%';\n            this.fxRect.height = '100%';\n\n            gui.addControl( this.fxRect );\n        }\n\n        /** ************************************************************************************************************\n        *   Renders this GUI message for one game tick.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // decrease number of lifetime ticks\n            --this.lifetimeTicks;\n\n            // assign opacity according to lifetime ticks\n            this.fxRect.alpha = (\n                bz.SettingGUI.GUI_FX_INITIAL_ALPHA * this.lifetimeTicks / bz.SettingGUI.GUI_FX_LIFETIME\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the lifetime is over for this GUI message.\n        *\n        *   @return If this GUI message's lifetime is over.\n        ***************************************************************************************************************/\n        public isLifetimeOver() : boolean\n        {\n            return ( this.lifetimeTicks <= 0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes this GUI message's text block.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.fxRect.dispose();\n        }\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui'\n\n    /** ****************************************************************************************************************\n    *   Manages all GUI FX shown in the GUI.\n    *******************************************************************************************************************/\n    export class GUIFxManager\n    {\n        /** All GUI effects currently displayed. */\n        private             readonly        fxQueue             :bz.GUIFx[]                         = [];\n\n        /** ************************************************************************************************************\n        *   Renders this GUI message manager for one game tick.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            this.updateMessageQueue();\n        }\n\n        /** ************************************************************************************************************\n        *   Adds an effect to the fx queue.\n        *\n        *   @param gui  The gui to add the text message to.\n        *   @param type The message to add to the message queue.\n        ***************************************************************************************************************/\n        public addGuiFx( gui:bjsg.AdvancedDynamicTexture, type:bz.GUIFxType ) : void\n        {\n            this.fxQueue.push\n            (\n                new bz.GUIFx\n                (\n                    gui,\n                    type\n                )\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the displayed GUI messages.\n        *   Outdated messages are disposed, causing all remaining messages to relocate.\n        ***************************************************************************************************************/\n        private updateMessageQueue() : void\n        {\n            // render GUI effects\n            for ( const effect of this.fxQueue )\n            {\n                effect.render();\n            }\n\n            // dispose obsolete GUI effects\n            for ( let index:number = this.fxQueue.length - 1; index >= 0; --index )\n            {\n                if ( this.fxQueue[ index ].isLifetimeOver() )\n                {\n                    this.fxQueue[ index ].dispose();\n                    this.fxQueue.splice( index, 1 );\n                }\n            }\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Contains all types of GUI effects.\n    *******************************************************************************************************************/\n    export enum GUIFxType\n    {\n        /** The effect when the user loses energy. */\n        HURT,\n\n        /** The effect when the user gains energy. */\n        GAIN_ENERGY,\n    }\n","\n    /** ****************************************************************************************************************\n    *   Represents one GUI action being launched on performing a menu item.\n    *******************************************************************************************************************/\n    export enum GUIAction\n    {\n        /** Resume to the game screen. */\n        RESUME_GAME,\n\n        /** Switch to level 1. */\n        SWITCH_TO_STAGE_1,\n        /** Switch to level 2. */\n        SWITCH_TO_STAGE_2,\n        /** Switch to level 3. */\n        SWITCH_TO_STAGE_3,\n        /** Switch to level 4. */\n        SWITCH_TO_STAGE_4,\n        /** Switch to level 5. */\n        SWITCH_TO_STAGE_5,\n        /** Switch to level 6. */\n        SWITCH_TO_STAGE_6,\n        /** Switch to level 7. */\n        SWITCH_TO_STAGE_7,\n        /** Switch to level 8. */\n        SWITCH_TO_STAGE_8,\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Represents a menu shown in the GUI.\n    *******************************************************************************************************************/\n    export class GUIMenu\n    {\n        /** The menu items texts. */\n        private             readonly        menuItems                   :bz.GUIMenuItem[]               = [];\n        /** Specifies if selection wrapping is enabled by selecting items out of bounds. */\n        private             readonly        wrapSelection               :boolean                        = false;\n\n        /** The index of the current selected item of the pause menu. */\n        private                             currentSelectedItem         :number                         = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a new GUI menu.\n        *\n        *   @param guiFg         The GUI to append the menu item text blocks to.\n        *   @param menuItems     The menu items to create for the menu.\n        *   @param y             The position Y for this GUI menu.\n        *   @param wrapSelection Allows selection wrapping on selecting items out of bounds.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            guiFg         :bjsg.AdvancedDynamicTexture,\n            menuItems     :bz.GUIMenuItem[],\n            y             :number,\n            wrapSelection :boolean\n        )\n        {\n            this.menuItems           = menuItems;\n            this.wrapSelection       = wrapSelection;\n\n            // create all menu item text blocks\n            for ( let index:number = 0; index < this.menuItems.length; ++index )\n            {\n                // add menu item text blocks\n                this.menuItems[ index ].createTextBlock( guiFg, y + index * 35  );\n            }\n            this.updateMenuItems();\n        }\n\n        /** ************************************************************************************************************\n        *   Shows or hides the pause GUI.\n        *\n        *   @param visible The visibility to set for the pause GUI.\n        ***************************************************************************************************************/\n        public setVisibility( visible:boolean ) : void\n        {\n            for ( const menuItem of this.menuItems )\n            {\n                menuItem.setVisibility( visible );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Selects the previous active menu item considering the top bound.\n        ***************************************************************************************************************/\n        public selectPreviousItem() : void\n        {\n            if ( this.currentSelectedItem > 0 )\n            {\n                --this.currentSelectedItem;\n                this.updateMenuItems();\n            }\n            else if ( this.wrapSelection )\n            {\n                this.currentSelectedItem = ( this.menuItems.length - 1 );\n                this.updateMenuItems();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Selects the next active menu item considering the bottom bound.\n        ***************************************************************************************************************/\n        public selectNextItem() : void\n        {\n            if ( this.currentSelectedItem < ( this.menuItems.length - 1 ) )\n            {\n                ++this.currentSelectedItem;\n                this.updateMenuItems();\n            }\n            else if ( this.wrapSelection )\n            {\n                this.currentSelectedItem = 0;\n                this.updateMenuItems();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Performs the action for the current selected menu item.\n        ***************************************************************************************************************/\n        public performMenuItem() : void\n        {\n            this.menuItems[ this.currentSelectedItem ].perform();\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the current selected index of the pause menu.\n        *\n        *   @return The current active pause menu index.\n        ***************************************************************************************************************/\n        public getPauseMenuIndex() : number\n        {\n            return this.currentSelectedItem;\n        }\n\n        /** ************************************************************************************************************\n        *   Directly sets the active index for the pause menu.\n        *\n        *   @param index The index of the pause menu item to set.\n        ***************************************************************************************************************/\n        public setPauseMenuIndex( index:number ) : void\n        {\n            this.currentSelectedItem = index;\n            this.updateMenuItems();\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the selected and unselected states of all menu items.\n        ***************************************************************************************************************/\n        private updateMenuItems() : void\n        {\n            // browse all menu items\n            for ( let index:number = 0; index < this.menuItems.length; ++index )\n            {\n                if ( index === this.currentSelectedItem )\n                {\n                    this.menuItems[ index ].select();\n                }\n                else\n                {\n                    this.menuItems[ index ].unselect();\n                }\n            }\n        }\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Represents one menu item shown in the GUI menu.\n    *******************************************************************************************************************/\n    export class GUIMenuItem\n    {\n        /** The label of this menu item. */\n        private             readonly        label                       :string                         = null;\n        /** The action to execute on performing this menu item. */\n        private             readonly        action                      :bz.GUIAction                   = null;\n\n        /** The text block that represents this menu item in the GUI. */\n        private                             textBlock                   :bjsg.TextBlock          = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new menu item.\n        *\n        *   @param label  The caption for this menu item to display.\n        *   @param action The GUI action to perform on executing this menu item.\n        ***************************************************************************************************************/\n        public constructor( label:string, action:bz.GUIAction )\n        {\n            this.label  = label;\n            this.action = action;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a text block for this menu item.\n        *\n        *   @param guiFg The GUI to append this menu item text block to.\n        *   @param y     The position Y for this menu item's text block.\n        ***************************************************************************************************************/\n        public createTextBlock( guiFg:bjsg.AdvancedDynamicTexture, y:number ) : void\n        {\n            this.textBlock = bz.GUIFactory.createTextBlock\n            (\n                this.label,\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n                0,\n                y,\n                500,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_CENTER,\n                bjsg.Control.VERTICAL_ALIGNMENT_TOP,\n                null\n            );\n\n            guiFg.addControl( this.textBlock );\n        }\n\n        /** ************************************************************************************************************\n        *   Shows or hides the pause GUI.\n        *\n        *   @param visible The visibility to set for the pause GUI.\n        ***************************************************************************************************************/\n        public setVisibility( visible:boolean ) : void\n        {\n            this.textBlock.isVisible = visible;\n        }\n\n        /** ************************************************************************************************************\n        *   Selects this menu item and highlights the text block.\n        ***************************************************************************************************************/\n        public select() : void\n        {\n            this.textBlock.color = bz.SettingColor.COLOR_CSS_MAYFLOWER_ORANGE_OPAQUE;\n        }\n\n        /** ************************************************************************************************************\n        *   Unselectes this menu item and blurs the text block.\n        ***************************************************************************************************************/\n        public unselect() : void\n        {\n            this.textBlock.color = bz.SettingColor.COLOR_CSS_WHITE_OPAQUE;\n        }\n\n        /** ************************************************************************************************************\n        *   Performs this menu item's associated action.\n        ***************************************************************************************************************/\n        public perform() : void\n        {\n            const game:bz.Game = bz.Main.game;\n\n            switch ( this.action )\n            {\n                case bz.GUIAction.RESUME_GAME:\n                {\n                    game.togglePause();\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_1:\n                {\n                    game.switchStage( bz.StageId.TEST_OFFICE );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_2:\n                {\n                    game.switchStage( bz.StageId.TEST_LEVEL );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_3:\n                {\n                    game.switchStage( bz.StageId.ROOM_VIEWER );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_4:\n                {\n                    game.switchStage( bz.StageId.PRODUCT_CONFIGURATOR );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_5:\n                {\n                    game.switchStage( bz.StageId.INTRO_LOGO );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_6:\n                {\n                    game.switchStage( bz.StageId.HUMAN_BODY_PARTITIONS );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_7:\n                {\n                    game.switchStage( bz.StageId.TEST_SITE );\n                    break;\n                }\n\n                case bz.GUIAction.SWITCH_TO_STAGE_8:\n                {\n                    game.switchStage( bz.StageId.SPACESHIP );\n                    break;\n                }\n            }\n        }\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Represents one GUI message that's displayed in the GUI message queue and disappearing after some time.\n    *******************************************************************************************************************/\n    export class GUIMessage\n    {\n        /** The number of ticks this message is still visible. */\n        private                             lifetimeTicks               :number                             = 0;\n\n        /** The text block that contains this single message. */\n        private             readonly        messageText                 :bjsg.TextBlock                     = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new message text.\n        *\n        *   @param gui The gui to append this message text block to.\n        *   @param msg The message to display in this text block.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            gui :bjsg.AdvancedDynamicTexture,\n            msg :string\n        )\n        {\n            this.lifetimeTicks = bz.SettingGUI.GUI_MESSAGE_LIFETIME;\n\n            this.messageText = bz.GUIFactory.createTextBlock\n            (\n                msg,\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT,\n                bz.SettingColor.COLOR_CSS_WHITE_OPAQUE,\n                bz.SettingColor.COLOR_CSS_BLACK_OPAQUE,\n                bz.SettingGUI.GUI_BORDER_X,\n                0,\n                500,\n                25,\n                bjsg.Control.HORIZONTAL_ALIGNMENT_LEFT,\n                bjsg.Control.VERTICAL_ALIGNMENT_BOTTOM,\n                null\n            );\n\n            gui.addControl( this.messageText );\n        }\n\n        /** ************************************************************************************************************\n        *   Renders this GUI message for one game tick.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // decrease number of lifetime ticks\n            --this.lifetimeTicks;\n\n            // assign opacity according to lifetime ticks\n            if ( this.lifetimeTicks < bz.SettingGUI.GUI_MESSAGE_FADE_OUT_TICKS )\n            {\n                this.messageText.alpha = ( this.lifetimeTicks / bz.SettingGUI.GUI_MESSAGE_FADE_OUT_TICKS );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the lifetime is over for this GUI message.\n        *\n        *   @return If this GUI message's lifetime is over.\n        ***************************************************************************************************************/\n        public isLifetimeOver() : boolean\n        {\n            return ( this.lifetimeTicks <= 0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes this GUI message's text block.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.messageText.dispose();\n        }\n\n        /** ************************************************************************************************************\n        *   Assigns this GUI message's location Y according to its index and the total number of GUI messages.\n        *\n        *   @param index The index of this GUI message.\n        *   @param total The total nuber of GUI messages.\n        ***************************************************************************************************************/\n        public setPositionY( index:number, total:number ) : void\n        {\n            const MESSAGE_LINE_HEIGHT:number =\n            (\n                bz.SettingGUI.GUI_FONT_SIZE_DEFAULT + bz.SettingGUI.GUI_MESSAGE_LINES_DISTANCE_Y\n            );\n\n            this.messageText.top =\n            (\n                -bz.SettingGUI.GUI_BORDER_Y\n                - ( ( total - 1 ) * MESSAGE_LINE_HEIGHT )\n                + ( index         * MESSAGE_LINE_HEIGHT )\n            );\n        }\n    }\n","\n    import * as bz   from '../../../../..';\n    import * as bjsg from 'babylonjs-gui';\n\n    /** ****************************************************************************************************************\n    *   Manages all GUI messages shown in the GUI.\n    *******************************************************************************************************************/\n    export class GUIMessageManager\n    {\n        /** All GUI messages currently displayed. */\n        private             readonly        messageQueue            :bz.GUIMessage[]                        = [];\n\n        /** ************************************************************************************************************\n        *   Renders this GUI message manager for one game tick.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            this.updateMessageQueue();\n        }\n\n        /** ************************************************************************************************************\n        *   Adds a message to the message queue.\n        *\n        *   @param gui The gui to add the text message to.\n        *   @param msg The message to add to the message queue.\n        ***************************************************************************************************************/\n        public addGuiMessage( gui:bjsg.AdvancedDynamicTexture, msg:string ) : void\n        {\n            this.messageQueue.push\n            (\n                new bz.GUIMessage\n                (\n                    gui,\n                    msg\n                )\n            );\n\n            this.relocateAllMessages();\n        }\n\n        /** ************************************************************************************************************\n        *   Updates the displayed GUI messages.\n        *   Outdated messages are disposed, causing all remaining messages to relocate.\n        ***************************************************************************************************************/\n        private updateMessageQueue() : void\n        {\n            // render GUI messages\n            for ( const message of this.messageQueue )\n            {\n                message.render();\n            }\n\n            // dispose obsolete GUI messages\n            let relocationRequired:boolean = false;\n            for ( let index:number = this.messageQueue.length - 1; index >= 0; --index )\n            {\n                if ( this.messageQueue[ index ].isLifetimeOver() )\n                {\n                    this.messageQueue[ index ].dispose();\n                    this.messageQueue.splice( index, 1 );\n\n                    relocationRequired = true;\n                }\n            }\n\n            // relocate GUI messages if required\n            if ( relocationRequired )\n            {\n                this.relocateAllMessages();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Relocates all GUI messages concerning the Y location.\n        ***************************************************************************************************************/\n        private relocateAllMessages() : void\n        {\n            for ( let index:number = 0; index < this.messageQueue.length; ++index )\n            {\n                this.messageQueue[ index ].setPositionY( index, this.messageQueue.length );\n            }\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a character being controlled by the cpu.\n    *******************************************************************************************************************/\n    export class Bot extends bz.GameObject\n    {\n        /** ************************************************************************************************************\n        *   Creates a new bot instance.\n        *\n        *   @param stage The stage this bot belongs to.\n        *   @param model The model that represents this bot.\n        ***************************************************************************************************************/\n        public constructor( stage:bz.Stage, model:bz.Model )\n        {\n            super( stage, model, bz.GameObject.UNBREAKABLE );\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   The parent class of all game objects.\n    *******************************************************************************************************************/\n    export abstract class GameObject\n    {\n        /** An energy amount that represents that this game object is unbreakable. */\n        public      static  readonly        UNBREAKABLE                 :number                         = -1;\n\n        /** The stage this game object belongs to. */\n        protected           readonly        stage                       :bz.Stage                       = null;\n        /** All meshes this game object consists of. */\n        protected           readonly        model                       :bz.Model                       = null;\n        /** The initial energy of this game object. */\n        private             readonly        initialEnergy               :number                         = 0;\n\n        /** The current energy of this wall. */\n        private                             energy                      :number                         = 0;\n        /** Flags if this wall is broken. */\n        private                             destroyed                   :boolean                        = false;\n        /** The next z-index for the bullet hole to assign. */\n        private                             nextBulletHoleZIndex        :number                         = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a new game object.\n        *\n        *   @param stage  The stage this game object belongs to.\n        *   @param model  The model for this game object.\n        *   @param energy The initial energy of this game object.\n        ***************************************************************************************************************/\n        protected constructor( stage:bz.Stage, model:bz.Model, energy:number )\n        {\n            this.stage         = stage;\n            this.model         = model;\n            this.initialEnergy = energy;\n            this.energy        = energy;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the next z-index for the next bullet hole to append onto this mesh.\n        *   The internal index is increased by one in this step.\n        *\n        *   @return The z-index for the next bullet hole to append onto this mesh.\n        ***************************************************************************************************************/\n        public getNextBulletHoleIndexZ() : number\n        {\n            return this.nextBulletHoleZIndex++;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the model of this game object.\n        *\n        *   @return The physical representation of this game object.\n        ***************************************************************************************************************/\n        public getModel() : bz.Model\n        {\n            return this.model;\n        }\n\n        /** ************************************************************************************************************\n        *   Renders one tick of the game loop for this game object.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes the model of this game object.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            this.model.dispose();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets visibility for the model of this game object.\n        *\n        *   @param visible The new visibility for this game object.\n        ***************************************************************************************************************/\n        public setVisible( visible:boolean ) : void\n        {\n            this.model.setVisible( visible );\n        }\n\n        /** ************************************************************************************************************\n        *   Applies a shot onto this game object and returns all occurred hit points.\n        *\n        *   @param shot The shot to apply onto this wall.\n        *\n        *   @return All hit points being hit in this game object.\n        ***************************************************************************************************************/\n        public determineHitPoints( shot:bz.Shot ) : bz.HitPoint[]\n        {\n            const hitPoints    :bz.HitPoint[]         = [];\n            const pickingInfos :BABYLON.PickingInfo[] = this.getModel().applyRayCollision( shot.getRay() );\n\n            if ( pickingInfos.length > 0 )\n            {\n                bz.Debug.fire.log\n                (\n                    '  [' + String( pickingInfos.length ) + '] collision detected on game object.'\n                );\n\n                for ( const pickingInfo of pickingInfos )\n                {\n                    hitPoints.push\n                    (\n                        new bz.HitPoint\n                        (\n                            pickingInfo.pickedPoint,\n                            pickingInfo.pickedMesh,\n                            pickingInfo.getNormal( true ),\n                            pickingInfo.distance,\n                            shot.getRay().direction,\n                            this\n                        )\n                    );\n                }\n            }\n\n            return hitPoints;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when this game object is hurt by a shot or any other impact source.\n        *\n        *   @param scene  The native babylon.JS scene.\n        *   @param damage The damage to apply onto this game object.\n        *   @param mesh   The mesh that received the damage.\n        *                 May be <code>null</code> if the game object received global damage.\n        ***************************************************************************************************************/\n        public hurt( scene:BABYLON.Scene, damage:number, mesh:BABYLON.AbstractMesh ) : void\n        {\n            // exit if unbreakable\n            if ( this.energy === GameObject.UNBREAKABLE )\n            {\n                bz.Debug.fire.log( 'Object is unbreakable.' );\n                return;\n            }\n\n            // exit if already destroyed\n            if ( this.destroyed )\n            {\n                bz.Debug.fire.log( 'Object is already destroyed.' );\n                return;\n            }\n\n            // exit if no damage occurred\n            if ( damage === 0 )\n            {\n                bz.Debug.fire.log( 'No damage to apply onto this object.' );\n                return;\n            }\n\n            // lower energy\n            this.energy -= damage;\n            bz.Debug.fire.log\n            (\n                'Object got hurt with ['\n                + String( damage )\n                + '] damage - new energy is ['\n                + String( this.energy ) + ']'\n            );\n\n            // clip lowest energy value\n            if ( this.energy <= 0 )\n            {\n                this.energy = 0;\n            }\n\n            // try mesh face darkening\n            this.model.darkenMeshes( scene, ( damage / this.initialEnergy ) );\n\n            // shot off this mesh from the compound - if enabled by the model\n            this.model.shotOffCompound( scene, mesh );\n\n            // check if the object is destoyed now\n            if ( this.energy === 0 )\n            {\n                // flag as destroyed\n                this.destroyed = true;\n                bz.Debug.fire.log( 'Object is destroyed.' );\n\n                // scatter the model\n                this.model.removeCompoundMesh( scene );\n            }\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a pickable item.\n    *******************************************************************************************************************/\n    export class Item extends bz.GameObject\n    {\n        /** Flags that this item has been picked. */\n        private                 picked              :boolean                        = false;\n\n        /** Current rotation Y for this item. */\n        private                 rotY                :number                         = 0.0;\n\n        /** ************************************************************************************************************\n        *   Creates a new item.\n        *\n        *   @param stage The stage this item belongs to.\n        *   @param model The model that represents this item.\n        ***************************************************************************************************************/\n        public constructor( stage:bz.Stage, model:bz.Model )\n        {\n            super( stage, model, bz.GameObject.UNBREAKABLE );\n        }\n\n        /** ************************************************************************************************************\n        *   Renders all stage concernings for one tick of the game loop.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // invoke parent method\n            super.render();\n\n            // check if picked by player\n            if ( this.checkPick( this.stage.getPlayer().getModel() ) )\n            {\n                this.stage.addGuiFx( bz.GUIFxType.GAIN_ENERGY );\n            }\n\n            // testwise rotate this item\n            if ( !this.picked )\n            {\n                this.model.setAbsoluteRotationXYZ\n                (\n                    0.0,\n                    this.rotY,\n                    0.0\n                );\n                this.rotY += 0.5;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if this item is picked by colliding with the specified model.\n        *\n        *   @param modelToCheck The model to check for collision with this item.\n        *\n        *   @return <code>true</code> if this item was picked.\n        ***************************************************************************************************************/\n        private checkPick( modelToCheck:bz.Model ) : boolean\n        {\n            if ( !this.picked )\n            {\n                if ( this.model.intersects( modelToCheck ) )\n                {\n                    this.pick();\n\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /** ************************************************************************************************************\n        *   Flags this item picked and makes it invisible.\n        ***************************************************************************************************************/\n        private pick() : void\n        {\n            bz.Debug.item.log( 'Item picked' );\n\n            this.picked = true;\n\n            this.model.setVisible( false );\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a static OR movable wall object.\n    *******************************************************************************************************************/\n    export class Wall extends bz.GameObject\n    {\n        /** ************************************************************************************************************\n        *   Creates a new wall instance.\n        *\n        *   @param stage  The stage this wall belongs to.\n        *   @param model  The model that represents this wall.\n        *   @param energy The initial energy of this wall.\n        ***************************************************************************************************************/\n        public constructor( stage:bz.Stage, model:bz.Model, energy:number = Wall.UNBREAKABLE )\n        {\n            super( stage, model, energy );\n        }\n\n        /** ************************************************************************************************************\n        *   Renders one tick of the game loop for this game object.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // lower velocities for sphere impostered meshes\n            this.getModel().lowerSphereVelocities();\n        }\n    }\n","\n    import * as bz from '../../../index';\n\n    /** ****************************************************************************************************************\n    *   Represents the game entity being controlled by the user.\n    *******************************************************************************************************************/\n    export abstract class Player extends bz.GameObject\n    {\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the first person camera.\n        *\n        *   @return The player's mesh to set the first person camera into.\n        ***************************************************************************************************************/\n        public abstract getFirstPersonCameraTargetMesh() : BABYLON.AbstractMesh;\n\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the third person camera.\n        *\n        *   @return The player's mesh to set as a target for the third person camera.\n        ***************************************************************************************************************/\n        public abstract getThirdPersonCameraTargetMesh() : BABYLON.AbstractMesh;\n    }\n","\n    import * as bz from '../../../index';\n\n    /** ****************************************************************************************************************\n    *   Represents a human player being controlled by the user.\n    *******************************************************************************************************************/\n    export class PlayerHuman extends bz.Player\n    {\n        /** The id of the player's body mesh in the mesh array. */\n        private     static  readonly    PLAYER_BODY_ID              :number                             = 0;\n        /** The id of the player's head mesh in the mesh array. */\n        private     static  readonly    PLAYER_HEAD_ID              :number                             = 1;\n        /** The id of the player's left hand mesh in the mesh array. */\n        private     static  readonly    PLAYER_LEFT_HAND_ID         :number                             = 2;\n        /** The id of the player's left hand mesh in the mesh array. */\n        private     static  readonly    PLAYER_RIGHT_HAND_ID        :number                             = 3;\n\n        /** The current height of the player. Changes on ducking. */\n        private                         heightY                     :number                             = 0.0;\n        /** Flags if rotZ view centering should occur this tick. */\n        private                         centerRotZ                  :boolean                            = false;\n        /** The current angle for the sinus calculation of the head shaking. */\n        private                         headShakingAngle            :number                             = 0.0;\n\n        /** Flags if fire should be performed this tick. */\n        private                         fire                        :boolean                            = false;\n        /** Flags if the player currently wants to duck. */\n        private                         duck                        :boolean                            = false;\n\n        /** Flags if the player currently wants to zoom. */\n        private                         zoom                        :boolean                            = false;\n        /** The current field of view of the player. Changes on zooming. */\n        private                         fieldOfView                 :number                             = 0.0;\n\n        /** Current rotation. */\n        private                         rotation                    :BABYLON.Vector3                    = null;\n        /** Current rotation delta. */\n        private                         rotationDelta               :BABYLON.Vector3                    = null;\n        /** Current move delta. */\n        private                         moveDelta                   :BABYLON.Vector3                    = null;\n\n        /** The referenced body mesh. */\n        private             readonly    body                        :BABYLON.AbstractMesh               = null;\n        /** The referenced head mesh. */\n        private             readonly    head                        :BABYLON.AbstractMesh               = null;\n        /** The referenced left hand mesh. */\n        private             readonly    leftHand                    :BABYLON.AbstractMesh               = null;\n        /** The referenced right hand mesh. */\n        private             readonly    rightHand                   :BABYLON.AbstractMesh               = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new player instance.\n        *\n        *   @param stage         The stage this player belongs to.\n        *   @param scene         The scene reference.\n        *   @param position      The initial position.\n        *   @param rotY          The initial rotation Y.\n        *   @param emissiveColor The emissive color of all mesh faces.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            stage         :bz.Stage,\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            rotY          :number,\n            emissiveColor :BABYLON.Color3\n        )\n        {\n            super\n            (\n                stage,\n\n                new bz.Model\n                (\n                    [\n                        // Player.PLAYER_BODY_ID\n                        bz.MeshFactory.createImportedModel\n                        (\n                            scene,\n                            bz.ModelFile.CRATE,\n                            position.clone(),\n                            bz.Physic.PLAYER_HUMAN,\n                            bz.ModelCompoundType.NONE\n                        ).getMesh( 0 ),\n\n                        // Player.PLAYER_HEAD_ID\n                        bz.MeshFactory.createSphere\n                        (\n                            scene,\n                            position.clone().addInPlace( new BABYLON.Vector3( 0.0, 2.5, 0.0 ) ),\n                            bz.MeshPivotAnchor.CENTER_XYZ,\n                            bz.SettingPlayerHuman.DIAMETER_HEAD,\n                            BABYLON.Vector3.Zero(),\n                            bz.Texture.WALL_SKIN_ROSE,\n                            null,\n                            bz.Physic.NONE,\n                            1.0,\n                            emissiveColor\n                        ),\n\n                        // Player.PLAYER_LEFT_HAND_ID\n                        bz.MeshFactory.createBox\n                        (\n                            scene,\n                            position.clone().addInPlace( new BABYLON.Vector3( -1.25, 1.25, 0.0 ) ),\n                            bz.MeshPivotAnchor.CENTER_XYZ,\n                            new BABYLON.Vector3( 0.25, 0.25, 0.25 ),\n                            BABYLON.Vector3.Zero(),\n                            bz.Texture.WALL_SKIN_ROSE,\n                            null,\n                            bz.Physic.NONE,\n                            1.0,\n                            emissiveColor\n                        ),\n\n                        // Player.PLAYER_RIGHT_HAND_ID\n                        bz.MeshFactory.createBox\n                        (\n                            scene,\n                            position.clone().addInPlace( new BABYLON.Vector3( 1.25, 1.25, 0.0 ) ),\n                            bz.MeshPivotAnchor.CENTER_XYZ,\n                            new BABYLON.Vector3( 0.25, 0.25, 0.25 ),\n                            BABYLON.Vector3.Zero(),\n                            bz.Texture.WALL_SKIN_ROSE,\n                            null,\n                            bz.Physic.NONE,\n                            1.0,\n                            emissiveColor\n                        ),\n                    ]\n                ),\n\n/*\n                        // Player.PLAYER_HEAD_ID\n                        bz.MeshFactory.createSphere\n                        (\n                            scene,\n                            BABYLON.Vector3.Zero(),\n                            bz.MeshPivotAnchor.CENTER_XYZ,\n                            bz.SettingPlayerHuman.DIAMETER_HEAD,\n                            BABYLON.Vector3.Zero(),\n                            bz.Texture.WALL_SKIN_ROSE,\n                            null,\n                            bz.Physic.NONE,\n                            1.0,\n                            emissiveColor\n                        ),\n */\n                bz.GameObject.UNBREAKABLE\n            );\n\n            // assign initial rotation, rotation delta and move delta\n            this.rotation      = new BABYLON.Vector3( 0.0, rotY, 0.0 );\n            this.rotationDelta = BABYLON.Vector3.Zero();\n            this.moveDelta     = BABYLON.Vector3.Zero();\n\n            // reference the body and all limbs\n            this.body      = this.model.getMesh( PlayerHuman.PLAYER_BODY_ID       );\n            this.head      = this.model.getMesh( PlayerHuman.PLAYER_HEAD_ID       );\n            this.leftHand  = this.model.getMesh( PlayerHuman.PLAYER_LEFT_HAND_ID  );\n            this.rightHand = this.model.getMesh( PlayerHuman.PLAYER_RIGHT_HAND_ID );\n\n            // stick all limbs to body\n            this.head.setParent(      this.body );\n            this.leftHand.setParent(  this.body );\n            this.rightHand.setParent( this.body );\n\n            // set initial height\n            this.heightY     = bz.SettingPlayerHuman.HEIGHT_Y_STANDING;\n            this.fieldOfView = bz.SettingEngine.DEFAULT_FIELD_OF_VIEW;\n\n            // apply initial rotation\n            this.rotatePlayerXYZ();\n\n            // apply positions for all limbs\n            this.positionPlayerLimbs();\n/*\n            // set a collision event handler for the body\n            if ( false )\n            {\n                this.body.physicsImpostor.onCollideEvent = (\n                    collider     :BABYLON.PhysicsImpostor,\n                    collidedWith :BABYLON.PhysicsImpostor\n                ) : void => {\n                    console.log( ' Colliding!' );\n                };\n            }\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Renders one tick of the player's game loop.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // handle keys\n            this.handleKeys();\n\n            // alter position\n            this.movePlayer();\n            this.manipulateVelocities();\n\n            // alter view\n            this.rotatePlayerXYZ();\n            this.checkCenteringRotZ();\n            this.checkFieldOfViewChange();\n\n            // alter height\n            this.checkHeightChange();\n\n            // interact\n            this.checkFire();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the first person camera.\n        *\n        *   @return The player's head mesh.\n        *           This is the right mesh to set the first person camera into.\n        ***************************************************************************************************************/\n        public getFirstPersonCameraTargetMesh() : BABYLON.AbstractMesh\n        {\n            return this.head;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the third person camera.\n        *\n        *   @return The player's body mesh.\n        *           This is the right mesh to set as a target for the third person camera.\n        ***************************************************************************************************************/\n        public getThirdPersonCameraTargetMesh() : BABYLON.AbstractMesh\n        {\n            return this.body;\n        }\n\n        /** ************************************************************************************************************\n        *   Handles all keys for the player.\n        ***************************************************************************************************************/\n        private handleKeys() : void\n        {\n            const keySystem:bz.KeySystem = bz.Main.game.getKeySystem();\n\n            // move forewards and backwards\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_W  )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_UP )\n            )\n            {\n                let speedForward:number = 0;\n\n                // probably run\n                if ( keySystem.isPressed( bz.KeyCodes.KEY_SHIFT_LEFT  ) )\n                {\n                    speedForward = bz.SettingPlayerHuman.RUN_IMPULSE;\n                }\n                else\n                {\n                    speedForward = bz.SettingPlayerHuman.MOVE_IMPULSE;\n                }\n\n                this.moveDelta.x += speedForward * bz.MathUtil.sinDegrees( this.rotation.y );\n                this.moveDelta.z += speedForward * bz.MathUtil.cosDegrees( this.rotation.y );\n\n                // shake head if enabled\n                if ( bz.SettingPlayerHuman.HEAD_SHAKING_ENABLED )\n                {\n                    this.alterHeadShakeAngle( speedForward );\n                }\n            }\n            if\n            (\n                    keySystem.isPressed( bz.KeyCodes.KEY_S )\n                // ||  keySystem.isPressed( bz.KeyCodes.KEY_DOWN )\n            )\n            {\n                this.moveDelta.x -= bz.SettingPlayerHuman.MOVE_IMPULSE * bz.MathUtil.sinDegrees( this.rotation.y );\n                this.moveDelta.z -= bz.SettingPlayerHuman.MOVE_IMPULSE * bz.MathUtil.cosDegrees( this.rotation.y );\n\n                // shake head if enabled\n                if ( bz.SettingPlayerHuman.HEAD_SHAKING_ENABLED )\n                {\n                    this.alterHeadShakeAngle( -bz.SettingPlayerHuman.MOVE_IMPULSE );\n                }\n            }\n\n            // strave\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_A    )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_LEFT )\n            )\n            {\n                this.moveDelta.x -= bz.SettingPlayerHuman.SPEED_STRAVE * bz.MathUtil.cosDegrees( this.rotation.y );\n                this.moveDelta.z += bz.SettingPlayerHuman.SPEED_STRAVE * bz.MathUtil.sinDegrees( this.rotation.y );\n            }\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_D     )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_RIGHT )\n            )\n            {\n                this.moveDelta.x += bz.SettingPlayerHuman.SPEED_STRAVE * bz.MathUtil.cosDegrees( this.rotation.y );\n                this.moveDelta.z -= bz.SettingPlayerHuman.SPEED_STRAVE * bz.MathUtil.sinDegrees( this.rotation.y );\n            }\n\n            // turn Y\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_Q ) )\n            {\n                this.rotationDelta.y = -bz.SettingPlayerHuman.SPEED_TURN;\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_E ) )\n            {\n                this.rotationDelta.y = bz.SettingPlayerHuman.SPEED_TURN;\n            }\n\n            // look up / down\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_R ) )\n            {\n                this.rotationDelta.z = -bz.SettingPlayerHuman.SPEED_LOOK_UP_DOWN;\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_F ) )\n            {\n                this.rotationDelta.z = bz.SettingPlayerHuman.SPEED_LOOK_UP_DOWN;\n            }\n\n            // fire\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_CTRL_LEFT ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_CTRL_LEFT );\n\n                this.fire = true;\n            }\n\n            // duck\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_Y ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_Y );\n\n                this.toggleDuck();\n            }\n\n            // jump\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_SPACE ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_SPACE );\n\n                this.assignJump();\n            }\n\n            // zoom\n            this.zoom = keySystem.isPressed( bz.KeyCodes.KEY_X );\n        }\n\n        /** ************************************************************************************************************\n        *   Moves all player's meshes by the current move deltas.\n        ***************************************************************************************************************/\n        private movePlayer() : void\n        {\n            // check if moving occurred\n            if\n            (\n                this.moveDelta.x !== 0.0\n                || this.moveDelta.y !== 0.0\n                || this.moveDelta.z !== 0.0\n            )\n            {\n/*\n                // apply direct move delta\n                this.body.moveWithCollisions\n                (\n                    new BABYLON.Vector3\n                    (\n                        this.moveDelta.x,\n                        this.moveDelta.y,\n                        this.moveDelta.z\n                    )\n                );\n*/\n\n                // this.body.moveWithCollisions( this.moveDelta );\n\n                // apply physical impulse\n                if ( this.body.physicsImpostor != null )\n                {\n                    // this.body.physicsImpostor.setDeltaPosition ??\n\n                    this.body.physicsImpostor.applyImpulse // applyForce ?\n                    (\n                        new BABYLON.Vector3\n                        (\n                            this.moveDelta.x,\n                            this.moveDelta.y,\n                            this.moveDelta.z\n                        ),\n                        this.body.position\n                    );\n                }\n\n                // force rotZ centering on horizontal movements\n                if ( this.moveDelta.x !== 0.0 || this.moveDelta.z !== 0.0 )\n                {\n                    this.centerRotZ = true;\n                }\n\n                // reset move deltas\n                this.moveDelta = BABYLON.Vector3.Zero();\n            }\n            else\n            {\n                this.centerRotZ = false;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Overrides the player's linear and angular velocities for improved player controls and user experience.\n        ***************************************************************************************************************/\n        private manipulateVelocities() : void\n        {\n            if ( this.body.physicsImpostor != null )\n            {\n                // suppress linear velocities except Y\n                const velocity:BABYLON.Vector3 = this.body.physicsImpostor.getLinearVelocity();\n                this.body.physicsImpostor.setLinearVelocity\n                (\n                    new BABYLON.Vector3\n                    (\n                        ( velocity.x * bz.SettingPlayerHuman.MOVE_VELOCITY_MULTIPLIER ),\n\n                        // check player falling\n                        (\n                            this.isFalling()\n\n                            // scale up falling velocity\n                            ? ( velocity.y * bz.SettingPlayerHuman.FALLING_VELOCITY_MULTIPLIER )\n\n                            // keep velocity\n                            : velocity.y\n                        ),\n\n                        ( velocity.z * bz.SettingPlayerHuman.MOVE_VELOCITY_MULTIPLIER )\n                    )\n                );\n\n                // completely suppress angular velocities\n                this.body.physicsImpostor.setAngularVelocity\n                (\n                    BABYLON.Vector3.Zero()\n                );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Applies the current rotations for all axis to the according player body parts.\n        ***************************************************************************************************************/\n        private rotatePlayerXYZ() : void\n        {\n            if ( this.rotationDelta.y !== 0.0 )\n            {\n                this.rotation.y = bz.MathUtil.normalizeAngleDegrees( this.rotation.y + this.rotationDelta.y );\n                this.rotationDelta.y = 0.0;\n            }\n\n            if ( this.rotationDelta.z !== 0.0 )\n            {\n                this.rotation.z += this.rotationDelta.z;\n\n                if ( this.rotation.z > bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN )\n                {\n                    this.rotation.z = bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN;\n                }\n                else if ( this.rotation.z < -bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN )\n                {\n                    this.rotation.z = -bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN;\n                }\n\n                this.rotationDelta.z = 0.0;\n            }\n\n            // rotate body\n            bz.MeshManipulation.setAbsoluteRotationXYZ\n            (\n                this.body,\n                0.0, // this.rotation.z,\n                this.rotation.y,\n                0.0\n            );\n\n            // rotate head\n            bz.MeshManipulation.setAbsoluteRotationXYZ\n            (\n                this.head,\n                this.rotation.z,\n                0.0,\n                0.0\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Toggles player ducking.\n        ***************************************************************************************************************/\n        private toggleDuck() : void\n        {\n            this.duck = !this.duck;\n\n            bz.Debug.player.log( 'Player ducking: [' + String( this.duck ) + ']' );\n        }\n\n        /** ************************************************************************************************************\n        *   Assigns player jumping.\n        ***************************************************************************************************************/\n        private assignJump() : void\n        {\n/*\n            if ( this.jumpTicks > 0 )\n            {\n                bz.Debug.player.log( 'Player jumping denied cause already jumping' );\n                return;\n            }\n*/\n            // deny jumping if currently falling\n            if ( this.isFalling() )\n            {\n                bz.Debug.player.log( 'Player jumping denied caused by falling' );\n                return;\n            }\n\n            bz.Debug.player.log( 'Player jumps' );\n            this.moveDelta.y = bz.SettingPlayerHuman.JUMP_ASCEND_IMPULSE_Y;\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if a height change is required and possibly changes it.\n        ***************************************************************************************************************/\n        private checkHeightChange() : void\n        {\n            if ( this.duck )\n            {\n                if ( this.heightY > bz.SettingPlayerHuman.HEIGHT_Y_DUCKED )\n                {\n                    this.heightY -= bz.SettingPlayerHuman.SPEED_DUCKING;\n\n                    if ( this.heightY < bz.SettingPlayerHuman.HEIGHT_Y_DUCKED )\n                    {\n                        this.heightY = bz.SettingPlayerHuman.HEIGHT_Y_DUCKED;\n                    }\n\n                    this.positionPlayerLimbs();\n                }\n            }\n            else\n            {\n                if ( this.heightY < bz.SettingPlayerHuman.HEIGHT_Y_STANDING )\n                {\n                    this.heightY += bz.SettingPlayerHuman.SPEED_STANDING_UP;\n\n                    if ( this.heightY > bz.SettingPlayerHuman.HEIGHT_Y_STANDING )\n                    {\n                        this.heightY = bz.SettingPlayerHuman.HEIGHT_Y_STANDING;\n                    }\n\n                    this.positionPlayerLimbs();\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player's field of view changes.\n        ***************************************************************************************************************/\n        private checkFieldOfViewChange() : void\n        {\n            const CURRENT_WEARPON_MAX_ZOOM   :number = 0.5;\n            const CURRENT_WEARPON_ZOOM_SPEED :number = 0.05;\n\n            const cameraSystem:bz.CameraSystem = this.stage.getCameraSystem();\n\n            if ( this.zoom )\n            {\n                if ( this.fieldOfView > CURRENT_WEARPON_MAX_ZOOM )\n                {\n                    this.fieldOfView -= CURRENT_WEARPON_ZOOM_SPEED;\n\n                    if ( this.fieldOfView < CURRENT_WEARPON_MAX_ZOOM )\n                    {\n                        this.fieldOfView = CURRENT_WEARPON_MAX_ZOOM;\n                    }\n\n                    cameraSystem.setFirstPersonCameraFieldOfView( this.fieldOfView );\n                }\n            }\n            else\n            {\n                if ( this.fieldOfView < bz.SettingEngine.DEFAULT_FIELD_OF_VIEW )\n                {\n                    this.fieldOfView += CURRENT_WEARPON_ZOOM_SPEED;\n\n                    if ( this.fieldOfView > bz.SettingEngine.DEFAULT_FIELD_OF_VIEW )\n                    {\n                        this.fieldOfView = bz.SettingEngine.DEFAULT_FIELD_OF_VIEW;\n                    }\n\n                    cameraSystem.setFirstPersonCameraFieldOfView( this.fieldOfView );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player's rotation on the Z axis should be centered to zero.\n        ***************************************************************************************************************/\n        private checkCenteringRotZ() : void\n        {\n            if ( this.centerRotZ )\n            {\n                if ( this.rotation.z > 0.0 )\n                {\n                    this.rotation.z -= bz.SettingPlayerHuman.SPEED_CENTER_LOOK_UP_DOWN;\n\n                    if ( this.rotation.z <= 0.0 )\n                    {\n                        this.rotation.z = 0.0;\n                    }\n                }\n                else if ( this.rotation.z < 0.0 )\n                {\n                    this.rotation.z += bz.SettingPlayerHuman.SPEED_CENTER_LOOK_UP_DOWN;\n\n                    if ( this.rotation.z >= 0.0 )\n                    {\n                        this.rotation.z = 0.0;\n                    }\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player is firing.\n        ***************************************************************************************************************/\n        private checkFire() : void\n        {\n            // check if firing is requested\n            if ( this.fire )\n            {\n                bz.Debug.fire.log();\n                bz.Debug.fire.log( 'Player is firing' );\n\n                // mark fire request as processed\n                this.fire = false;\n\n                // create shot and apply it onto the stage\n                const shot:bz.Shot = this.createShot();\n                this.stage.applyShot( shot );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a shot that contains all information about this shot.\n        *\n        *   @return The shot that is currently fired from the player.\n        ***************************************************************************************************************/\n        private createShot() : bz.Shot\n        {\n            const divergenceY :number = 0.05 * ( bz.MathUtil.getRandomInt( -20, 20 ) );\n            const divergenceZ :number = 0.05 * ( bz.MathUtil.getRandomInt( -20, 20 ) );\n\n            const source      :BABYLON.Vector3 = this.head.absolutePosition;\n            const rotation    :BABYLON.Vector3 = new BABYLON.Vector3\n            (\n                this.rotation.z + divergenceZ,\n                this.rotation.y + divergenceY,\n                0.0\n            );\n            const range :number = 50.0;\n\n            return new bz.Shot\n            (\n                source,\n                rotation,\n                range,\n                false,\n                1\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Positions all player limbs according to the current player height.\n        ***************************************************************************************************************/\n        private positionPlayerLimbs() : void\n        {\n            // get half player height\n            const halfPlayerHeight:number = ( this.heightY / 2 );\n\n            // get current modifier Y\n            const headShakingModifierY:number =\n            (\n                bz.MathUtil.sinDegrees( this.headShakingAngle )\n                * bz.SettingPlayerHuman.HEAD_SHAKING_RANGE_Y\n            );\n\n            // bz.Debug.player.log( ' Head Shaking modifierY is [' + headShakingModifierY + ']' );\n/*\n            this.head.position = new BABYLON.Vector3\n            (\n                0.0,\n                ( halfPlayerHeight - ( bz.SettingPlayerHuman.DIAMETER_HEAD / 2 ) ) - headShakingModifierY,\n                0.0\n            );\n\n            this.leftHand.position = new BABYLON.Vector3\n            (\n                -1.0,\n                halfPlayerHeight - ( bz.SettingPlayerHuman.HEIGHT_Y_STANDING / 2 ),\n                0.0\n            );\n            this.rightHand.position = new BABYLON.Vector3\n            (\n                1.0,\n                halfPlayerHeight - ( bz.SettingPlayerHuman.HEIGHT_Y_STANDING / 2 ),\n                0.0\n            );\n */\n        }\n\n        /** ************************************************************************************************************\n        *   Alters the angle that simulates the head shaking on walking forwards and backwards.\n        *\n        *   @param delta The moving delta to apply on head shaking.\n        ***************************************************************************************************************/\n        private alterHeadShakeAngle( delta:number ) : void\n        {\n            // apply delta and normalize angle\n            this.headShakingAngle += ( delta * bz.SettingPlayerHuman.HEAD_SHAKING_VELOCITY_MULTIPLIER );\n            this.headShakingAngle = bz.MathUtil.normalizeAngleDegrees( this.headShakingAngle );\n\n            // bz.Debug.player.log( 'Head shake angle delta [' + delta + '] total [' + this.headShakingAngle + ']' );\n\n            // update player limbs positions\n            this.positionPlayerLimbs();\n        }\n\n        /** ************************************************************************************************************\n        *   Determines if the player is currently falling.\n        *\n        *   @return <code>true</code> if the player is currently falling.\n        ***************************************************************************************************************/\n        private isFalling() : boolean\n        {\n            return (\n                    this.body.physicsImpostor != null\n                &&  this.body.physicsImpostor.getLinearVelocity().y < bz.SettingPlayerHuman.FALLING_VELOCITY_Y\n            );\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a spaceship being controlled by the user.\n    *******************************************************************************************************************/\n    export class PlayerSpaceship extends bz.Player\n    {\n        /** The id of the player's body mesh in the mesh array. */\n        private     static  readonly    PLAYER_BODY_ID              :number                             = 0;\n\n        /** The id of the player's head mesh in the mesh array. */\n        // private     static  readonly    PLAYER_HEAD_ID              :number                             = 1;\n        /** The id of the player's left hand mesh in the mesh array. */\n        // private     static  readonly    PLAYER_LEFT_HAND_ID         :number                             = 2;\n        /** The id of the player's left hand mesh in the mesh array. */\n        // private     static  readonly    PLAYER_RIGHT_HAND_ID        :number                             = 3;\n\n        /** The current height of the player. Changes on ducking. */\n        private             readonly    heightY                     :number                             = 0.0;\n        /** Flags if rotZ view centering should occur this tick. */\n        private             readonly    centerRotZ                  :boolean                            = false;\n\n        /** Flags if fire should be performed this tick. */\n        private                         fire                        :boolean                            = false;\n        /** Flags if the player currently wants to duck. */\n        private                         duck                        :boolean                            = false;\n\n        /** Flags if the player currently wants to zoom. */\n        private                         zoom                        :boolean                            = false;\n        /** The current field of view of the player. Changes on zooming. */\n        private                         fieldOfView                 :number                             = 0.0;\n\n        /** Current rotation. */\n        private                         rotation                    :BABYLON.Vector3                    = null;\n        /** Current rotation delta. */\n        private                         rotationDelta               :BABYLON.Vector3                    = null;\n        /** Current move delta. */\n        private                         moveDelta                   :BABYLON.Vector3                    = null;\n\n        /** The referenced body mesh. */\n        private             readonly    body                        :BABYLON.AbstractMesh               = null;\n        /** The referenced head mesh. */\n        // private             readonly    head                        :BABYLON.AbstractMesh               = null;\n        /** The referenced left hand mesh. */\n        // private             readonly    leftHand                    :BABYLON.AbstractMesh               = null;\n        /** The referenced right hand mesh. */\n        // private             readonly    rightHand                   :BABYLON.AbstractMesh               = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new player instance.\n        *\n        *   @param stage         The stage this player belongs to.\n        *   @param scene         The scene reference.\n        *   @param position      The initial position.\n        *   @param rotY          The initial rotation Y.\n        *   @param emissiveColor The emissive color of all mesh faces.\n        ***************************************************************************************************************/\n        public constructor\n        (\n            stage         :bz.Stage,\n            scene         :bz.Scene,\n            position      :BABYLON.Vector3,\n            rotY          :number,\n            emissiveColor :BABYLON.Color3\n        )\n        {\n            super\n            (\n                stage,\n                new bz.Model\n                (\n                    [\n                        // Player.PLAYER_BODY_ID\n                        bz.MeshFactory.createImportedModel\n                        (\n                            scene,\n                            bz.ModelFile.CRATE,\n                            position.clone(),\n                            bz.Physic.PLAYER_SPACESHIP,\n                            bz.ModelCompoundType.NONE\n                        ).getMesh( 0 ),\n                    ]\n                ),\n                bz.GameObject.UNBREAKABLE\n            );\n\n            // assign initial rotation, rotation delta and move delta\n            this.rotation      = new BABYLON.Vector3( 0.0, rotY, 0.0 );\n            this.rotationDelta = BABYLON.Vector3.Zero();\n            this.moveDelta     = BABYLON.Vector3.Zero();\n\n            // reference the body and all limbs\n            this.body      = this.model.getMesh( PlayerSpaceship.PLAYER_BODY_ID       );\n/*\n            this.head      = this.model.getMesh( PlayerSpaceship.PLAYER_HEAD_ID       );\n            this.leftHand  = this.model.getMesh( PlayerSpaceship.PLAYER_LEFT_HAND_ID  );\n            this.rightHand = this.model.getMesh( PlayerSpaceship.PLAYER_RIGHT_HAND_ID );\n*/\n            // stick all limbs to body\n/*\n            this.head.setParent(      this.body );\n            this.leftHand.setParent(  this.body );\n            this.rightHand.setParent( this.body );\n*/\n            // set alpha\n            this.body.material.alpha = 0.5;\n\n            // set initial height\n            this.heightY     = bz.SettingPlayerHuman.HEIGHT_Y_STANDING;\n            this.fieldOfView = bz.SettingEngine.DEFAULT_FIELD_OF_VIEW;\n\n            // apply initial rotation\n            this.rotatePlayerXYZ();\n/*\n            // set a collision event handler for the body\n            if ( false )\n            {\n                this.body.physicsImpostor.onCollideEvent = (\n                    collider     :BABYLON.PhysicsImpostor,\n                    collidedWith :BABYLON.PhysicsImpostor\n                ) : void => {\n                    console.log( ' Colliding!' );\n                };\n            }\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Renders one tick of the player's game loop.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // handle keys\n            this.handleKeys();\n\n            // alter position\n            this.movePlayer();\n            this.manipulateVelocities();\n\n            // alter view\n            this.rotatePlayerXYZ();\n            this.checkCenteringRotZ();\n            this.checkFieldOfViewChange();\n\n            // interact\n            this.checkFire();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the first person camera.\n        *\n        *   @return The player's head mesh.\n        *           This is the right mesh to set the first person camera into.\n        ***************************************************************************************************************/\n        public getFirstPersonCameraTargetMesh() : BABYLON.AbstractMesh\n        {\n            return this.body;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the player's target mesh for the third person camera.\n        *\n        *   @return The player's body mesh.\n        *           This is the right mesh to set as a target for the third person camera.\n        ***************************************************************************************************************/\n        public getThirdPersonCameraTargetMesh() : BABYLON.AbstractMesh\n        {\n            return this.body;\n        }\n\n        /** ************************************************************************************************************\n        *   Handles all keys for the player.\n        ***************************************************************************************************************/\n        private handleKeys() : void\n        {\n            const keySystem:bz.KeySystem = bz.Main.game.getKeySystem();\n\n            // move forewards and backwards\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_W  )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_UP )\n            )\n            {\n\n/*\n                let speedForward:number = 0;\n\n                // probably run\n                if ( keySystem.isPressed( bz.KeyCodes.KEY_SHIFT_LEFT  ) )\n                {\n                    speedForward = bz.SettingPlayerHuman.RUN_IMPULSE;\n                }\n                else\n                {\n                    speedForward = bz.SettingPlayerHuman.MOVE_IMPULSE;\n                }\n*/\n                this.moveDelta.y = bz.SettingPlayerSpaceship.SPEED_RAISE;\n/*\n                this.moveDelta.z += speedForward * bz.MathUtil.cosDegrees( this.rotation.y );\n\n                // shake head if enabled\n                if ( bz.SettingPlayerHuman.HEAD_SHAKING_ENABLED )\n                {\n                    this.alterHeadShakeAngle( speedForward );\n                }\n*/\n            }\n            if\n            (\n                    keySystem.isPressed( bz.KeyCodes.KEY_S )\n                // ||  keySystem.isPressed( bz.KeyCodes.KEY_DOWN )\n            )\n            {\n                this.moveDelta.y = -bz.SettingPlayerSpaceship.SPEED_RAISE;\n/*\n                this.moveDelta.x -= bz.SettingPlayerHuman.MOVE_IMPULSE * bz.MathUtil.sinDegrees( this.rotation.y );\n                this.moveDelta.z -= bz.SettingPlayerHuman.MOVE_IMPULSE * bz.MathUtil.cosDegrees( this.rotation.y );\n\n                // shake head if enabled\n                if ( bz.SettingPlayerHuman.HEAD_SHAKING_ENABLED )\n                {\n                    this.alterHeadShakeAngle( -bz.SettingPlayerHuman.MOVE_IMPULSE );\n                }\n*/\n            }\n\n            // strave\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_A    )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_LEFT )\n            )\n            {\n                // this.moveDelta.x -= bz.SettingPlayerSpaceship.SPEED_STRAVE;\n                this.moveDelta.z += bz.SettingPlayerSpaceship.SPEED_STRAVE;\n            }\n            if\n            (\n                   keySystem.isPressed( bz.KeyCodes.KEY_D     )\n                // || keySystem.isPressed( bz.KeyCodes.KEY_RIGHT )\n            )\n            {\n                // this.moveDelta.x += bz.SettingPlayerSpaceship.SPEED_STRAVE;\n                this.moveDelta.z -= bz.SettingPlayerSpaceship.SPEED_STRAVE;\n            }\n\n            // turn Y\n/*\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_Q ) )\n            {\n                this.rotationDelta.y = -bz.SettingPlayerHuman.SPEED_TURN;\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_E ) )\n            {\n                this.rotationDelta.y = bz.SettingPlayerHuman.SPEED_TURN;\n            }\n*/\n/*\n            // look up / down\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_R ) )\n            {\n                this.rotationDelta.z = -bz.SettingPlayerHuman.SPEED_LOOK_UP_DOWN;\n            }\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_F ) )\n            {\n                this.rotationDelta.z = bz.SettingPlayerHuman.SPEED_LOOK_UP_DOWN;\n            }\n*/\n            // fire\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_CTRL_LEFT ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_CTRL_LEFT );\n\n                this.fire = true;\n            }\n/*\n            // duck\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_Y ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_Y );\n\n                this.toggleDuck();\n            }\n\n            // jump\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_SPACE ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_SPACE );\n\n                this.assignJump();\n            }\n*/\n            // zoom\n            this.zoom = keySystem.isPressed( bz.KeyCodes.KEY_X );\n        }\n\n        /** ************************************************************************************************************\n        *   Moves all player's meshes by the current move deltas.\n        ***************************************************************************************************************/\n        private movePlayer() : void\n        {\n            this.body.position.x += bz.SettingPlayerSpaceship.SPEED_DEFAULT;\n\n            // console.log( \"> y: \" + this.body.position.y );\n\n            // check if moving occurred\n            if\n            (\n                this.moveDelta.x !== 0.0\n                || this.moveDelta.y !== 0.0\n                || this.moveDelta.z !== 0.0\n            )\n            {\n                let newPositionY :number = ( this.body.position.y + this.moveDelta.y );\n                if ( newPositionY < 1.0  )\n                {\n                    newPositionY = 1.0;\n                }\n                if ( newPositionY > 25.0 )\n                {\n                    newPositionY = 25.0;\n                }\n                this.body.position.y = newPositionY;\n\n                let newPositionZ :number = ( this.body.position.z + this.moveDelta.z );\n                if ( newPositionZ < 1.0  )\n                {\n                    newPositionZ = 1.0;\n                }\n                if ( newPositionZ > 50.0 )\n                {\n                    newPositionZ = 50.0;\n                }\n                this.body.position.z = newPositionZ;\n\n                // reset move deltas\n                this.moveDelta = BABYLON.Vector3.Zero();\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Overrides the player's linear and angular velocities for improved player controls and user experience.\n        ***************************************************************************************************************/\n        private manipulateVelocities() : void\n        {\n            if ( this.body.physicsImpostor != null )\n            {\n                // suppress linear velocities except Y\n                // const velocity:BABYLON.Vector3 = this.body.physicsImpostor.getLinearVelocity();\n                this.body.physicsImpostor.setLinearVelocity\n                (\n                    new BABYLON.Vector3\n                    (\n                        0.0,\n                        0.0,\n                        0.0\n                    )\n                );\n\n                // completely suppress angular velocities\n                this.body.physicsImpostor.setAngularVelocity\n                (\n                    BABYLON.Vector3.Zero()\n                );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Applies the current rotations for all axis to the according player body parts.\n        ***************************************************************************************************************/\n        private rotatePlayerXYZ() : void\n        {\n            if ( this.rotationDelta.y !== 0.0 )\n            {\n                this.rotation.y = bz.MathUtil.normalizeAngleDegrees( this.rotation.y + this.rotationDelta.y );\n                this.rotationDelta.y = 0.0;\n            }\n\n            if ( this.rotationDelta.z !== 0.0 )\n            {\n                this.rotation.z += this.rotationDelta.z;\n\n                if ( this.rotation.z > bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN )\n                {\n                    this.rotation.z = bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN;\n                }\n                else if ( this.rotation.z < -bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN )\n                {\n                    this.rotation.z = -bz.SettingPlayerHuman.MAX_LOOK_UP_DOWN;\n                }\n\n                this.rotationDelta.z = 0.0;\n            }\n\n            // rotate body\n            bz.MeshManipulation.setAbsoluteRotationXYZ\n            (\n                this.body,\n                this.rotation.z,\n                this.rotation.y,\n                0.0\n            );\n/*\n            // rotate head\n            bz.MeshManipulation.setAbsoluteRotationXYZ\n            (\n                this.head,\n                this.rotation.z,\n                0.0,\n                0.0\n            );\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Toggles player ducking.\n        ***************************************************************************************************************/\n        private toggleDuck() : void\n        {\n            this.duck = !this.duck;\n\n            bz.Debug.player.log( 'Player ducking: [' + String( this.duck ) + ']' );\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player's field of view changes.\n        ***************************************************************************************************************/\n        private checkFieldOfViewChange() : void\n        {\n            const CURRENT_WEARPON_MAX_ZOOM   :number = 0.5;\n            const CURRENT_WEARPON_ZOOM_SPEED :number = 0.05;\n\n            const cameraSystem:bz.CameraSystem = this.stage.getCameraSystem();\n\n            if ( this.zoom )\n            {\n                if ( this.fieldOfView > CURRENT_WEARPON_MAX_ZOOM )\n                {\n                    this.fieldOfView -= CURRENT_WEARPON_ZOOM_SPEED;\n\n                    if ( this.fieldOfView < CURRENT_WEARPON_MAX_ZOOM )\n                    {\n                        this.fieldOfView = CURRENT_WEARPON_MAX_ZOOM;\n                    }\n\n                    cameraSystem.setFirstPersonCameraFieldOfView( this.fieldOfView );\n                }\n            }\n            else\n            {\n                if ( this.fieldOfView < bz.SettingEngine.DEFAULT_FIELD_OF_VIEW )\n                {\n                    this.fieldOfView += CURRENT_WEARPON_ZOOM_SPEED;\n\n                    if ( this.fieldOfView > bz.SettingEngine.DEFAULT_FIELD_OF_VIEW )\n                    {\n                        this.fieldOfView = bz.SettingEngine.DEFAULT_FIELD_OF_VIEW;\n                    }\n\n                    cameraSystem.setFirstPersonCameraFieldOfView( this.fieldOfView );\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player's rotation on the Z axis should be centered to zero.\n        ***************************************************************************************************************/\n        private checkCenteringRotZ() : void\n        {\n            if ( this.centerRotZ )\n            {\n                if ( this.rotation.z > 0.0 )\n                {\n                    this.rotation.z -= bz.SettingPlayerHuman.SPEED_CENTER_LOOK_UP_DOWN;\n\n                    if ( this.rotation.z <= 0.0 )\n                    {\n                        this.rotation.z = 0.0;\n                    }\n                }\n                else if ( this.rotation.z < 0.0 )\n                {\n                    this.rotation.z += bz.SettingPlayerHuman.SPEED_CENTER_LOOK_UP_DOWN;\n\n                    if ( this.rotation.z >= 0.0 )\n                    {\n                        this.rotation.z = 0.0;\n                    }\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Checks if the player is firing.\n        ***************************************************************************************************************/\n        private checkFire() : void\n        {\n            // check if firing is requested\n            if ( this.fire )\n            {\n                bz.Debug.fire.log();\n                bz.Debug.fire.log( 'Player is firing' );\n\n                // mark fire request as processed\n                this.fire = false;\n\n                // create shot and apply it onto the stage\n                const shot:bz.Shot = this.createShot();\n                this.stage.applyShot( shot );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates a shot that contains all information about this shot.\n        *\n        *   @return The shot that is currently fired from the player.\n        ***************************************************************************************************************/\n        private createShot() : bz.Shot\n        {\n            const divergenceY :number = 0.05 * ( bz.MathUtil.getRandomInt( -20, 20 ) );\n            const divergenceZ :number = 0.05 * ( bz.MathUtil.getRandomInt( -20, 20 ) );\n\n            const source      :BABYLON.Vector3 = this.body.absolutePosition;\n            const rotation    :BABYLON.Vector3 = new BABYLON.Vector3\n            (\n                this.rotation.z + divergenceZ,\n                this.rotation.y + divergenceY,\n                0.0\n            );\n            const range :number = 50.0;\n\n            return new bz.Shot\n            (\n                source,\n                rotation,\n                range,\n                false,\n                1\n            );\n        }\n    }\n","\n    import * as bz from '../..';\n\n    /** ****************************************************************************************************************\n    *   Represents a custom stage set.\n    *******************************************************************************************************************/\n    export abstract class Stage\n    {\n        /** The scene that represents this stage. */\n        protected           readonly        scene                   :bz.Scene                               = null;\n        /** The canvas system this stage is displayed on. */\n        protected           readonly        canvas                  :bz.CanvasSystem                        = null;\n\n        /** Specifies the ambient color of the babylon.JS scene and is set as the emissive color of all faces. */\n        protected           readonly        ambientColor            :BABYLON.Color3                         = null;\n        /** The clear color of this stage is the background color of all mesh materials. */\n        protected           readonly        clearColor              :BABYLON.Color4                         = null;\n        /** The initial camera to set for this stage. */\n        protected           readonly        initialCamera           :bz.CameraType                          = null;\n\n        /** The player instance. */\n        protected                           player                  :bz.Player                              = null;\n        /** A collection of all walls in this stage. */\n        protected                           walls                   :bz.Wall[]                              = [];\n        /** A collection of all items in this stage. */\n        protected                           items                   :bz.Item[]                              = [];\n        /** A collection of all bots in this stage. */\n        protected                           bots                    :bz.Bot[]                               = [];\n\n        /** The game GUI. */\n        protected                           gui                     :bz.GUI                                 = null;\n        /** The camera system that manages all scene cameras. */\n        protected                           cameraSystem            :bz.CameraSystem                        = null;\n\n        /** The pointer system to use in this stage. */\n        protected                           pointerSystem           :bz.PointerSystem                       = null;\n\n        /** The skybox that surrounds the whole stage. */\n        protected                           skybox                  :BABYLON.Mesh                           = null;\n        /** A collection of all sprites that appear in this stage. */\n        protected                           sprites                 :bz.Sprite[]                            = [];\n\n        /** A collection of all lights that appear in this stage. */\n        protected                           lights                  :BABYLON.Light[]                        = [];\n        /** A collection of all shadowGenerators that appear in this stage. */\n        protected                           shadowGenerators        :BABYLON.ShadowGenerator[]              = [];\n\n        /** A collection of all bullet holes in this stage. */\n        private             readonly        bulletHoles             :bz.BulletHole[]                        = [];\n        /** A collection of all debug meshes in this stage. */\n        private             readonly        debugMeshes             :BABYLON.Mesh[]                         = [];\n\n        /** Indicates pause state. */\n        private                             pause                   :boolean                                = false;\n\n        /** ************************************************************************************************************\n        *   Creates a new custom stage.\n        *\n        *   @param scene         The scene representing this stage.\n        *   @param canvas        The canvas system this stage is displayed on.\n        *\n        *   @param ambientColor  Specifies the ambient color of the babylon.JS scene\n        *                        and is set as the emissive color of all faces.\n        *   @param clearColor    The clear color of the stage is the background color of the scene.\n        *   @param initialCamera The initial camera for this stage.\n        ***************************************************************************************************************/\n        protected constructor\n        (\n            scene         :bz.Scene,\n            canvas        :bz.CanvasSystem,\n\n            ambientColor  :BABYLON.Color3,\n            clearColor    :BABYLON.Color4,\n            initialCamera :bz.CameraType\n        )\n        {\n            this.scene         = scene;\n            this.canvas        = canvas;\n\n            this.ambientColor  = ambientColor;\n            this.clearColor    = clearColor;\n            this.initialCamera = initialCamera;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected abstract createPlayer() : bz.Player;\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected abstract createCameraSystem() : bz.CameraSystem;\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected abstract handleLevelKeys( keySystem:bz.KeySystem ) : void;\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected abstract createWalls() : bz.Wall[];\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected abstract createItems() : bz.Item[];\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected abstract createBots() : bz.Bot[];\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected abstract createSkybox() : BABYLON.Mesh;\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected abstract createSprites() : bz.Sprite[];\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected abstract createLights() : BABYLON.Light[];\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected abstract createShadowGenerators() : BABYLON.ShadowGenerator[];\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected abstract setupShadows() : void;\n\n        /** ************************************************************************************************************\n        *   Sets up fog for this stage.\n        ***************************************************************************************************************/\n        protected abstract setupFog() : void;\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        *\n        *   @return The pointer system to use in this stage.\n        ***************************************************************************************************************/\n        protected abstract createPointerSystem() : bz.PointerSystem;\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected abstract createGUI() : bz.GUI;\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected abstract onInitComplete() : void;\n\n        /** ************************************************************************************************************\n        *   Inits the stage.\n        ***************************************************************************************************************/\n        public init() : void\n        {\n            // set ambient color and scene bg color\n            this.scene.getNativeScene().ambientColor = this.ambientColor;\n            this.scene.getNativeScene().clearColor   = this.clearColor;\n\n            // create all game objects\n            this.player        = this.createPlayer();\n            this.cameraSystem  = this.createCameraSystem();\n            this.walls         = this.createWalls();\n            this.items         = this.createItems();\n            this.bots          = this.createBots();\n            this.skybox        = this.createSkybox();\n            this.sprites       = this.createSprites();\n            this.gui           = this.createGUI();\n            this.lights        = this.createLights();\n            this.pointerSystem = this.createPointerSystem();\n\n            // set camera system\n            this.setActiveCamera( this.initialCamera );\n\n            // create shadow generators\n            if ( bz.SettingEngine.ENABLE_SHADOWS )\n            {\n                this.shadowGenerators = this.createShadowGenerators();\n                this.setupShadows();\n            }\n\n            // enable fog if desired\n            this.setupFog();\n\n            // create debug axis\n            if ( bz.SettingDebug.DEBUG_COORDINATE_AXIS_ENABLED )\n            {\n                this.createCoordinalAxis();\n            }\n\n            // adjust GUI size\n            this.adjustGuiSizeToCanvasSize();\n\n            // invoke init complete callback\n            this.onInitComplete();\n        }\n\n        /** ************************************************************************************************************\n        *   Adds a GUI effect to the effect queue.\n        *\n        *   @return The player instance.\n        ***************************************************************************************************************/\n        public addGuiFx( type:bz.GUIFxType ) : void\n        {\n            this.gui.addGuiFx( type );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the player instance.\n        *\n        *   @return The player instance.\n        ***************************************************************************************************************/\n        public getPlayer() : bz.Player\n        {\n            return this.player;\n        }\n\n        /** ************************************************************************************************************\n        *   Returns the native babylon.JS scene.\n        *\n        *   @return The player instance.\n        ***************************************************************************************************************/\n        public getScene() : BABYLON.Scene\n        {\n            return this.scene.getNativeScene();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns this stage's camera system.\n        *\n        *   @return The camera system of this stage.\n        ***************************************************************************************************************/\n        public getCameraSystem() : bz.CameraSystem\n        {\n            return this.cameraSystem;\n        }\n\n        /** ************************************************************************************************************\n        *   Renders all stage concernings for one tick of the game loop.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // consider pause\n            if ( !this.pause )\n            {\n                // handle level specific keys\n                this.handleLevelKeys( bz.Main.game.getKeySystem() );\n\n                // render player\n                if ( this.player !== null )\n                {\n                    this.player.render();\n                }\n\n                // render walls\n                for ( const wall of this.walls )\n                {\n                    wall.render();\n                }\n\n                // render items\n                for ( const item of this.items )\n                {\n                    item.render();\n                }\n            }\n\n            // render GUI\n            this.gui.render( this.pause );\n        }\n\n        /** ************************************************************************************************************\n        *   Disposes all babylon.JS resources of this level.\n        ***************************************************************************************************************/\n        public dispose() : void\n        {\n            // dispose player\n            if ( this.player !== null )\n            {\n                this.player.dispose();\n            }\n\n            // dispose all walls\n            for ( const wall of this.walls )\n            {\n                wall.dispose();\n            }\n\n            // dispose all items\n            for ( const item of this.items )\n            {\n                item.dispose();\n            }\n\n            // dispose all bots\n            for ( const bot of this.bots )\n            {\n                bot.dispose();\n            }\n\n            // dispose all bullet holes\n            for ( const bulletHole of this.bulletHoles )\n            {\n                bulletHole.dispose();\n            }\n\n            // dispose all debug meshes\n            for ( const debugLine of this.debugMeshes )\n            {\n                debugLine.dispose();\n            }\n\n            // dispose skybox\n            if ( this.skybox !== null )\n            {\n                this.skybox.dispose();\n            }\n\n            // dispose sprites\n            for ( const sprite of this.sprites )\n            {\n                sprite.dispose();\n            }\n\n            // dispose lights\n            for ( const light of this.lights )\n            {\n                light.dispose();\n            }\n\n            // dispose shadow generators\n            for ( const shadowGenerator of this.shadowGenerators )\n            {\n                shadowGenerator.dispose();\n            }\n\n            // dispose camera system\n            this.cameraSystem.dispose();\n\n            // dispose GUI\n            this.gui.dispose();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the active camera for this stage.\n        ***************************************************************************************************************/\n        public setActiveCamera( cameraId:bz.CameraType ) : void\n        {\n            this.cameraSystem.setActiveCamera\n            (\n                cameraId,\n                this.player,\n                this.gui\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Applies a shot onto the stage.\n        *\n        *   @param shot The shot to apply onto the stage.\n        ***************************************************************************************************************/\n        public applyShot( shot:bz.Shot ) : void\n        {\n            // add debug line\n            if ( bz.SettingDebug.SHOW_SHOT_LINES_AND_COLLISIONS )\n            {\n                this.debugMeshes.push( shot.createDebugLine( this.scene.getNativeScene() ) );\n            }\n\n            // determine all hit points without hurting the game objects\n            const hitPoints:bz.HitPoint[] = this.determineAllHitPoints( shot );\n            bz.Debug.fire.log( ' Gathered [' + String( hitPoints.length ) + '] hit points' );\n\n            // determine impact hit points\n            const impactHitPoints:bz.HitPoint[] = Stage.determineImpactHitPoints( hitPoints, shot );\n\n            // impact all hit points\n            for ( const impactHitPoint of impactHitPoints )\n            {\n                const bulletHole:bz.BulletHole = impactHitPoint.causeImpact\n                (\n                    this.scene,\n                    this.ambientColor,\n                    shot.getDamage()\n                );\n                this.addBulletHole( bulletHole );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Resizes fg and bg GUIs so they fit the current canvas size.\n        ***************************************************************************************************************/\n        public adjustGuiSizeToCanvasSize() : void\n        {\n            this.gui.updateSize\n            (\n                this.canvas.getWidth(),\n                this.canvas.getHeight()\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Toggles the stage to the pause state or vice versa.\n        ***************************************************************************************************************/\n        public togglePause() : void\n        {\n            // toggle pause\n            this.pause = !this.pause;\n\n            bz.Debug.game.log( 'Toggle pause to [' + String( this.pause ) + ']');\n\n            // stop or resume physics engine\n            this.scene.enablePhysics( !this.pause );\n\n            // propagate pause state to gui\n            this.setGuiPause();\n\n            // propagate pause state to all stage sprites\n            this.setSpritePause();\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the current selected index of the pause menu.\n        *\n        *   @return The current active pause menu index.\n        ***************************************************************************************************************/\n        public getPauseMenuIndex() : number\n        {\n            return this.gui.getPauseMenuIndex();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the active index for the pause menu.\n        *\n        *   @param index The index of the pause menu item to set.\n        ***************************************************************************************************************/\n        public setPauseMenuIndex( index:number ) : void\n        {\n            this.gui.setPauseMenuIndex( index );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the coordinal axis lines. X Y and Z axes are aligned by the LEFT HAND RULE.\n        *\n        *   @return A collection of all meshes that build the coordinal axis lines.\n        ***************************************************************************************************************/\n        private createCoordinalAxis() : void\n        {\n            this.debugMeshes.push\n            (\n                // axis x\n                bz.MeshFactory.createLine\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 0.0,  0.0, 0.0 ),\n                    new BABYLON.Vector3( bz.SettingDebug.DEBUG_COORDINATE_AXIS_LENGTH, 0.0, 0.0 ),\n                    bz.MeshPivotAnchor.LOWEST_XYZ,\n                    new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                    bz.SettingColor.COLOR_RGBA_RED_OPAQUE\n                ),\n\n                // axis y\n                bz.MeshFactory.createLine\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 0.0, 0.0,  0.0 ),\n                    new BABYLON.Vector3( 0.0, bz.SettingDebug.DEBUG_COORDINATE_AXIS_LENGTH, 0.0 ),\n                    bz.MeshPivotAnchor.LOWEST_XYZ,\n                    new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                    bz.SettingColor.COLOR_RGBA_GREEN_OPAQUE\n                ),\n\n                // axis z\n                bz.MeshFactory.createLine\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 0.0, 0.0, 0.0  ),\n                    new BABYLON.Vector3( 0.0, 0.0, bz.SettingDebug.DEBUG_COORDINATE_AXIS_LENGTH ),\n                    bz.MeshPivotAnchor.LOWEST_XYZ,\n                    new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                    bz.SettingColor.COLOR_RGBA_BLUE_OPAQUE\n                )\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns all hit points on all game objects of this stage on applying the specified shot.\n        *   Game objects will not be damaged or hit by the shot!\n        *\n        *   @param shot The shot to apply onto all game objects of this stage.\n        *\n        *   @return All hit points this shot collides to.\n        ***************************************************************************************************************/\n        private determineAllHitPoints( shot:bz.Shot ) : bz.HitPoint[]\n        {\n            // collect all hitPoints\n            let hitPoints:bz.HitPoint[] = [];\n\n            // check collision with walls\n            bz.Debug.fire.log( ' Checking shot collision with [' + String( this.walls.length ) + '] walls' );\n            for ( const wall of this.walls )\n            {\n                hitPoints = hitPoints.concat( wall.determineHitPoints( shot ) );\n            }\n\n            return hitPoints;\n        }\n\n        /** ************************************************************************************************************\n        *   Adds the specified bullet hole to the bullet hole stack.\n        *   If the maximum number of bullet holes is reached, the oldest bullet hole will be disposed.\n        *\n        *   @param bulletHole The bullet hole to add to this stage.\n        ***************************************************************************************************************/\n        private addBulletHole( bulletHole:bz.BulletHole ) : void\n        {\n            if ( this.bulletHoles.length > bz.SettingEngine.MAX_BULLET_HOLES )\n            {\n                this.bulletHoles[ 0 ].dispose();\n                this.bulletHoles.shift();\n            }\n\n            this.bulletHoles.push( bulletHole );\n        }\n\n        /** ************************************************************************************************************\n        *   Alters the pause state for the GUI.\n        ***************************************************************************************************************/\n        private setGuiPause() : void\n        {\n            this.gui.setPauseGuiVisibility( this.pause );\n        }\n\n        /** ************************************************************************************************************\n        *   Alters the pause state for all sprites.\n        ***************************************************************************************************************/\n        private setSpritePause() : void\n        {\n            for ( const sprite of this.sprites )\n            {\n                sprite.setPause( this.pause );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Determines all hit points of the given array of hit points that will be impacted by the specified shot.\n        *\n        *   @param hitPoints All hit points that possibly collide with the shot.\n        *   @param shot      The shot that caused all hit points.\n        ***************************************************************************************************************/\n        private static determineImpactHitPoints( hitPoints:bz.HitPoint[], shot:bz.Shot ) : bz.HitPoint[]\n        {\n            let impactHitPoints:bz.HitPoint[] = [];\n\n            if ( shot.isWallBreaking() )\n            {\n                impactHitPoints = hitPoints;\n            }\n            else\n            {\n                const nearestHitPoint:bz.HitPoint = bz.HitPoint.determineNearestHitPoint( hitPoints );\n\n                if ( nearestHitPoint !== null )\n                {\n                    impactHitPoints.push( nearestHitPoint );\n                }\n            }\n\n            return impactHitPoints;\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Identifies all stages the app consists of.\n    *******************************************************************************************************************/\n    export enum StageId\n    {\n        /** The test office level. */\n        TEST_OFFICE,\n        /** The test level. */\n        TEST_LEVEL,\n        /** The test site level. */\n        TEST_SITE,\n\n        /** The spaceshiplevel. */\n        SPACESHIP,\n\n        /** The room viewer. */\n        ROOM_VIEWER,\n        /** The product configurator. */\n        PRODUCT_CONFIGURATOR,\n        /** The rotating Mayflower logo. */\n        INTRO_LOGO,\n        /** The human body partitions. */\n        HUMAN_BODY_PARTITIONS,\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the 'office' level.\n    *******************************************************************************************************************/\n    export class Office extends bz.Stage\n    {\n        /** A testwise mesh 'chair'. */\n        protected                           chairSingle             :bz.Model                               = null;\n        /** A testwise mesh 'chair'. */\n        protected                           chairMulti              :bz.Model                               = null;\n        /** A testwise mesh 'chair'. */\n        protected                           chairMultiPhysics       :bz.Model                               = null;\n        /** A testwise mesh 'compound spheres'. */\n        protected                           compoundSpheres         :bz.Model                               = null;\n        /** The testwise rotation X for the testwise chair. */\n        // protected                        chairRot                :number                                 = 0.0;\n        /** Testwise camera target toggle. */\n        private                             camTarget               :boolean                                = false;\n\n        /** ************************************************************************************************************\n        *   Creates a new test office.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_WHITE,\n                bz.SettingColor.COLOR_RGBA_WHITE_OPAQUE,\n                bz.CameraType.FIRST_PERSON\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return new bz.PlayerHuman\n            (\n                this,\n                this.scene,\n                new BABYLON.Vector3( 8.0, 2.5, 13.0 ),\n                45.0,\n                this.ambientColor\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 10.0, 10.0, 10.0 ),\n                new BABYLON.Vector3( 20.0, 5.0,  20.0 ),\n                new BABYLON.Vector3( 0.0,  0.0,  0.0  ),\n\n                new BABYLON.Vector3( 0.0,  0.0,  0.0  ),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getFirstPersonCameraTargetMesh()\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n                // add GUI messages to queue and start various debug actions\n\n                // explode compound spheres\n                this.gui.addGuiMessage( 'explode compound spheres [' + bz.StringUtil.getDateTimeString() + ']' );\n                this.compoundSpheres.removeCompoundMesh( this.scene.getNativeScene() );\n\n                // show hurt GUI effect\n                this.addGuiFx( bz.GUIFxType.HURT );\n\n                // perform a camera animation for the stationary target camera\n                this.gui.addGuiMessage( 'start camera journey [' + bz.StringUtil.getDateTimeString() + ']' );\n                this.getCameraSystem().animateCameraPosition\n                (\n                    bz.CameraType.STATIONARY,\n                    ( this.camTarget ? BABYLON.Vector3.Zero() : new BABYLON.Vector3( 40.0, 10.0, 40.0 ) ),\n                    2.5,\n                    new BABYLON.PowerEase(),\n                    () => { bz.Debug.camera.log( 'Cam reached target' ) }\n                );\n                this.camTarget = !this.camTarget;\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            // import mesh model\n            this.chairSingle = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.OFFICE_CHAIR_2,\n                new BABYLON.Vector3( 5.0, 0.0, 5.0 ),\n                bz.Physic.SOLID_WOOD,\n                bz.ModelCompoundType.NONE\n            );\n            this.chairMulti = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.OFFICE_CHAIR_1,\n                new BABYLON.Vector3( 20.0, 3.75, 20.0 ),\n                bz.Physic.CONCRETE,\n                bz.ModelCompoundType.COMPOUND_SHOT_OFF_DISABLED\n            );\n            this.chairMultiPhysics = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.OFFICE_CHAIR_3,\n                new BABYLON.Vector3( 20.0, 4.0, 30.0 ),\n                null,\n                bz.ModelCompoundType.COMPOUND_SHOT_OFF_ENABLED\n            );\n            this.compoundSpheres = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.DOUBLE_SPHERE_1,\n                new BABYLON.Vector3( 60.0, 10.0, 50.0 ),\n                null,\n                bz.ModelCompoundType.COMPOUND_SHOT_OFF_DISABLED\n            );\n\n            const tv:BABYLON.Mesh = bz.MeshFactory.createBox\n            (\n                this.scene,\n                new BABYLON.Vector3( 3.0, 2.5, 25.0 ),\n                bz.MeshPivotAnchor.LOWEST_XYZ,\n                new BABYLON.Vector3( ( 4 * 0.560 ), ( 4 * 0.320 ), bz.MeshFactory.FACE_DEPTH ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.Texture.VIDEO_TEST,\n                null,\n                // bz.Physic.STATIC,\n                bz.Physic.NONE,\n                1.0,\n                this.ambientColor\n            );\n\n            return [\n\n                // black sphere UNCOMPOUND from imported model ( uses physic impostor from 3dsmax file! )\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.DOUBLE_SPHERE_1,\n                        new BABYLON.Vector3( 30.0, 10.0, 50.0 ),\n                        null,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                // black sphere COMPOUND from imported model ( uses physic impostor from 3dsmax file! )\n                new bz.Wall\n                (\n                    this,\n                    this.compoundSpheres\n                ),\n\n                // crate\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.CRATE,\n                        new BABYLON.Vector3( 10.0, 30.0, 5.0 ),\n                        bz.Physic.LIGHT_WOOD,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                // 3ds chair single-meshed\n                new bz.Wall\n                (\n                    this,\n                    this.chairSingle\n                ),\n\n                // tv\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            tv,\n                        ]\n                    )\n                ),\n\n                // 3ds chair - multi-meshes with same physics\n                new bz.Wall\n                (\n                    this,\n                    this.chairMulti,\n                    5\n                ),\n\n                // 3ds chair - multi-meshes with specific physics\n                new bz.Wall\n                (\n                    this,\n                    this.chairMultiPhysics,\n                    5\n                ),\n/*\n                // red sphere from own model\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            bz.MeshFactory.createSphere\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 10.0, 0.0, 10.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                3.0,\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                null,\n                                bz.SettingColor.COLOR_RGB_RED,\n                                bz.Physic.SOLID_WOOD,\n                                1.0,\n                                bz.SettingColor.COLOR_RGB_RED // this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n*/\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -2.5, 0.0  ),\n                                bz.MeshPivotAnchor.NONE,\n                                new BABYLON.Vector3( 200.0, 2.5, 100.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // test wall green\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 3.0, 0.0, 1.0  ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 15.0, 5.0, 0.5 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n/*\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // test wall (flying obstacle)\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 20.0, 3.0, 2.0  ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 15.0, 5.0, 5.0 ),\n                                new BABYLON.Vector3( 0.0, 270.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n*/\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static elevated ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 40.0, bz.MeshFactory.FACE_DEPTH,  40.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 160.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n                                // bz.Physic.STATIC,\n                                bz.Physic.NONE,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [\n\n                new bz.Item\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.SHELLS,\n                        new BABYLON.Vector3( 20.0, 0.0, 20.0 ),\n                        null,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                new bz.Item\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.SHELLS,\n                        new BABYLON.Vector3( 25.0, 0.0, 20.0 ),\n                        null,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                new bz.Item\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.SHELLS,\n                        new BABYLON.Vector3( 30.0, 0.0, 20.0 ),\n                        null,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createSkyBoxCube( this.scene.getNativeScene(), bz.SkyBoxFile.STORM, 1.0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            // create and animate a sprite\n            const animatedTestSprite:bz.Sprite = new bz.Sprite\n            (\n                this.scene,\n                bz.SpriteFile.TEST,\n                new BABYLON.Vector3( 70.0, 0.0, 50.0  ),\n                10.0,\n                20.0,\n                bz.MeshPivotAnchor.CENTER_XZ_LOWEST_Y,\n                bz.SpriteCollidable.NO\n            );\n            animatedTestSprite.animate( 0, 43, true );\n\n            return [\n\n                animatedTestSprite,\n\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 0.0, 20.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XZ_LOWEST_Y,\n                    bz.SpriteCollidable.YES\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            // const lights:BABYLON.Light[] = [\n/*\n                // hemispheric light\n                bz.LightFactory.createHemispheric\n                (\n                    this.scene,\n                    new BABYLON.Vector3( 0.0, 1.0, 0.0 ),\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 0.1, 0.1, 0.1 ),\n                    new BABYLON.Color3( 0.0, 0.0, 0.0 )\n                ),\n\n                // directional light\n                bz.LightFactory.createDirectional\n                (\n                    this.scene,\n                    new BABYLON.Vector3( 0.5, -1.0, 0.0 ),\n                    new BABYLON.Vector3( 20.0, 20.0, 20.0 ),\n                    1.0,\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 1.0, 0.5, 0.0 ),\n                ),\n\n                // spot light\n                bz.LightFactory.createSpot\n                (\n                    this.scene,\n                    new BABYLON.Vector3( 15.0, 20.0, 15.0 ),\n                    new BABYLON.Vector3( 0.0, -1.0, 0.0 ),\n                    bz.MathUtil.degreesToRad( 30.0 ),\n                    2,\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 1.0, 1.0, 1.0 )\n                ),\n\n                // point light\n                bz.LightFactory.createPoint\n                (\n                    this.scene,\n                    new BABYLON.Vector3( 15.0, 3.0, 16.0 ),\n                    1.0,\n                    new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                    new BABYLON.Color3( 0.0, 0.0, 0.0 )\n                ),\n*/\n            // ];\n/*\n            lights[ 0 ].setEnabled( false );\n            lights[ 1 ].setEnabled( false );\n            lights[ 2 ].setEnabled( false );\n            lights[ 3 ].setEnabled( true  );\n*/\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            // const shadowGenerators:BABYLON.ShadowGenerator[] = [\n/*\n                new BABYLON.ShadowGenerator( 2048, ( this.lights[ 2 ] as BABYLON.SpotLight ) ),\n*/\n            // ];\n/*\n            shadowGenerators[ 0 ].useExponentialShadowMap = true;\n            shadowGenerators[ 0 ].usePoissonSampling      = true;\n*/\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n/*\n            // set shadows for all movables\n            for ( const movable of this.movables )\n            {\n                // set shadows for all meshes\n                for ( const mesh of movable.getMeshes() )\n                {\n                    this.shadowGenerators[ 0 ].getShadowMap().renderList.push( mesh );\n                }\n            }\n\n            // set shadows for all walls\n            for ( const wall of this.walls )\n            {\n                // set shadows for all meshes\n                for ( const mesh of wall.getMeshes() )\n                {\n                    this.shadowGenerators[ 0 ].getShadowMap().renderList.push( mesh );\n                }\n            }\n*/\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, true );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the 'spaceship' level.\n    *******************************************************************************************************************/\n    export class SpaceshipScene extends bz.Stage\n    {\n        /** ************************************************************************************************************\n        *   Creates a new spaceship scene.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_WHITE,\n                bz.SettingColor.COLOR_RGBA_WHITE_OPAQUE,\n                bz.CameraType.FOLLOW\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return new bz.PlayerSpaceship\n            (\n                this,\n                this.scene,\n                new BABYLON.Vector3( 0.0, 10.0, 25.0 ),\n                90.0,\n                this.ambientColor\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 10.0,   10.0, 10.0 ),\n                new BABYLON.Vector3( 20.0,   5.0,  20.0 ),\n                new BABYLON.Vector3( -500.0, 0.0,  50.0 ),\n\n                new BABYLON.Vector3( 0.0,    0.0,  0.0  ),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getFirstPersonCameraTargetMesh()\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n                // add GUI message to queue\n                this.gui.addGuiMessage( 'Test in SpaceshipScene level' );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            return [\n/*\n                // crate\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.CRATE,\n                        new BABYLON.Vector3( 10.0, 5.0, 5.0 ),\n                        bz.Physic.LIGHT_WOOD,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n*/\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.NONE,\n                                new BABYLON.Vector3( 5000.0, bz.MeshFactory.FACE_DEPTH, 50.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n/*\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static glass wall\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 15.0, 5.0, 0.5 ),\n                                new BABYLON.Vector3( 0.0, 10.0, 0.0 ),\n                                bz.Texture.WALL_GLASS,\n                                null,\n                                bz.Physic.STATIC,\n                                0.5,\n                                this.ambientColor\n                            ),\n\n                            // box primitive from MeshFactory\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.0, 5.0, 5.0 ),\n\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n\n                                new BABYLON.Vector3( 1.5, 1.5, 1.5 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n\n                                bz.Physic.SOLID_WOOD,\n                                // bz.Physic.NONE,\n\n                                0.5,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n*/\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createSkyBoxCube( this.scene.getNativeScene(), bz.SkyBoxFile.BLUE_SKY, 1.0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            // if ( false ) this.scene.enableFog( new BABYLON.Color3( 1.0, 1.0, 1.0 ), 0.01 );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, true );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n    }\n","\n    import * as bz  from '../../..';\n    import * as bjs from 'babylonjs'\n\n    /** ****************************************************************************************************************\n    *   Specifies the 'test' level that tries out all level components.\n    *******************************************************************************************************************/\n    export class TestLevel extends bz.Stage\n    {\n        /** ************************************************************************************************************\n        *   Creates a new test level.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                new bjs.Color3( 0.1, 0.1, 0.1 ),\n                bz.SettingColor.COLOR_RGBA_BLACK_OPAQUE,\n                bz.CameraType.FIRST_PERSON\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return new bz.PlayerHuman\n            (\n                this,\n                this.scene,\n                new BABYLON.Vector3( 15.0, 0.0, 15.0 ),\n                225.0,\n                this.ambientColor\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 20.0, 5.0, 20.0 ),\n                new BABYLON.Vector3( 20.0, 5.0, 20.0 ),\n                new BABYLON.Vector3( 0.0,  0.0, 0.0  ),\n\n                new BABYLON.Vector3( 0.0,  0.0, 0.0  ),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getFirstPersonCameraTargetMesh()\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            return [\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.NONE,\n                                new BABYLON.Vector3( 40.0, bz.MeshFactory.FACE_DEPTH,  40.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static elevated ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 40.0, bz.MeshFactory.FACE_DEPTH,  40.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 160.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // tree - standing (crossed)\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.0,  0.0, 20.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 3.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0   ),\n                                bz.Texture.WALL_TREE,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 6.5,  0.0, 18.5   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 3.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, 270.0, 0.0   ),\n                                bz.Texture.WALL_TREE,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // plane - amiga at world origin\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0,  0.0, 0.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 2.0,  4.0, bz.MeshFactory.FACE_DEPTH   ),\n                                new BABYLON.Vector3( 0.0, 45.0, 0.0   ),\n                                bz.Texture.WALL_AMIGA,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // plane - amiga plane 45° - BACKSIDE\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 15.0, 0.0, 6.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 7.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, -45.0, 0.0 ),\n                                bz.Texture.WALL_AMIGA,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // plane - amiga plane 45° - FRONTSIDE\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 21.0, 0.0, 30.0 - bz.MeshFactory.FACE_DEPTH ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 7.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, 65.0, 0.0 ),\n                                bz.Texture.WALL_AMIGA,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // plane - amiga 180° - FRONTSIDE\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 8.0, 0.0, 6.0 - bz.MeshFactory.FACE_DEPTH ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 7.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // plane - amiga 180° - BACKSIDE\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 8.0, 0.0, 6.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 7.0, 7.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // box - amiga light frontside\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 20.0, 0.0, 11.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 7.0, 7.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_AMIGA,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // box - amiga light backside\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 10.0, 0.0, 18.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 7.0, 7.0 ),\n                                new BABYLON.Vector3( 0.0, 180.0, 0.0 ),\n                                bz.Texture.WALL_AMIGA,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // movable glass pane\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 2.0,  0.0, 15.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 2.0, 3.0, bz.MeshFactory.FACE_DEPTH ),\n                                new BABYLON.Vector3( 0.0,  135.0, 0.0   ),\n                                bz.Texture.WALL_GLASS,\n                                null,\n                                bz.Physic.STATIC,\n                                0.5,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // triangle\n                            bz.MeshFactory.createPolygon\n                            (\n                                this.scene,\n                                [\n                                    new BABYLON.Vector3( 0.0,  0.0,  13.0    ),\n                                    new BABYLON.Vector3( 10.0, 0.0,  13.0    ),\n                                    new BABYLON.Vector3( 10.0, 0.0,  0.0     ),\n                                ],\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 270.0, 0.0, 0.0 ),\n                                bz.SettingColor.COLOR_RGB_RED,\n                                bz.Physic.STATIC,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // movable crate - small\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 12.0, 0.0, 12.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 1.0, 1.0 ),\n                                new BABYLON.Vector3( 0.0, 45.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // movable crate - big\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( -1.0,  3.0, 5.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 2.0, 2.0, 2.0 ),\n                                new BABYLON.Vector3( 0.0, 30.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // movable crate - different UVs for all sides\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 24.0,  0.0, 12.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 2.0, 3.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // movable glass quader\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 2.0,  0.0, 2.0   ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 2.0, 3.0    ),\n                                new BABYLON.Vector3( 0.0,  45.0, 0.0   ),\n                                bz.Texture.WALL_GLASS,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                0.5,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // small crate - density crafting\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.5, 0.0, 22.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 1.0, 1.0, 1.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // medium crate - density crafting\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.5, 0.0, 25.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 2.0, 2.0, 2.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // large crate - density crafting\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.5, 0.0, 30.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                new BABYLON.Vector3( 3.0, 3.0, 3.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_WOOD,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // sphere\n                            bz.MeshFactory.createSphere\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 10.5, 0.0, 30.0 ),\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n                                3.0,\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.LIGHT_WOOD,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.OFFICE_CHAIR_1,\n                        new BABYLON.Vector3( -10.0, 20.0, 0.0 ),\n                        bz.Physic.SOLID_WOOD,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.OFFICE_CHAIR_1,\n                        new BABYLON.Vector3( -10.0, 20.0, 10.0 ),\n                        bz.Physic.SOLID_WOOD,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    bz.MeshFactory.createImportedModel\n                    (\n                        this.scene,\n                        bz.ModelFile.OFFICE_CHAIR_1,\n                        new BABYLON.Vector3( -10.0, 20.0, 15.0 ),\n                        bz.Physic.SOLID_WOOD,\n                        bz.ModelCompoundType.NONE\n                    )\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createSkyBoxCube( this.scene.getNativeScene(), bz.SkyBoxFile.DARK_SKY, 0.15 );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [\n\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 5.0, -35.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XYZ,\n                    bz.SpriteCollidable.NO\n                ),\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 5.0, -20.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XYZ,\n                    bz.SpriteCollidable.NO\n                ),\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 5.0, -5.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XYZ,\n                    bz.SpriteCollidable.NO\n                ),\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 5.0, 10.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XYZ,\n                    bz.SpriteCollidable.NO\n                ),\n                new bz.Sprite\n                (\n                    this.scene,\n                    bz.SpriteFile.TREE,\n                    new BABYLON.Vector3( 45.0, 5.0, -25.0  ),\n                    10.0,\n                    20.0,\n                    bz.MeshPivotAnchor.CENTER_XYZ,\n                    bz.SpriteCollidable.NO\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            // const lights:BABYLON.Light[] = [\n\n            return [\n\n                // hemispheric light\n                bz.LightFactory.createHemispheric\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 0.0, 1.0, 0.0 ),\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 0.1, 0.1, 0.1 ),\n                    new BABYLON.Color3( 0.0, 0.0, 0.0 ),\n                    false\n                ),\n\n                // directional light\n                bz.LightFactory.createDirectional\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 0.5, -1.0, 0.0 ),\n                    new BABYLON.Vector3( 20.0, 20.0, 20.0 ),\n                    1.0,\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 1.0, 0.5, 0.0 ),\n                    false\n                ),\n\n                // spot light\n                bz.LightFactory.createSpot\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 15.0, 20.0, 15.0 ),\n                    new BABYLON.Vector3( 0.0, -1.0, 0.0 ),\n                    30.0,\n                    2,\n                    new BABYLON.Color3( 0.5, 0.5, 0.5 ),\n                    new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                    50.0,\n                    false\n                ),\n\n                // point light\n                bz.LightFactory.createPoint\n                (\n                    this.scene.getNativeScene(),\n                    new BABYLON.Vector3( 15.0, 3.0, 16.0 ),\n                    new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                    new BABYLON.Color3( 0.0, 0.0, 0.0 ),\n                    50.0,\n                    1.0,\n                    true\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            const shadowGenerators:BABYLON.ShadowGenerator[] = [\n                new BABYLON.ShadowGenerator( 2048, ( this.lights[ 2 ] as BABYLON.SpotLight ) ),\n            ];\n\n            shadowGenerators[ 0 ].useExponentialShadowMap = true;\n            shadowGenerators[ 0 ].usePoissonSampling      = true;\n\n            return shadowGenerators;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes that shall cast a shadow.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n            // set shadows for all walls\n            for ( const wall of this.walls )\n            {\n                wall.getModel().applyShadowGenerator( this.shadowGenerators[ 0 ] );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, true );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   Specifies the 'site' level.\n    *******************************************************************************************************************/\n    export class TestSite extends bz.Stage\n    {\n        /** A reference to the test crate. */\n        private testCrate :bz.Wall = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new test office.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_WHITE,\n                bz.SettingColor.COLOR_RGBA_WHITE_OPAQUE,\n                bz.CameraType.FIRST_PERSON\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return new bz.PlayerHuman\n            (\n                this,\n                this.scene,\n                new BABYLON.Vector3( 8.0, 0.0, 13.0 ),\n                195.0,\n                this.ambientColor\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 10.0, 10.0, 10.0 ),\n                new BABYLON.Vector3( 20.0, 5.0,  20.0 ),\n                new BABYLON.Vector3( 0.0,  0.0,  0.0  ),\n\n                new BABYLON.Vector3( 0.0,  0.0,  0.0  ),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getThirdPersonCameraTargetMesh(),\n                this.player.getFirstPersonCameraTargetMesh()\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n                // add GUI message to queue\n                this.gui.addGuiMessage( 'Test in Site level' );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            this.testCrate = new bz.Wall\n            (\n                this,\n                bz.MeshFactory.createImportedModel\n                (\n                    this.scene,\n                    bz.ModelFile.CRATE,\n                    new BABYLON.Vector3( 10.0, 5.0, 5.0 ),\n                    bz.Physic.LIGHT_WOOD,\n                    bz.ModelCompoundType.NONE\n                )\n            );\n\n            return [\n\n                // crate\n                this.testCrate,\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static ground\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 0.0, -bz.MeshFactory.FACE_DEPTH, 0.0  ),\n                                bz.MeshPivotAnchor.NONE,\n                                new BABYLON.Vector3( 200.0, bz.MeshFactory.FACE_DEPTH, 100.0 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_TEST,\n                                null,\n                                bz.Physic.STATIC,\n                                1.0,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n\n                new bz.Wall\n                (\n                    this,\n                    new bz.Model\n                    (\n                        [\n                            // static glass wall\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n//                                new BABYLON.Vector3( 5.0, bz.MeshFactory.FACE_DEPTH, 1.0  ),\n                                new BABYLON.Vector3( 0.0, bz.MeshFactory.FACE_DEPTH, 0.0  ),\n\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n//                                bz.MeshPivotAnchor.NONE,\n\n                                new BABYLON.Vector3( 15.0, 5.0, 0.5 ),\n                                new BABYLON.Vector3( 0.0, 10.0, 0.0 ),\n                                bz.Texture.WALL_GLASS,\n                                null,\n\n                                bz.Physic.STATIC,\n//                                bz.Physic.NONE,\n\n                                0.5,\n                                this.ambientColor\n                            ),\n\n                            // box primitive from MeshFactory\n                            bz.MeshFactory.createBox\n                            (\n                                this.scene,\n                                new BABYLON.Vector3( 5.0, 5.0, 5.0 ),\n\n                                bz.MeshPivotAnchor.LOWEST_XYZ,\n\n                                new BABYLON.Vector3( 1.5, 1.5, 1.5 ),\n                                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                                bz.Texture.WALL_GRASS,\n                                null,\n\n                                bz.Physic.SOLID_WOOD,\n                                // bz.Physic.NONE,\n\n                                0.5,\n                                this.ambientColor\n                            ),\n                        ]\n                    )\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createSkyBoxCube( this.scene.getNativeScene(), bz.SkyBoxFile.BLUE_SKY, 1.0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n\n            // this.scene.enableFog( new BABYLON.Color3( 101 / 256, 206 / 256, 143 / 256 ), 0.05 );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, true, false );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   The 'intro logo' stage offers an exploration of a 3D model that can be viewed from all angles.\n    *******************************************************************************************************************/\n    export class IntroLogo extends bz.Stage\n    {\n        /** Rotation speed in degrees per tick. */\n        private     static  readonly    ROTATION_SPEED          :number                     = 1.75;\n\n        /** Referenced imported logo. */\n        protected                       logo                    :bz.Model                   = null;\n        /** Referenced point light. */\n        private                         pointLight              :BABYLON.PointLight         = null;\n        /** Current logo rotation Y. */\n        private                         rotY                    :number                     = 0.0;\n        /** Notifies current frame. */\n        private                         currentTick             :number                     = 0;\n\n        /** ************************************************************************************************************\n        *   Creates a new product viewer stage.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_BLACK,\n                bz.SettingColor.COLOR_RGBA_BLACK_OPAQUE,\n                bz.CameraType.STATIONARY\n            );\n\n            this.rotY = 270.0;\n        }\n\n        /** ************************************************************************************************************\n        *   Renders all stage concernings for one tick of the game loop.\n        ***************************************************************************************************************/\n        public render() : void\n        {\n            // invoke parent method\n            super.render();\n\n            // rotate logo\n            this.logo.setAbsoluteRotationXYZ\n            (\n                270.0,\n                this.rotY,\n                90.0\n            );\n\n            // increase logo rotation\n            this.rotY += IntroLogo.ROTATION_SPEED;\n\n            // alter the light intensity\n            ++this.currentTick;\n/*\n            // DEBUG bling bling ..\n            if ( true )\n            {\n                this.pointLight.range = 100.0;\n\n                return;\n            }\n*/\n            if ( this.currentTick < 100 )\n            {\n                this.pointLight.range += 1.0;\n                if ( this.pointLight.range > 50.0 )\n                {\n                    this.pointLight.range = 50.0;\n                }\n            }\n            else if ( this.currentTick < 150 )\n            {\n                this.pointLight.range += 1.5;\n                if ( this.pointLight.range > 100.0 )\n                {\n                    this.pointLight.range = 100.0;\n                }\n            }\n            else if ( this.currentTick < 360 )\n            {\n                // do nothing but wait\n            }\n            else\n            {\n                this.pointLight.range -= 1.5;\n                if ( this.pointLight.range < 0.0 ) {\n                    this.pointLight.range = 0.0;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n                new BABYLON.Vector3( 150.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0,   0.0, 0.0  ),\n                null,\n                null\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            // import logo\n            this.logo = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.MF_LOGO,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.Physic.NONE,\n                bz.ModelCompoundType.NONE\n            );\n/*\n            // manipulate material colors for logo\n            const material:BABYLON.StandardMaterial = this.logo.getMesh( 0 ).material as BABYLON.StandardMaterial;\n            material.specularColor = new BABYLON.Color3( 0.949, 0.713, 0.498 );\n*/\n            return [\n                new bz.Wall\n                (\n                    this,\n                    this.logo\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            this.pointLight = bz.LightFactory.createPoint\n            (\n                this.scene.getNativeScene(),\n                new BABYLON.Vector3( 50.0, 0.0, 0.0 ),\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                0.0,\n                2.5,\n                true\n            );\n\n            return [ this.pointLight ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, false );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n    }\n","\n    import * as bz from '../../..';\n\n    /** ****************************************************************************************************************\n    *   The 'room viewer' stage offers an 3D view in an virtual room being textured by a spherical texture.\n    *******************************************************************************************************************/\n    export class RoomViewer extends bz.Stage\n    {\n        /** ************************************************************************************************************\n        *   Creates a new room viewer stage.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_BLACK,\n                bz.SettingColor.COLOR_RGBA_BLACK_OPAQUE,\n                bz.CameraType.FREE_CAMERA\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 1.0, 0.0, 0.0 ),\n\n                new BABYLON.Vector3( 1.0, 0.0, 0.0 ),\n                null,\n                null,\n                null\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return bz.MeshFactory.createSkyBoxSphere( this.scene.getNativeScene(), bz.SkyBoxFile.DINING_ROOM, 1.0 );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, true );\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIGame = new bz.GUIGame( this.scene.getNativeScene() );\n            gui.init();\n\n            return gui;\n        }\n    }\n","\n    import * as bz      from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   The 'human body partitions' stage offers an interactive body model where\n    *   specific partitions can be selected. Various information shall be displayed after picking one body partition.\n    *******************************************************************************************************************/\n    export class HumanBodyPartitions extends bz.Stage\n    {\n        /** The overlay color for selected meshes. */\n        private     static  readonly    MESH_HIGHLIGHT_COLOR    :BABYLON.Color3             = (\n            bz.SettingEngine.BRANDING.getPrimalColorRgb()\n        );\n\n        /** The current highlighted mesh. */\n        private                         currentSelectedMesh     :BABYLON.AbstractMesh       = null;\n        /** Referenced imported helmet. */\n        private                         model                   :bz.Model                   = null;\n        /** Referenced product presentation light. */\n        private                         directionalLight        :BABYLON.DirectionalLight   = null;\n\n        /** ************************************************************************************************************\n        *   Creates a new product viewer stage.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_GREY_HALF,\n                new BABYLON.Color4( 0.75, 0.75, 0.75, 1.0 ),\n                bz.CameraType.ARC_ROTATE\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                null,\n                null\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            // import mesh model\n            this.model = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.HUMAN_BODY,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.Physic.NONE,\n                bz.ModelCompoundType.NONE\n            );\n\n            bz.Debug.hbp.log( 'Imported human model with [' + String( this.model.getMeshCount() ) + '] meshes' );\n\n            return [\n\n                new bz.Wall\n                (\n                    this,\n                    this.model\n                ),\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            // initial rotate skybox and disable it being picked\n            const skybox:BABYLON.Mesh = bz.MeshFactory.createSkyBoxCube\n            (\n                this.scene.getNativeScene(),\n                bz.SkyBoxFile.BLUE_SKY,\n                1.0\n            );\n            bz.MeshManipulation.setAbsoluteRotationXYZ( skybox, 0.0, 90.0, 0.0 );\n            skybox.isPickable = false;\n\n            return skybox;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            this.directionalLight = bz.LightFactory.createDirectional\n            (\n                this.scene.getNativeScene(),\n                new BABYLON.Vector3( 0.0, 0.0, 1.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                1.0,\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                true\n            );\n\n            // stick light to arc rotate camera\n            this.cameraSystem.setLightToArcRotationCamera( this.directionalLight );\n\n            return [ this.directionalLight ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, true, false );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIHumanBodyPartitions = new bz.GUIHumanBodyPartitions( this.scene.getNativeScene(), this );\n            gui.init();\n\n            return gui;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n            // position arc rotate camera\n            this.cameraSystem.getArcRotateCamera().alpha = bz.MathUtil.degreesToRad( -60.0 );\n            this.cameraSystem.getArcRotateCamera().beta  = bz.MathUtil.degreesToRad( 90.0  );\n\n            // link arc rotate camera zoom to slider\n            this.cameraSystem.getArcRotateCamera().onViewMatrixChangedObservable.add(\n                () :void => {\n\n                    ( this.gui as bz.GUIHumanBodyPartitions ).cameraZoomSlider.value =\n                    (\n//                        400.0 + 100.0 - Math.floor( this.getCameraSystem().arcRotateCamera.radius )\n                        400.0 + 100.0 - this.getCameraSystem().getArcRotateCamera().radius\n                    );\n                }\n            );\n\n            // enable auto rotation for arc rotate camera\n            this.cameraSystem.getArcRotateCamera().useAutoRotationBehavior = true;\n\n            // exceptional own handling for pointer down ..\n            this.getScene().onPointerDown = ( evt:PointerEvent, pickResult:BABYLON.PickingInfo ) :void => {\n                this.onPointerDown( evt, pickResult );\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the pointer is down on this stage.\n        *\n        *   @param evt        The pointer event being propagated by the system.\n        *   @param pickResult More information about the location of the 3D space where the pointer is down.\n        ***************************************************************************************************************/\n        private onPointerDown( evt:PointerEvent, pickResult:BABYLON.PickingInfo ) : void\n        {\n            // check if the pointer hit\n            // if ( pickResult.hit )\n            {\n                // check if the pointer picked a mesh\n                if ( pickResult.pickedMesh )\n                {\n                    bz.Debug.hbp.log( 'Picked a mesh' );\n                    this.toggleHighlight( pickResult.pickedMesh );\n                }\n                else\n                {\n                    bz.Debug.hbp.log( 'Picked no mesh' );\n                    this.toggleHighlight( null );\n                }\n            }\n        };\n\n        /** ************************************************************************************************************\n        *   Toggles the highlight for this mesh.\n        *\n        *   @param meshToHighlight The mesh to toggle highlighting for.\n        ***************************************************************************************************************/\n        private toggleHighlight( meshToHighlight:BABYLON.AbstractMesh ) : void\n        {\n            // disable current selected mesh\n            if ( this.currentSelectedMesh !== null )\n            {\n                // disable highlighting\n                const newMaterial:BABYLON.StandardMaterial = (\n                    this.currentSelectedMesh.material as BABYLON.StandardMaterial\n                ).clone( bz.MaterialSystem.createNextMaterialId() );\n                newMaterial.diffuseColor  = bz.SettingColor.COLOR_RGB_WHITE;\n                newMaterial.specularColor = bz.SettingColor.COLOR_RGB_BLACK;\n                this.currentSelectedMesh.material = newMaterial;\n            }\n\n            // check if no mesh has been selected or if the current mesh has been selected\n            if ( meshToHighlight === null || meshToHighlight === this.currentSelectedMesh )\n            {\n                // clear current selected mesh and break\n                this.highlightMesh( null );\n\n                return;\n            }\n\n            // browse all meshes\n            for ( let i:number = 0; i < this.model.getMeshCount(); ++i )\n            {\n                // pick browsed mesh\n                const mesh:BABYLON.AbstractMesh = this.model.getMesh( i );\n\n                // check if this mesh is currently selected\n                if ( mesh === meshToHighlight )\n                {\n                    // highlight this mesh\n                    const newMaterial:BABYLON.StandardMaterial = (\n                        mesh.material as BABYLON.StandardMaterial\n                    ).clone( bz.MaterialSystem.createNextMaterialId() );\n\n                    newMaterial.diffuseColor  = HumanBodyPartitions.MESH_HIGHLIGHT_COLOR;\n                    newMaterial.specularColor = HumanBodyPartitions.MESH_HIGHLIGHT_COLOR;\n                    mesh.material = newMaterial;\n\n                    // assign current selected mesh\n                    this.highlightMesh( mesh );\n\n                    return;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Highlights the selected mesh and shows, hides or changes the Body Description Panel.\n        *\n        *   @param mesh The mesh to show or <code>null</code> if no mesh has been selected.\n        ***************************************************************************************************************/\n        private highlightMesh( mesh:BABYLON.AbstractMesh ) : void\n        {\n            this.currentSelectedMesh = mesh;\n\n            if ( this.currentSelectedMesh === null )\n            {\n                ( this.gui as bz.GUIHumanBodyPartitions ).descriptionGUI.setBodyPartDescription( false, null );\n            }\n            else\n            {\n                ( this.gui as bz.GUIHumanBodyPartitions ).descriptionGUI.setBodyPartDescription( true, mesh.name );\n            }\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   All possible animation states concerning the helmet.\n    *******************************************************************************************************************/\n    export enum HelmetState\n    {\n        /** The Helmet is closed and no animation is running. */\n        CLOSED,\n        /** The Helmet is opening and an animation is running. */\n        OPENING,\n        /** The Helmet is open and no animation is running. */\n        OPEN,\n        /** The Helmet is closing and an animation is running. */\n        CLOSING,\n    }\n","\n    import * as bz from '../../../..';\n\n    /** ****************************************************************************************************************\n    *   The 'product viewer' stage offers an exploration of a 3D model that can be viewed from all angles.\n    *   Aditionally, predefined animations of the product can be triggered.\n    *******************************************************************************************************************/\n    export class ProductConfigurator extends bz.Stage\n    {\n        /** Referenced imported helmet. */\n        private                         model                   :bz.Model                   = null;\n        /** Referenced visir of the helmet. */\n        private                         visor                   :BABYLON.AbstractMesh       = null;\n        /** Referenced helmet of the helmet. */\n        private                         helmet                  :BABYLON.AbstractMesh       = null;\n\n        /** Referenced product presentation light. */\n        private                         directionalLight        :BABYLON.DirectionalLight   = null;\n        /** Flags if the helmet animation is currently running. */\n        private                         animationState          :bz.HelmetState             = bz.HelmetState.CLOSED;\n\n        /** Tests target camera animation. */\n        private     readonly            camTarget               :boolean                    = false;\n\n        /** ************************************************************************************************************\n        *   Creates a new product viewer stage.\n        *\n        *   @param scene  The scene reference.\n        *   @param canvas The canvas system this stage is displayed on.\n        ***************************************************************************************************************/\n        public constructor( scene:bz.Scene, canvas:bz.CanvasSystem )\n        {\n            super\n            (\n                scene,\n                canvas,\n\n                bz.SettingColor.COLOR_RGB_GREY_QUARTER,\n                new BABYLON.Color4( 0.95, 0.95, 0.95, 1.0 ),\n                bz.CameraType.ARC_ROTATE\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Changes the visir color.\n        *\n        *   @param color The color to set as the visor color.\n        ***************************************************************************************************************/\n        public requestVisorColorChange( color:BABYLON.Color3 ) : void\n        {\n            bz.Debug.pc3d.log( 'Change visor color' );\n\n            const visorMultiMaterial:BABYLON.MultiMaterial = this.visor.material as BABYLON.MultiMaterial;\n            const subMaterials:BABYLON.Material[] = visorMultiMaterial.subMaterials;\n\n            bz.Debug.pc3d.log( 'Sub-Materials of visor: [' + String( subMaterials.length ) + ']' );\n\n            // pick 1st submaterial\n            const visorMaterial:BABYLON.StandardMaterial = subMaterials[ 16 ] as BABYLON.StandardMaterial;\n\n            visorMaterial.diffuseColor  = color;\n        }\n\n        /** ************************************************************************************************************\n        *   Changes the helmet color.\n        *\n        *   @param color The color to set as the helmet color.\n        ***************************************************************************************************************/\n        public requestHelmetColorChange( color:BABYLON.Color3 ) : void\n        {\n            bz.Debug.pc3d.log( 'Change helmet color' );\n\n            const helmetMultiMaterial:BABYLON.MultiMaterial = this.helmet.material as BABYLON.MultiMaterial;\n            const subMaterials:BABYLON.Material[] = helmetMultiMaterial.subMaterials;\n\n            bz.Debug.pc3d.log( 'Sub-Materials of helmet : [' + String( subMaterials.length ) + ']' );\n\n            // pick affected submaterials\n            const stripeMaterial :BABYLON.StandardMaterial = subMaterials[ 0 ] as BABYLON.StandardMaterial;\n            const frontMaterial  :BABYLON.StandardMaterial = subMaterials[ 1 ] as BABYLON.StandardMaterial;\n            const helmetMaterial :BABYLON.StandardMaterial = subMaterials[ 8 ] as BABYLON.StandardMaterial;\n\n            stripeMaterial.diffuseColor = color;\n            frontMaterial.diffuseColor  = color;\n            helmetMaterial.diffuseColor = color;\n        }\n\n        /** ************************************************************************************************************\n        *   Requests a toggle of the animation phase for the visor.\n        *   May not be performed if an animation is currently running.\n        ***************************************************************************************************************/\n        public requestVisorAnimationToggle() : void\n        {\n            switch ( this.animationState )\n            {\n                case bz.HelmetState.CLOSED:\n                {\n                    this.animationState = bz.HelmetState.OPENING;\n                    bz.GUIFactory.setVisorToggleButtonText\n                    (\n                        ( this.gui as bz.GUIProductConfigurator ).visorToggleButton,\n                        'Close Visor'\n                    );\n\n                    bz.MeshManipulation.performAnimation\n                    (\n                        this.scene.getNativeScene(),\n                        this.visor,\n                        0,\n                        20,\n                        false,\n                        () => {\n\n                            this.animationState = bz.HelmetState.OPEN;\n\n                            bz.MeshManipulation.performAnimation\n                            (\n                                this.scene.getNativeScene(),\n                                this.visor,\n                                20,\n                                21,\n                                true,\n                                () => {}\n                            );\n                        }\n                    );\n                    break;\n                }\n\n                case bz.HelmetState.OPEN:\n                {\n                    this.animationState = bz.HelmetState.CLOSING;\n                    bz.GUIFactory.setVisorToggleButtonText\n                    (\n                        ( this.gui as bz.GUIProductConfigurator ).visorToggleButton,\n                        'Open Visor'\n                    );\n\n                    bz.MeshManipulation.performAnimation\n                    (\n                        this.scene.getNativeScene(),\n                        this.visor,\n                        20,\n                        0,\n                        false,\n                        () => {\n                            this.animationState = bz.HelmetState.CLOSED;\n                        }\n                    );\n                    break;\n                }\n\n                case bz.HelmetState.OPENING:\n                case bz.HelmetState.CLOSING:\n                {\n                    // do nothing if an animation is currently running.\n                    break;\n                }\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the player for this stage.\n        *\n        *   @return The player instance for this stage.\n        ***************************************************************************************************************/\n        protected createPlayer() : bz.Player\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the camera system that manages all cameras that appear in this level.\n        *\n        *   @return The camera system for this stage.\n        ***************************************************************************************************************/\n        protected createCameraSystem() : bz.CameraSystem\n        {\n            return new bz.CameraSystem\n            (\n                this.scene.getNativeScene(),\n                this.canvas.getNativeCanvas(),\n\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n                new BABYLON.Vector3( 250.0, 0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n\n                new BABYLON.Vector3( 0.0,   0.0, 0.0 ),\n                new BABYLON.Vector3( 0.0,   0.0, 0.0  ),\n                null,\n                null\n            );\n        }\n\n        /** ************************************************************************************************************\n        *   Handles level specific keys.\n        *\n        *   @param keySystem The key system to use for key determination.\n        ***************************************************************************************************************/\n        protected handleLevelKeys( keySystem:bz.KeySystem ) : void\n        {\n            if ( keySystem.isPressed( bz.KeyCodes.KEY_ENTER ) )\n            {\n                keySystem.setNeedsRelease( bz.KeyCodes.KEY_ENTER );\n\n                this.gui.addGuiMessage( 'toggle visor [' + bz.StringUtil.getDateTimeString() + ']' );\n\n                this.requestVisorAnimationToggle();\n/*\n                // test camera animation\n                bz.CameraSystem.animateCameraTarget\n                (\n                    this.getCameraSystem().getArcRotateCamera(),\n                    ( this.camTarget ? BABYLON.Vector3.Zero() : new BABYLON.Vector3( 100.0, 1.0, 100.0 ) )\n                );\n                this.camTarget = !this.camTarget;\n*/\n            }\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all walls this stage consists of.\n        *\n        *   @return All walls of this stage.\n        ***************************************************************************************************************/\n        protected createWalls() : bz.Wall[]\n        {\n            // import mesh model\n            this.model = bz.MeshFactory.createImportedModel\n            (\n                this.scene,\n                bz.ModelFile.MOTORCYCLE_HELMET,\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                bz.Physic.NONE,\n                bz.ModelCompoundType.NONE\n            );\n\n            // reference single meshes\n            this.helmet = this.model.getMesh( 0 );\n            this.visor  = this.model.getMesh( 1 );\n\n            return [\n\n                new bz.Wall\n                (\n                    this,\n                    this.model\n                ),\n\n            ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all items this stage consists of.\n        *\n        *   @return All items of this stage.\n        ***************************************************************************************************************/\n        protected createItems() : bz.Item[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates and returns all bots this stage consists of.\n        *\n        *   @return All bots of this stage.\n        ***************************************************************************************************************/\n        protected createBots() : bz.Bot[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the skybox.\n        *\n        *   @return The created skybox for this stage.\n        ***************************************************************************************************************/\n        protected createSkybox() : BABYLON.Mesh\n        {\n            return null;\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all sprites that appear in the stage.\n        *\n        *   @return All sprites that appear in this stage.\n        ***************************************************************************************************************/\n        protected createSprites() : bz.Sprite[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all lights that appear in this level.\n        *\n        *   @return All lights that appear in this stage.\n        ***************************************************************************************************************/\n        protected createLights() : BABYLON.Light[]\n        {\n            this.directionalLight = bz.LightFactory.createDirectional\n            (\n                this.scene.getNativeScene(),\n                new BABYLON.Vector3( 0.0, 0.0, 1.0 ),\n                new BABYLON.Vector3( 0.0, 0.0, 0.0 ),\n                1.0,\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                new BABYLON.Color3( 1.0, 1.0, 1.0 ),\n                true\n            );\n\n            // stick light to arc rotate camera\n            this.cameraSystem.setLightToArcRotationCamera( this.directionalLight );\n\n            return [ this.directionalLight ];\n        }\n\n        /** ************************************************************************************************************\n        *   Creates all shadow generators that appear in this level.\n        *\n        *   @return All shadow generators that appear in this stage.\n        ***************************************************************************************************************/\n        protected createShadowGenerators() : BABYLON.ShadowGenerator[]\n        {\n            return [];\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupShadows() : void\n        {\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up shadows for all meshes.\n        ***************************************************************************************************************/\n        protected setupFog() : void\n        {\n            this.scene.disableFog();\n        }\n\n        /** ************************************************************************************************************\n        *   Sets up the pointer system.\n        ***************************************************************************************************************/\n        protected createPointerSystem() : bz.PointerSystem\n        {\n            return new bz.PointerSystem( this, this.canvas, false, false );\n        }\n\n        /** ************************************************************************************************************\n        *   Creates the GUI for this stage.\n        *\n        *   @return The created GUI.\n        ***************************************************************************************************************/\n        protected createGUI() : bz.GUI\n        {\n            const gui:bz.GUIProductConfigurator = new bz.GUIProductConfigurator( this.scene.getNativeScene(), this );\n            gui.init();\n\n            return gui;\n        }\n\n        /** ************************************************************************************************************\n        *   Being invoked when the stage setup is complete.\n        ***************************************************************************************************************/\n        protected onInitComplete() : void\n        {\n            // position arc rotate camera\n            this.cameraSystem.getArcRotateCamera().alpha = bz.MathUtil.degreesToRad( -110.0 );\n            this.cameraSystem.getArcRotateCamera().beta  = bz.MathUtil.degreesToRad( 70.0   );\n\n            // link arc rotate camera zoom to slider\n            this.cameraSystem.getArcRotateCamera().onViewMatrixChangedObservable.add(\n                () => {\n\n                    ( this.gui as bz.GUIProductConfigurator ).cameraZoomSlider.value =\n                    (\n//                        400.0 + 100.0 - Math.floor( this.getCameraSystem().arcRotateCamera.radius )\n                        400.0 + 100.0 - this.getCameraSystem().getArcRotateCamera().radius\n                    );\n                }\n            );\n\n            // enable auto rotation for arc rotate camera\n            this.cameraSystem.getArcRotateCamera().useAutoRotationBehavior = true;\n        }\n    }\n","\n    export * from './base/Debug';\n    export * from './base/Version';\n    export * from './base/Main';\n\n    export * from './game/engine/camera/CameraFactory';\n    export * from './game/engine/camera/CameraSystem';\n    export * from './game/engine/camera/CameraType';\n\n    export * from './game/stage/StageId';\n\n    export * from './base/branding/Branding';\n    export * from './base/branding/BrandingComputy';\n    export * from './base/branding/BrandingMayflower';\n\n    export * from './base/setting/SettingColor';\n    export * from './base/setting/SettingDebug';\n    export * from './base/setting/SettingEngine';\n    export * from './base/setting/SettingGUI';\n    export * from './base/setting/SettingPlayerHuman';\n    export * from './base/setting/SettingPlayerSpaceship';\n    export * from './base/setting/SettingResource';\n    export * from './base/setting/SettingStage';\n\n    export * from './game/engine/Engine';\n    export * from './game/engine/Game';\n\n    export * from './game/engine/ui/gui/fx/GUIFx';\n    export * from './game/engine/ui/gui/fx/GUIFxManager';\n    export * from './game/engine/ui/gui/fx/GUIFxType';\n\n    export * from './game/engine/ui/gui/menu/GUIAction';\n    export * from './game/engine/ui/gui/menu/GUIMenu';\n    export * from './game/engine/ui/gui/menu/GUIMenuItem';\n\n    export * from './game/engine/ui/gui/message/GUIMessage';\n    export * from './game/engine/ui/gui/message/GUIMessageManager';\n\n    export * from './game/engine/ui/gui/GUI';\n    export * from './game/engine/ui/gui/GUIFactory';\n    export * from './game/engine/ui/gui/GUIGame';\n    export * from './game/engine/ui/gui/GUIPause';\n    export * from './game/engine/ui/gui/GUIHumanBodyPartitions';\n    export * from './game/engine/ui/gui/GUIHumanPartitionDescription';\n    export * from './game/engine/ui/gui/GUIProductConfigurator';\n\n    export * from './game/engine/ui/CanvasSystem';\n    export * from './game/engine/ui/LightFactory';\n    export * from './game/engine/ui/LoadingScreen';\n\n    export * from './game/engine/shot/BulletHole';\n    export * from './game/engine/shot/HitPoint';\n    export * from './game/engine/shot/Shot';\n\n    export * from './game/engine/hid/KeyCodes';\n    export * from './game/engine/hid/KeySystem';\n    export * from './game/engine/hid/PointerSystem';\n\n    export * from './game/engine/scene/Scene';\n\n    export * from './game/engine/scene/material/MaterialSystem';\n    export * from './game/engine/scene/material/TextureHasAlpha';\n    export * from './game/engine/scene/material/TextureType';\n    export * from './game/engine/scene/material/TextureUV';\n\n    export * from './game/engine/scene/model/Model';\n    export * from './game/engine/scene/model/ModelCompoundType';\n    export * from './game/engine/scene/model/ModelSystem';\n\n    export * from './game/engine/scene/sound/SoundSystem';\n\n    export * from './game/engine/scene/sprite/Sprite';\n    export * from './game/engine/scene/sprite/SpriteCollidable';\n    export * from './game/engine/scene/sprite/SpriteSystem';\n\n    export * from './game/engine/mesh/MeshFactory';\n    export * from './game/engine/mesh/MeshManipulation';\n    export * from './game/engine/mesh/MeshPivotAnchor';\n\n    export * from './game/engine/physic/PhysicDensity';\n    export * from './game/engine/physic/PhysicFriction';\n    export * from './game/engine/physic/PhysicImpostorParams';\n    export * from './game/engine/physic/PhysicRestitution';\n    export * from './game/engine/physic/PhysicState';\n    export * from './game/engine/physic/Physic';\n\n    export * from './game/object/GameObject';\n    export * from './game/object/Bot';\n    export * from './game/object/Item';\n    export * from './game/object/Wall';\n\n    export * from './game/object/player/Player';\n    export * from './game/object/player/PlayerHuman';\n    export * from './game/object/player/PlayerSpaceship';\n\n    export * from './data/ModelFile';\n    export * from './data/SkyBoxFile';\n    export * from './data/SoundFile';\n    export * from './data/SpriteFile';\n    export * from './data/Texture';\n\n    export * from './util/HtmlUtil';\n    export * from './util/MathUtil';\n    export * from './util/StringUtil';\n\n    export * from './game/stage/Stage';\n\n    export * from './game/stage/level/Office';\n    export * from './game/stage/level/SpaceshipScene';\n    export * from './game/stage/level/TestLevel';\n    export * from './game/stage/level/TestSite';\n\n    export * from './game/stage/presentation/IntroLogo';\n    export * from './game/stage/presentation/RoomViewer';\n\n    export * from './game/stage/presentation/hbp/HumanBodyPartitions';\n\n    export * from './game/stage/presentation/pc3d/HelmetState';\n    export * from './game/stage/presentation/pc3d/ProductConfigurator';\n","\n    /** ****************************************************************************************************************\n    *   Offers functionality for the HTML wenpage.\n    *******************************************************************************************************************/\n    export class HtmlUtil\n    {\n        /** ************************************************************************************************************\n        *   Sets the document title.\n        *\n        *   @param title The title to set.\n        ***************************************************************************************************************/\n        public static setTitle( title:string ) : void\n        {\n            document.title = title;\n        }\n\n        /** ************************************************************************************************************\n        *   Sets the document favicon path.\n        *\n        *   @param path The path to the favicon.\n        ***************************************************************************************************************/\n        public static setFavicon( path:string ) : void\n        {\n            const link:HTMLLinkElement = document.createElement( 'link' );\n            link.rel  = 'shortcut icon';\n            link.href = path;\n\n            document.head.appendChild( link );\n        }\n    }\n","\n    /** ****************************************************************************************************************\n    *   Offers additional mathematical functionality.\n    *******************************************************************************************************************/\n    export class MathUtil\n    {\n        /** ************************************************************************************************************\n        *   Converts an angle from degrees to radians.\n        *   The formula is: ( angleInDegrees * Math.PI / 180.0 )\n        *\n        *   @param angleInDegrees The angle in degrees.\n        *\n        *   @return The angle in radians.\n        ***************************************************************************************************************/\n        public static degreesToRad( angleInDegrees:number ) : number\n        {\n            return BABYLON.Angle.FromDegrees( angleInDegrees ).radians();\n        }\n\n        /** ************************************************************************************************************\n        *   Converts an angle from radians to degrees.\n        *   The formula is: ( angleInRad * 180.0 / Math.PI )\n        *\n        *   @param angleInRad The angle in radians.\n        *\n        *   @return The angle in degrees.\n        ***************************************************************************************************************/\n        public static radToDegrees( angleInRad:number ) : number\n        {\n            return BABYLON.Angle.FromRadians( angleInRad ).degrees();\n        }\n\n        /** ************************************************************************************************************\n        *   Returns a random integer between the given mininum and maximum.\n        *\n        *   @param min The minimum value to return by random.\n        *   @param max The maximum value to return by random.\n        *\n        *   @return A random integer in the specified tange.\n        ***************************************************************************************************************/\n        public static getRandomInt( min:number, max:number ) : number\n        {\n            return Math.floor( ( Math.random() * ( max + 1 - min ) ) + min );\n        }\n\n        /** ************************************************************************************************************\n        *   Normalizes any angle to => 0.0 and < 360.0 degrees.\n        *\n        *   @param angleDegrees The angle to normalize.\n        *\n        *   @return The normalized angle.\n        ***************************************************************************************************************/\n        public static normalizeAngleDegrees( angleDegrees:number ) : number\n        {\n            while ( angleDegrees > 360.0 )\n            {\n                angleDegrees -= 360.0;\n            }\n            while ( angleDegrees < 0.0   )\n            {\n                angleDegrees += 360.0;\n            }\n\n            return angleDegrees;\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the sine value of the given angle in degrees.\n        *\n        *   @param angleInDegrees An angle in degrees to get the sine for.\n        *\n        *   @return The sine value for the specified angle.\n        ***************************************************************************************************************/\n        public static sinDegrees( angleInDegrees:number ) : number\n        {\n            return Math.sin( MathUtil.degreesToRad( angleInDegrees ) );\n        }\n\n        /** ************************************************************************************************************\n        *   Delivers the cosine value of the given angle in degrees.\n        *\n        *   @param angleInDegrees An angle to get the cosine for.\n        *\n        *   @return The cosine value for the specified angle.\n        ***************************************************************************************************************/\n        public static cosDegrees( angleInDegrees:number ) : number\n        {\n            return Math.cos( MathUtil.degreesToRad( angleInDegrees ) );\n        }\n\n        /** ************************************************************************************************************\n        *   Calculates the volume of a cube.\n        *\n        *   @param width  Width  of the cube.\n        *   @param height Height of the cube.\n        *   @param depth  Depth  of the cube.\n        *\n        *   @return The volume of the cube.\n        ***************************************************************************************************************/\n        public static getCubeVolume( width:number, height:number, depth:number ) : number\n        {\n            return ( width * height * depth );\n        }\n\n        /** ************************************************************************************************************\n        *   Calculates the volume of a cylinder.\n        *\n        *   @param diameter Diameter of the cylinder.\n        *   @param height   The height of the cylinder.\n        *\n        *   @return The volume of the cylinder.\n        ***************************************************************************************************************/\n        public static getCylinderVolume( diameter:number, height:number ) : number\n        {\n            return ( ( Math.pow( ( diameter / 2 ), 2 ) * Math.PI ) * height );\n        }\n\n        /** ************************************************************************************************************\n        *   Calculates the volume of a sphere.\n        *\n        *   @param diameter Diameter of the sphere.\n        *\n        *   @return The volume of the sphere.\n        ***************************************************************************************************************/\n        public static getSphereVolume( diameter:number ) : number\n        {\n            return ( ( Math.pow( ( diameter / 2 ), 3 ) * Math.PI ) * 4 / 3 );\n        }\n\n        /** ************************************************************************************************************\n        *   Gets the distant point from the given source vector, rotated by the specified rotation.\n        *\n        *   @param source   The source vector.\n        *   @param rotation The desired rotation of the distant point.\n        *   @param distance The distance from the source point.\n        *\n        *   @return The rotated distant point.\n        ***************************************************************************************************************/\n        public static rotateVector\n        (\n            source   :BABYLON.Vector3,\n            rotation :BABYLON.Vector3,\n            distance :number\n        )\n        : BABYLON.Vector3\n        {\n            const distantVector  :BABYLON.Vector3 = new BABYLON.Vector3( 0.0, 0.0, distance );\n            const rotationMatrix :BABYLON.Matrix  = BABYLON.Matrix.RotationYawPitchRoll\n            (\n                MathUtil.degreesToRad( rotation.y ),\n                MathUtil.degreesToRad( rotation.x ),\n                MathUtil.degreesToRad( rotation.z )\n            );\n\n            const rotatedDistantVector:BABYLON.Vector3 = BABYLON.Vector3.TransformCoordinates\n            (\n                distantVector,\n                rotationMatrix\n            );\n\n            return source.add( rotatedDistantVector );\n        }\n    }\n","\n    /** The Moment.js library import. */\n    const moment:any = require('moment');\n\n    /** ****************************************************************************************************************\n    *   Offers extended string functionality.\n    *******************************************************************************************************************/\n    export class StringUtil\n    {\n        /** ************************************************************************************************************\n        *   Returns a formatted timestamp of the current system date and time.\n        *\n        *   @return string A formatted timestamp of the current system date and time.\n        ***************************************************************************************************************/\n        public static getDateTimeString():string\n        {\n            return new moment().format( 'DD.MM.YYYY HH:mm:ss' );\n        }\n\n        /** ************************************************************************************************************\n        *   Returns an array of all found regular expression matches.\n        *   The subject will need the 'multiple' modifier for this method to work as expected.\n        *   e.g. /[a-z]+/g\n        *\n        *   @param subject The target string to apply the regular expression search on.\n        *   @param regEx   The regular expression.\n        *                  This string MUST NOT be enclosed in string quotes!\n        *   @return        An array containing all matched results.\n        ***************************************************************************************************************/\n        public static searchRegEx( subject:string, regEx:RegExp ) : string[]\n        {\n            const results:RegExpMatchArray = regEx.exec( subject );\n            const ret:string[]             = [];\n\n            if ( results !== null )\n            {\n                for ( const result of results )\n                {\n                    ret.push( result );\n                }\n            }\n\n            return ret;\n        }\n    }\n","\n    import * as bz from './de/mayflower/bz';\n/*\n    ( global as any ).BABYLON = require( 'babylonjs' );\n    ( global as any ).CANNON  = require( 'cannon' );\n    ( global as any ).earcut  = require( 'earcut' );\n*/\n    /** ****************************************************************************************************************\n    *   Being invoked when the page is loaded completely.\n    *******************************************************************************************************************/\n    window.onload = () : void  =>\n    {\n        bz.Main.main();\n    };\n\n    /** ****************************************************************************************************************\n    *   Being invoked when the page is left.\n    *******************************************************************************************************************/\n    window.onunload = () : void  =>\n    {\n    };\n","module.exports = BABYLON;","module.exports = BABYLON.GUI;"],"sourceRoot":""}